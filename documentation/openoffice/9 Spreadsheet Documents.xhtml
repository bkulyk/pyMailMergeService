<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><title>Spreadsheet Documents</title><link rel="stylesheet" type="text/css" href="./9 Spreadsheet Documents_files/Spreadsheet.css" /><meta name="generator" content="StarOffice/OpenOffice XSLT (http://xml.openoffice.org/sx2ml)" /><meta name="author" content="Diane O&apos;Brien" /><meta name="created" content="2002-08-09T10:43:13" /><meta name="changedby" content="JÃ¼rgen Schmidt" /><meta name="changed" content="2007-07-04T16:29:00" /><base href="." />
</head><body dir="ltr"><div id="wm-ipp" style="position: relative; padding-top: 0px; padding-right: 5px; padding-bottom: 0px; padding-left: 5px; min-height: 70px; min-width: 800px; z-index: 9000; display: none; ">
<div id="wm-ipp-inside" style="position:fixed;padding:0!important;margin:0!important;width:97%;min-width:780px;border:5px solid #000;border-top:none;background-image:url(http://static.waybackmachine.org/images/toolbar/wm_tb_bk_trns.png);text-align:center;-moz-box-shadow:1px 1px 3px #333;-webkit-box-shadow:1px 1px 3px #333;box-shadow:1px 1px 3px #333;font-size:11px!important;font-family:&apos;Lucida Grande&apos;,&apos;Arial&apos;,sans-serif!important;">
   <table style="border-collapse:collapse;margin:0;padding:0;width:100%;"><tbody><tr>
   <td style="padding:10px;vertical-align:top;min-width:110px;">
   <a href="http://waybackmachine.org/" title="Wayback Machine home page" style="background-color:transparent;border:none;"><img src="./9 Spreadsheet Documents_files/wayback-toolbar-logo.png" alt="Wayback Machine" width="110" height="39" border="0" /></a>
   </td>
   <td style="padding:0!important;text-align:center;vertical-align:top;width:100%;">

       <table style="border-collapse:collapse;margin:0 auto;padding:0;width:570px;"><tbody><tr>
       <td style="padding:3px 0;" colspan="2">
       <form target="_top" method="get" action="http://waybackmachine.org/form-submit.jsp" name="wmtb" id="wmtb" style="margin:0!important;padding:0!important;"><input type="text" name="url" id="wmtbURL" value="http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" style="width:400px;font-size:11px;font-family:&apos;Lucida Grande&apos;,&apos;Arial&apos;,sans-serif;" onfocus="javascript:this.focus();this.select();" /><input type="hidden" name="type" value="replay" /><input type="hidden" name="date" value="20090426014116" /><input type="submit" value="Go" style="font-size:11px;font-family:&apos;Lucida Grande&apos;,&apos;Arial&apos;,sans-serif;margin-left:5px;" /><span id="wm_tb_options" style="display:block;" /></form>
       </td>
       <td style="vertical-align:bottom;padding:5px 0 0 0!important;" rowspan="2">
           <table style="border-collapse:collapse;width:110px;color:#99a;font-family:&apos;Helvetica&apos;,&apos;Lucida Grande&apos;,&apos;Arial&apos;,sans-serif;"><tbody>
			
           <!-- NEXT/PREV MONTH NAV AND MONTH INDICATOR -->
           <tr style="width:110px;height:16px;font-size:10px!important;">
           	<td style="padding-right:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="http://replay.waybackmachine.org/20090223073545/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="23 Feb 2009"><strong>FEB</strong></a>
		                
               </td>
               <td id="displayMonthEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight:bold;text-transform:uppercase;width:34px;height:15px;padding-top:1px;text-align:center;" title="You are here: 1:41:16 Apr 26, 2009">APR</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight:bold;text-transform:uppercase;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="http://replay.waybackmachine.org/20090529080959/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="29 May 2009"><strong>MAY</strong></a>
		                
               </td>
           </tr>

           <!-- NEXT/PREV CAPTURE NAV AND DAY OF MONTH INDICATOR -->
           <tr>
               <td style="padding-right:9px;white-space:nowrap;overflow:visible;text-align:right!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="http://replay.waybackmachine.org/20090326043540/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" title="4:35:40 Mar 26, 2009" style="background-color:transparent;border:none;"><img src="./9 Spreadsheet Documents_files/wm_tb_prv_on.png" alt="Previous capture" width="14" height="16" border="0" /></a>
		                
               </td>
               <td id="displayDayEl" style="background:#000;color:#ff0;width:34px;height:24px;padding:2px 0 0 0;text-align:center;font-size:24px;font-weight: bold;" title="You are here: 1:41:16 Apr 26, 2009">26</td>
				<td style="padding-left:9px;white-space:nowrap;overflow:visible;text-align:left!important;vertical-align:middle!important;" nowrap="nowrap">
               
		                <a href="http://replay.waybackmachine.org/20090529080959/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" title="8:09:59 May 29, 2009" style="background-color:transparent;border:none;"><img src="./9 Spreadsheet Documents_files/wm_tb_nxt_on.png" alt="Next capture" width="14" height="16" border="0" /></a>
		                
			    </td>
           </tr>

           <!-- NEXT/PREV YEAR NAV AND YEAR INDICATOR -->
           <tr style="width:110px;height:13px;font-size:9px!important;">
				<td style="padding-right:9px;font-size:11px!important;font-weight: bold;text-align:right;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
		                <a href="http://replay.waybackmachine.org/20080418065941/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" style="text-decoration:none;color:#33f;font-weight:bold;background-color:transparent;border:none;" title="18 Apr 2008"><strong>2008</strong></a>
		                
               </td>
               <td id="displayYearEl" style="background:#000;color:#ff0;font-size:11px!important;font-weight: bold;padding-top:1px;width:34px;height:13px;text-align:center;" title="You are here: 1:41:16 Apr 26, 2009">2009</td>
				<td style="padding-left:9px;font-size:11px!important;font-weight: bold;white-space:nowrap;overflow:visible;" nowrap="nowrap">
               
                       2010
                       
				</td>
           </tr>
           </tbody></table>
       </td>

       </tr>
       <tr>
       <td style="vertical-align:middle;padding:0!important;">
           <a href="http://waybackmachine.org/20090426014116*/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml" style="color:#33f;font-size:11px;font-weight:bold;background-color:transparent;border:none;" title="See a list of every capture for this URL"><strong>65 captures</strong></a>
           <div style="margin:0!important;padding:0!important;color:#666;font-size:9px;padding-top:2px!important;white-space:nowrap;" title="Timespan for captures of this URL">30 Jan 06 - 29 May 09</div>
       </td>
       <td style="padding:0!important;">
       <a style="position:relative; white-space:nowrap; width:400px;height:27px;" href="" id="wm-graph-anchor">
       <div id="wm-ipp-sparkline" style="position:relative; white-space:nowrap; width:400px;height:27px;background-color:#fff;cursor:pointer;border-right:1px solid #ccc;" title="Explore captures for this URL">
			<img id="sparklineImgId" style="position:absolute; z-index:9012; top:0px; left:0px;" onmouseover="showTrackers(&apos;inline&apos;);" onmouseout="showTrackers(&apos;none&apos;);" onmousemove="trackMouseMove(event,this)" alt="sparklines" width="400" height="27" border="0" src="./9 Spreadsheet Documents_files/graph.jsp" />
			<img id="wbMouseTrackYearImg" style="display:none; position:absolute; z-index:9010;" width="25" height="27" border="0" src="./9 Spreadsheet Documents_files/transp-yellow-pixel.png" />
			<img id="wbMouseTrackMonthImg" style="display:none; position:absolute; z-index:9011; " width="2" height="27" border="0" src="./9 Spreadsheet Documents_files/transp-red-pixel.png" />
       </div>
		</a>

       </td>
       </tr></tbody></table>
   </td>
   <td style="text-align:right;padding:5px;width:65px;font-size:11px!important;">
       <a href="javascript:;" onclick="document.getElementById(&apos;wm-ipp&apos;).style.display=&apos;none&apos;;" style="display:block;padding-right:18px;background:url(http://static.waybackmachine.org/images/toolbar/wm_tb_close.png) no-repeat 100% 0;color:#33f;font-family:&apos;Lucida Grande&apos;,&apos;Arial&apos;,sans-serif;margin-bottom:23px;background-color:transparent;border:none;" title="Close the toolbar">Close</a>
       <a href="http://faq.waybackmachine.org/" style="display:block;padding-right:18px;background:url(http://static.waybackmachine.org/images/toolbar/wm_tb_help.png) no-repeat 100% 0;color:#33f;font-family:&apos;Lucida Grande&apos;,&apos;Arial&apos;,sans-serif;background-color:transparent;border:none;" title="Get some help using the Wayback Machine">Help</a>
   </td>
   </tr></tbody></table>

</div>
</div>
<!-- BEGIN WAYBACK TOOLBAR INSERT -->

<script type="text/javascript" src="./9 Spreadsheet Documents_files/disclaim-element.js" />
<script type="text/javascript" src="./9 Spreadsheet Documents_files/graph-calc.js" />
<script type="text/javascript" src="./9 Spreadsheet Documents_files/jquery.min.js" />
<script type="text/javascript">
//<![CDATA[
var firstDate = 820454400000;
var lastDate = 1325375999999;
var wbPrefix = "http://replay.waybackmachine.org/";
var wbCurrentUrl = "http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml";

var curYear = -1;
var curMonth = -1;
var yearCount = 16;
var firstYear = 1996;
var imgW]]><![CDATA[idth=400;
var yearImgWidth = 25;
var monthImgWidth = 2;
var trackerVal = "none";
var displayDay = "26";
var displayMonth = "Apr";
var displayYear = "2009";
var prettyMonths = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];

function showTrackers(val) {
	if(val == trackerVal) {
		return;
	}
	if(val == "inline") {
		document.getElementById("displayYearEl").style.color = "#ec008c";
		document.getElementById("displayMonthEl").style.color = "#ec008c";
		document.getElementById("displayDayEl").style.color = "#ec008c";		
	} else {
		document.getElementById("displayYearEl").innerHTML = displayYear;
		document.getElementById("displayYearEl").style.color = "#ff0";
		document.getElementById("displayMonthEl").innerHTML = displayMonth;
		document.getElementById("displayMonthEl").style.color = "#ff0";
		document.getElementById("displayDayEl").innerHTML = displayDay;
		document.getElementById("displayDayEl").style.color = "#ff0";
	}
   document.getElementById("wbMouseTrackYearImg").style.display = val;
   document.getElementById("wbMouseTrackMonthImg").style.display = val;
   trackerVal = val;
}
function getElementX2(obj) {
	var thing = jQuery(obj);
	if((thing == undefined) 
			|| (typeof thing == "undefined") 
			|| (typeof thing.offset == "undefined")) {
		return getElementX(obj);
	}
	return Math.round(thing.offset().left);
}
function trackMouseMove(event,element) {

   var eventX = getEventX(event);
   var elementX = getElementX2(element);
   var xOff = eventX - elementX;
	if(xOff < 0) {
		xOff = 0;
	} else if(xOff > imgWidth) {
		xOff = imgWidth;
	}
   var monthOff = xOff % yearImgWidth;

   var year = Math.floor(xOff / yearImgWidth);
	var yearStart = year * yearImgWidth;
   var monthOfYear = Math.floor(monthOff / monthImgWidth);
   if(monthOfYear > 11) {
       monthOfYear = 11;
   }
   // 1 extra border pixel at the left edge of the year:
   var month = (year * 12) + monthOfYear;
   var day = 1;
	if(monthOff % 2 == 1) {
		day = 15;
	}
	var dateString = 
		zeroPad(year + firstYear) + 
		zeroPad(monthOfYear+1,2) +
		zeroPad(day,2) + "000000";

	var monthString = prettyMonths[monthOfYear];
	document.getElementById("displayYearEl").innerHTML = year + 1996;
	document.getElementById("displayMonthEl").innerHTML = monthString;
	// looks too jarring when it changes..
	//document.getElementById("displayDayEl").innerHTML = zeroPad(day,2);

	var url = wbPrefix + dateString + '/' +  wbCurrentUrl;
	document.getElementById('wm-graph-anchor').href = url;

   //document.getElementById("wmtbURL").value="evX("+eventX+") elX("+elementX+") xO("+xOff+") y("+year+") m("+month+") monthOff("+monthOff+") DS("+dateString+") Moy("+monthOfYear+") ms("+monthString+")";
   if(curYear != year) {
       var yrOff = year * yearImgWidth;
       document.getElementById("wbMouseTrackYearImg").style.left = yrOff + "px";
       curYear = year;
   }
   if(curMonth != month) {
       var mtOff = year + (month * monthImgWidth) + 1;
       document.getElementById("wbMouseTrackMonthImg").style.left = mtOff + "px";
       curMonth = month;
   }
}
//]]>
</script>

<style type="text/css">body{margin-top:0!important;padding-top:0!important;min-width:800px!important;}#wm-ipp a:hover{text-decoration:underline!important;}</style>

<script type="text/javascript">
 var wmDisclaimBanner = document.getElementById("wm-ipp");
 if(wmDisclaimBanner != null) {
   disclaimElement(wmDisclaimBanner);
 }
</script>
<!-- END WAYBACK TOOLBAR INSERT -->
<p style="text-align:center;"><small>[ <a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml" title="Link to previous document">Previous document</a> | <a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/DevelopersGuide.xhtml" title="Link to the Content Table">Content Table</a> | <a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Drawing/Drawing.xhtml" title="Link to next document">Next document</a> ]</small></p>
  
  
  
  <h1 style="margin-left:2.54cm;" class="P3"><a name="1_Spreadsheet_Documents" />9Â Â Spreadsheet Documents</h1>
  <p class="Under_Head1">Â </p>
  <p class="Paragraph">Â </p>
  <h2 class="Head2"><a name="1_1_Overview" />9.1Â Â Overview</h2>
  <p class="Paragraph"><span class="T2">OpenOffice.org</span> API knows three variants of tables: <span class="Emphasis">text tables</span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml#1_3_4_Tables" title="see chapter 8.3.4 Text Documents - Working with Text Documents - Tables">8.3.4 Text Documents - Working with Text Documents - Tables</a></span>), <span class="Emphasis">database tables</span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Database/Database.xhtml#1_4_3_3_Table_Service" title="see chapter 13.4.3 Database Access - Database Design - Using SDBCX to Access the Database Design - Table Service">13.4.3 Database Access - Database Design - Using SDBCX to Access the Database Design - Table Service</a></span>) and <span class="Emphasis">spreadsheets</span>. Each of the table concepts have their own purpose. Text tables handle text contents, database tables offer database functionality and spreadsheets operate on data cells that can be evaluated. Being specialized in such a way means that each concept has its strength. Text tables offer full functionality for text formatting, where spreadsheets support complex calculations. Alternately, spreadsheets support only basic formatting capabilities and text tables perform elementary calculations.</p>
  <p class="Paragraph">The implementation of the various tables differ due to each of their specializations. Basic table features are defined in the module <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/module-ix.html" title="see module com.sun.star.tabletype">com.sun.star.table</a></span>. Regarding the compatibility of text and spreadsheet tables, the corresponding features are also located in the module <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/module-ix.html" title="see module com.sun.star.tabletype">com.sun.star.table</a></span>. In addition, spreadsheet tables are fully based on the specifications given and are extended by additional specifications from the module <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/module-ix.html" title="see module com.sun.star.sheettype">com.sun.star.sheet</a></span>. Several services of the spreadsheet application representing cells and cell ranges extend the common services from the module com::sun::star::table. The following table shows the services for cells and cell ranges.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table2"><colgroup><col width="347" /><col width="358" /></colgroup><tr><td style="text-align:left;width:7.59cm; " class="Table2A1">
     <p class="TableHead">Spreadsheet serviceÂ </p>
    </td><td style="text-align:left;width:7.849cm; " class="Table2B1">
     <p class="TableHead">Included com::sun::star::table serviceÂ </p>
    </td></tr><tr><td style="text-align:left;width:7.59cm; " class="Table2A2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span></p>
    </td><td style="text-align:left;width:7.849cm; " class="Table2B2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/Cell.html" title="see type com.sun.star.table.Cell">com.sun.star.table.Cell</a></span></p>
    </td></tr><tr><td style="text-align:left;width:7.59cm; " class="Table2A2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Cells.html" title="see type com.sun.star.sheet.Cells">com.sun.star.sheet.Cells</a></span></p>
    </td><td style="text-align:left;width:7.849cm; " class="Table2B2">
     <p class="TextInTable">-Â </p>
    </td></tr><tr><td style="text-align:left;width:7.59cm; " class="Table2A2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span></p>
    </td><td style="text-align:left;width:7.849cm; " class="Table2B2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRange.html" title="see type com.sun.star.table.CellRange">com.sun.star.table.CellRange</a></span></p>
    </td></tr><tr><td style="text-align:left;width:7.59cm; " class="Table2A2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span></p>
    </td><td style="text-align:left;width:7.849cm; " class="Table2B2">
     <p class="TextInTable">-Â </p>
    </td></tr><tr><td style="text-align:left;width:7.59cm; " class="Table2A2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellCursor.html" title="see type com.sun.star.sheet.SheetCellCursor">com.sun.star.sheet.SheetCellCursor</a></span></p>
    </td><td style="text-align:left;width:7.849cm; " class="Table2B2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellCursor.html" title="see type com.sun.star.table.CellCursor">com.sun.star.table.CellCursor</a></span></p>
    </td></tr></table></div>
  <p class="Paragraph">The spreadsheet document model in the OpenOffice.org API has five major architectural areas (see <span class="T3"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#refIllustration0">Illustration 9.1</a></span>) The five areas are:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P4" style="margin-left:2.5cm;"><p class="P4" style="margin-left:0cm;">Spreadsheets ContainerÂ </p></li>
   <li class="P4" style="margin-left:2.5cm;"><p class="P4" style="margin-left:0cm;">Service Manager (document internal)Â </p></li>
   <li class="P4" style="margin-left:2.5cm;"><p class="P4" style="margin-left:0cm;">DrawPagesÂ </p></li>
   <li class="P4" style="margin-left:2.5cm;"><p class="P4" style="margin-left:0cm;">Content PropertiesÂ </p></li>
   <li class="P4" style="margin-left:2.5cm;"><p class="P4" style="margin-left:0cm;">Objects for StylingÂ </p></li>
  </ul>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table28"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table28A1">
      <div class="Paragraph"><div style="width: 13.4cm; " id="Frame2" class="fr2">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetDocumentOverview.png" title="link to the full-sized graphic &quot;./SpreadsheetDocumentOverview.png&quot;"><img border="0" width="639" height="774" alt="Overview graphic of the Spreadsheet Document model" src="./9 Spreadsheet Documents_files/SpreadsheetDocumentOverview.png" class="fr3" /></a>Illustration <a name="refIllustration0">9.1</a>: Spreadsheet Document Component</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">The core of the spreadsheet document model are the spreadsheets contained in the spreadsheets container. When working with document data, almost everything happens in the spreadsheet objects extracted from the spreadsheets container.</p>
  <p class="Paragraph">The service manager of the spreadsheet document model creates shape objects, text fields for page headers and form controls that can be added to spreadsheets. Note, that the document service manager is different from the main service manager used when connecting to the office. Each document model has its own service manager, so that the services can be adapted to the document they are required for. For instance, a text field is ordered and inserted into the page header text of a sheet using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XText.html#insertTextContent" title="see insertTextContent of type com.sun.star.text.XText:insertTextContent">com.sun.star.text.XText:insertTextContent</a>()</span>or the service manager is asked for a shape object and inserts it into a sheet using <span class="Codeintext">add()</span>at the drawpage.</p>
  <p class="Paragraph">Each sheet in a spreadsheet document can have a drawpage for drawing contents. A drawpage can be visualized as a transparent layer above a sheet. The spreadsheet model is able to provide all drawpages in a spreadsheet document at once.</p>
  <p class="Paragraph">Linked and named contents from all sheets are accessed through content properties at the document model. There are no content suppliers as in text documents, because the actual content of a spreadsheet document lies in its sheet objects. Rather, there are only certain properties for named and linked contents in all sheets.Â </p>
  <p class="Paragraph">Finally, there are services that allow for document wide styling and structuring of the spreadsheet document. Among them are style family suppliers for cells and pages, and a number formats supplier.Â </p>
  <p class="Paragraph">Besides these five architectural areas, there are document and calculation aspects shown at the bottom of the illustration. The document aspects of our model are: it is printable, storable, and modifiable, it can be protected and audited, and it supplies general information about itself. On the lower left of the illustration, the calculation aspects are listed. Although almost all spreadsheet functionality can be found at the spreadsheet objects, a few common functions are bound to the spreadsheet document model: goal seeking, consolidation and recalculation of all cells.Â </p>
  <p class="Paragraph">Finally, the document model has a controller that provides access to the graphical user interface of the model and has knowledge about the current view status in the user interface (see the upper left of the illustration).Â </p>
  <p class="Paragraph">The usage of the spreadsheet objects in the spreadsheets container is discussed in detail in the section <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_Working_with_Spreadsheets" title="see chapter 9.3 Spreadsheet Documents - Working with Spreadsheets">9.3 Spreadsheet Documents - Working with Spreadsheets</a></span>. Before discussing spreadsheet objects, consider two examples and how they handle a spreadsheet document, that is, how to create, open, save and print.</p>
  <h3 class="Head3"><a name="1_1_1_Example_3A_Adding_a_New_Spreadsheet" />9.1.1Â Â Example: Adding a New Spreadsheet</h3>
  <p class="Paragraph">The following helper method opens a new spreadsheet document component. The method <span class="Codeintext">getRemoteServiceManager()</span> retrieves a connection. Refer to chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/FirstSteps/FirstSteps.xhtml#1_First_Steps" title="see chapter 2 First Steps">2 First Steps</a></span> for additional information.</p>
  <p class="Code">import com.sun.star.lang.XComponent;Â </p>
  <p class="Code">import com.sun.star.frame.XComponentLoader;Â </p>
  <p class="Code">import com.sun.star.beans.PropertyValue;Â </p>
  <p class="Code">Â </p>
  <p class="Code">...Â </p>
  <p class="Code">Â </p>
  <p class="Code">protected XComponent newSpreadsheetComponent() throws java.lang.Exception {Â </p>
  <p class="Code">Â  Â  String loadUrl = "private:factory/scalc";</p>
  <p class="Code">Â  Â  xRemoteServiceManager = this.getRemoteServiceManager(unoUrl);</p>
  <p class="Code">Â  Â  Object desktop = xRemoteServiceManager.createInstanceWithContext(</p>
  <p class="Code">Â  Â  Â  Â  "com.sun.star.frame.Desktop", xRemoteContext);</p>
  <p class="Code">Â  Â  XComponentLoader xComponentLoader = (XComponentLoader)UnoRuntime.queryInterface(</p>
  <p class="Code">Â  Â  Â  Â  XComponentLoader.class, desktop);</p>
  <p class="Code">Â  Â  PropertyValue[] loadProps = new PropertyValue[0];</p>
  <p class="Code">Â  Â  return xComponentLoader.loadComponentFromURL(loadUrl, "_blank", 0, loadProps); Â  Â </p>
  <p class="Code">}Â </p>
  <p class="Paragraph">Our helper returns a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/lang/XComponent.html" title="see type com.sun.star.lang.XComponent">com.sun.star.lang.XComponent</a></span> interface for the recently loaded document. Now the <span class="Codeintext">XComponent</span> is passed to the following method <span class="Codeintext">insertSpreadsheet()</span> to add a new spreadsheet to our document. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetDocHelper.java" title="goto source Spreadsheet/SpreadsheetDocHelper.java">Spreadsheet/SpreadsheetDocHelper.java</a>)</p>
  <p class="Code">import com.sun.star.sheet.XSpreadsheetDcoument;Â </p>
  <p class="Code">import com.sun.star.sheet.XSpreadsheet; Â </p>
  <p class="Code">Â </p>
  <p class="Code">...Â </p>
  <p class="Code">Â </p>
  <p class="Code">/** Inserts a new empty spreadsheet with the specified name.Â </p>
  <p class="Code">Â  Â  @param xSheetComponent Â The XComponent interface of a loaded document object</p>
  <p class="Code">Â  Â  @param aName Â The name of the new sheet.</p>
  <p class="Code">Â  Â  @param nIndex Â The insertion index.</p>
  <p class="Code">Â  Â  @return Â The XSpreadsheet interface of the new sheet.</p>
  <p class="Code">Â */</p>
  <p class="Code">public XSpreadsheet insertSpreadsheet(Â </p>
  <p class="Code">Â  Â  Â  Â  XComponent xSheetComponent, String aName, short nIndex) {</p>
  <p class="Code">Â  Â  XSpreadsheetDocument xDocument = (XSpreadsheetDocument)UnoRuntime.queryInterface(</p>
  <p class="Code">Â  Â  Â  Â  XSpreadsheetDocument.class, xSheetComponent);</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Collection of sheets</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheets xSheets = xDocument.getSheets();</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheet xSheet = null;</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  try {</p>
  <p class="Code">Â  Â  Â  Â  xSheets.<span class="CODEEmphasis">insertNewByName</span>(aName, nIndex);</p>
  <p class="Code">Â  Â  Â  Â  xSheet = xSheets.getByName(aName);</p>
  <p class="Code">Â  Â  } catch (Exception ex) {</p>
  <p class="Code">Â  Â  }</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  return xSheet;</p>
  <p class="Code">}Â </p>
  <h3 class="Head3"><a name="1_1_2_Example_3A_Editing_Spreadsheet_Cells" />9.1.2Â Â Example: Editing Spreadsheet Cells</h3>
  <p class="Paragraph">The method <span class="Codeintext">insertSpreadsheet()</span> returns a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> interface. This interface is passed to the method below, which shows how to access and modify the content and formatting of single cells. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> returned by <span class="Codeintext">insertSpreadsheet()</span> is derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span>. By working with it, cells can be accessed immediately using <span class="Codeintext">getCellByPosition()</span>: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/GeneralTableSample.java" title="goto source Spreadsheet/GeneralTableSample.java">Spreadsheet/GeneralTableSample.java</a>)</p>
  <p class="Code">void cellWork(XSpreadsheet xRange) {Â </p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = null;</p>
  <p class="Code">Â  Â  com.sun.star.table.XCell xCell = null;</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Access and modify a VALUE CELL</p>
  <p class="Code">Â  Â  xCell = xRange.getCellByPosition(0, 0);</p>
  <p class="Code">Â  Â  // Set cell value.</p>
  <p class="Code">Â  Â  xCell.setValue(1234);</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Get cell value.</p>
  <p class="Code">Â  Â  double nDblValue = xCell.getValue() * 2;</p>
  <p class="Code">Â  Â  xRange.getCellByPosition(0, 1).setValue(nDblValue);</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Create a FORMULA CELL</p>
  <p class="Code">Â  Â  xCell = xRange.getCellByPosition(0, 2);</p>
  <p class="Code">Â  Â  // Set formula string.</p>
  <p class="Code">Â  Â  xCell.setFormula("=1/0");</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Get error type.</p>
  <p class="Code">Â  Â  boolean bValid = (xCell.getError() == 0);</p>
  <p class="Code">Â  Â  // Get formula string.</p>
  <p class="Code">Â  Â  String aText = "The formula " + xCell.getFormula() + " is ";</p>
  <p class="Code">Â  Â  aText += bValid ? "valid." : "erroneous.";</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Insert a TEXT CELL using the XText interface</p>
  <p class="Code">Â  Â  xCell = xRange.getCellByPosition(0, 3);</p>
  <p class="Code">Â  Â  com.sun.star.text.XText xCellText = (com.sun.star.text.XText)</p>
  <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.text.XText.class, xCell);</p>
  <p class="Code">Â  Â  com.sun.star.text.XTextCursor xTextCursor = xCellText.createTextCursor();</p>
  <p class="Code">Â  Â  xCellText.insertString(xTextCursor, aText, false);</p>
  <p class="Code">}Â </p>
  <h2 class="Head2"><a name="1_2_Handling_Spreadsheet_Document_Files" />9.2Â Â Handling Spreadsheet Document Files</h2>
  <h3 class="Head3"><a name="1_2_1_Creating_and_Loading_Spreadsheet_Documents" />9.2.1Â Â Creating and Loading Spreadsheet Documents</h3>
  <p class="Paragraph">If a document in <span class="T2">OpenOffice.org</span> API is required, begin by getting a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/frame/Desktop.html" title="see type com.sun.star.frame.Desktop">com.sun.star.frame.Desktop</a></span> service from the service manager. The desktop handles all document components in <span class="T2">OpenOffice.org</span> API. It is discussed thoroughly in the chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_Office_Development" title="see chapter 7 Office Development">7 Office Development</a></span>. Office documents are often called components, because they support the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/lang/XComponent.html" title="see type com.sun.star.lang.XComponent">com.sun.star.lang.XComponent</a></span> interface. An <span class="Codeintext">XComponent</span> is a UNO object that can be disposed of directly and broadcast an event to other UNO objects when the object is disposed.</p>
  <p class="Paragraph">The Desktop can load new and existing components from a URL. For this purpose it has a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/frame/XComponentLoader.html" title="see type com.sun.star.frame.XComponentLoader">com.sun.star.frame.XComponentLoader</a></span> interface that has one single method to load and instantiate components from a URL into a frame:</p>
  <p class="MethodSignatures">com::sun::star::lang::XComponent <span class="T4">loadComponentFromURL</span>( [IN] string aURL, </p>
  <p class="MethodSignatures">Â  Â  Â  Â  Â  Â [IN] string aTargetFrameName, </p>
  <p class="MethodSignatures">Â  Â  Â  Â  Â  Â [IN] long nSearchFlags, </p>
  <p class="MethodSignatures">Â  Â  Â  Â  Â  Â [IN] sequence &lt;com::sun::star::beans::PropertyValue[] aArgs &gt; )</p>
  <p class="Paragraph">The interesting parameters in our context is the URL that describes the resource that is loaded and the load arguments. For the target frame, pass a <span class="Codeintext">"_blank"</span> and set the search flags to <span class="Codeintext">0</span>. In most cases, existing frames are not reused.</p>
  <p class="Paragraph">The URL can be a <span class="Codeintext">file:</span> URL, an <span class="Codeintext">http:</span> URL, an <span class="Codeintext">ftp:</span> URL or a <span class="Codeintext">private:</span> URL. Locate the correct URL format in the <span class="ButtonsMenus">Load URL</span> box in the function bar of <span class="T2">OpenOffice.org</span> API. For new spreadsheet documents, a special URL scheme is used. The scheme is "private:", followed by "factory". The resource is "scalc" for <span class="T2">OpenOffice.org</span> API spreadsheet documents. For a new spreadsheet document, use <span class="Codeintext">"</span>private:factory/scalc<span class="Codeintext">".</span></p>
  <p class="Paragraph">The load arguments are described in <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/document/MediaDescriptor.html" title="see type com.sun.star.document.MediaDescriptor">com.sun.star.document.MediaDescriptor</a></span>. The properties <span class="Codeintext">AsTemplate</span> and <span class="Codeintext">Hidden</span> are <span class="Codeintext">boolean</span> values and used for programming. If <span class="Codeintext">AsTemplate</span> is true, the loader creates a new untitled document from the given URL. If it is false, template files are loaded for editing. If <span class="Codeintext">Hidden</span> is <span class="Codeintext">true</span>, the document is loaded in the background. This is useful to generate a document in the background without letting the user observe what is happening. For instance, use it to generate a document and print it out without previewing. Refer to <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_Office_Development" title="see chapter 7 Office Development">7 Office Development</a></span> for other available options. This snippet loads a document in hidden mode:</p>
  <p class="Code">Â  Â  // the method getRemoteServiceManager is described in the chapter First Steps</p>
  <p class="Code">Â  Â  mxRemoteServiceManager = this.getRemoteServiceManager(unoUrl);</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // retrieve the Desktop object, we need its XComponentLoader</p>
  <p class="Code">Â  Â  Object desktop = mxRemoteServiceManager.createInstanceWithContext(</p>
  <p class="Code">Â  Â  Â  Â  "com.sun.star.frame.Desktop", mxRemoteContext);</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // query the XComponentLoader interface from the Desktop service</p>
  <p class="Code">Â  Â  XComponentLoader xComponentLoader = (XComponentLoader)UnoRuntime.queryInterface(</p>
  <p class="Code">Â  Â  Â  Â  XComponentLoader.class, desktop);</p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  // define load properties according to com.sun.star.document.MediaDescriptor</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  /* or simply create an empty array of com.sun.star.beans.PropertyValue structs:</p>
  <p class="Code">Â  Â  Â  Â PropertyValue[] loadProps = new PropertyValue[0]</p>
  <p class="Code">Â  Â  Â */</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // the boolean property Hidden tells the office to open a file in hidden mode</p>
  <p class="Code">Â  Â  PropertyValue[] loadProps = new PropertyValue[1];</p>
  <p class="Code">Â  Â  loadProps[0] = new PropertyValue();</p>
  <p class="Code">Â  Â  loadProps[0].Name = "Hidden";</p>
  <p class="Code">Â  Â  loadProps[0].Value = new Boolean(true);</p>
  <p class="Code">Â  Â  loadUrl = "file:///c:/MyCalcDocument.ods"</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // load</p>
  <p class="Code">Â  Â  return xComponentLoader.loadComponentFromURL(loadUrl, "_blank", 0, loadProps); Â  Â  Â  Â  Â  </p>
  <h3 class="Head3"><a name="1_2_2_Saving_Spreadsheet_Documents" />9.2.2Â Â Saving Spreadsheet Documents</h3>
  <h4 class="Head4"><a name="1_2_2_1_Storing" />Storing</h4>
  <p class="Paragraph">Documents are storable through their interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/frame/XStorable.html" title="see type com.sun.star.frame.XStorable">com.sun.star.frame.XStorable</a></span>. This interface is discussed in detail in <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_Office_Development" title="see chapter 7 Office Development">7 Office Development</a></span>. An <span class="Codeintext">XStorable</span> implements these operations:</p>
  <p class="MethodSignatures">boolean <span class="T4">hasLocation</span>()</p>
  <p class="MethodSignatures">string <span class="T4">getLocation</span>()</p>
  <p class="MethodSignatures">boolean <span class="T4">isReadonly</span>()</p>
  <p class="MethodSignatures">void <span class="T4">store</span>() </p>
  <p class="MethodSignatures">void <span class="T4">storeAsURL</span>([in] string aURL, [in] sequence&lt; com::sun::star::beans::PropertyValue &gt; aArgs)</p>
  <p class="MethodSignatures">void <span class="T4">storeToURL</span>([in] string aURL, [in] sequence&lt; com::sun::star::beans::PropertyValue &gt; aArgs)</p>
  <p class="Paragraph">The method names are evident. The method <span class="Codeintext">storeAsUrl()</span> is the exact representation of <span class="T5">File â Save As</span><span class="T6"> </span><span class="T1">from the </span><span class="T5">File</span><span class="T1"> menu, that is, it changes the current document location. In contrast, </span><span class="Codeintext">storeToUrl()</span> stores a copy to a new location, but leaves the current document URL untouched. </p>
  <h4 class="Head4"><a name="1_2_2_2_Exporting" />Exporting</h4>
  <p class="Paragraph">For exporting purposes, a filter name can be passed that triggers an export to other file formats. The property needed for this purpose is the string argument <span class="Codeintext">FilterName </span>that takes filter names defined in the configuration file:</p>
  <p class="Paragraph"><span class="wwwftpemail">&lt;OfficePath&gt;\share\config\registry\instance\org\openoffice\Office\TypeDetection.xml</span></p>
  <p class="Paragraph">In <span class="wwwftpemail">TypeDetection.xml</span> look for <span class="Codeintext">&lt;Filter/&gt;</span> elements, their <span class="Codeintext">cfg:name</span> attribute contains the needed strings for <span class="Codeintext">FilterName</span>. The proper filter name for StarWriter 5.x is "StarWriter 5.0", and the export format "MS Word 97" is also popular. This is the element in <span class="wwwftpemail">TypeDetection.xml </span>that describes the MS Excel 97 filter:</p>
  <p class="Code">&lt;Filter cfg:name="MS Excel 97"&gt;Â </p>
  <p class="Code">Â  Â &lt;Installed cfg:type="boolean"&gt;true&lt;/Installed&gt; </p>
  <p class="Code">Â  Â &lt;UIName cfg:type="string" cfg:localized="true"&gt;</p>
  <p class="Code">Â  Â  Â &lt;cfg:value xml:lang="en-US"&gt;Microsoft Excel 97/2000/XP&lt;/cfg:value&gt; </p>
  <p class="Code">Â  Â &lt;/UIName&gt;</p>
  <p class="Code">Â  Â &lt;Data cfg:type="string"&gt;5,calc_MS_Excel_97,com.sun.star.sheet.SpreadsheetDocument,,3,,0,,&lt;/Data&gt; </p>
  <p class="Code">Â &lt;/Filter&gt;</p>
  <p class="Paragraph">The following method stores a document using this filter:Â </p>
  <p class="Code">/** Store a document, using the MS Excel 97/2000/XP Filter Â </p>
  <p class="Code">Â */</p>
  <p class="Code">protected void storeDocComponent(XComponent xDoc, String storeUrl) throws java.lang.Exception {Â </p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  XStorable xStorable = (XStorable)UnoRuntime.queryInterface(XStorable.class, xDoc);</p>
  <p class="Code">Â  Â  PropertyValue[] storeProps = new PropertyValue[1];</p>
  <p class="Code">Â  Â  storeProps[0] = new PropertyValue();</p>
  <p class="Code">Â  Â  storeProps[0].Name = "FilterName";</p>
  <p class="Code">Â  Â  storeProps[0].Value = "MS Excel 97"; Â  Â  Â  Â </p>
  <p class="Code">Â  Â  xStorable.storeAsURL(storeUrl, storeProps); Â  Â  Â  Â  Â  </p>
  <p class="Code">} Â </p>
  <p class="Paragraph">If an empty array of <span class="Codeintext">PropertyValue</span> structs is passed, the native .ods format of <span class="T2">OpenOffice.org</span> API is used.</p>
  <h4 class="Head4"><a name="1_2_2_3_Filter_Options" />Filter Options</h4>
  <p class="Paragraph">Loading and saving <span class="T2">OpenOffice.org</span> API documents is described in <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_1_5_Handling_Documents" title="see chapter 7.1.5 Office Development - OpenOffice.org Application Environment - Handling Documents">7.1.5 Office Development - OpenOffice.org Application Environment - Handling Documents</a></span>. This section lists all the filter names for spreadsheet documents and describes the filter options for text file import.</p>
  <p class="Paragraph">The filter name and options are passed on loading or saving a document in a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/PropertyValue.html" title="see type com.sun.star.beans.PropertyValue">com.sun.star.beans.PropertyValue</a>s</span>. The property <span class="Codeintext">FilterName</span> contains the name and the property <span class="Codeintext">FilterOptions</span> contains the filter options.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table69"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table69A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table69B1">
      <p class="TipInTable">All filter names are case-sensitive. For compatibility reasons the filter names will not be changed. Therefore, some of the filters seem to have âcuriousâ names.Â </p>
     </td></tr></table></div>
  <p class="P5">The list of filter names (the last two columns show the possible directions of the filters):Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table70"><colgroup><col width="273" /><col width="296" /><col width="68" /><col width="67" /></colgroup><tr><td style="text-align:left;width:5.987cm; " class="Table70A1">
     <p class="TableHead">Filter nameÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A1">
     <p class="TableHead">DescriptionÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A1">
     <p class="TableHead">ImportÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D1">
     <p class="TableHead">ExportÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarOffice XML (Calc)Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Standard XML filterÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">calc_StarOffice_XML_Calc_TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">XML filter for templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 5.0Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">The binary format of StarOffice Calc 5.xÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 5.0 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">StarOffice Calc 5.x templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 4.0Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">The binary format of StarCalc 4.xÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 4.0 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 4.x templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 3.0Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">The binary format of StarCalc 3.xÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 3.0 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">StarCalc 3.x templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">HTML (StarCalc)Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">HTML filterÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">calc_HTML_WebQueryÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">HTML filter for external data queriesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">Â </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 97Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Microsoft Excel 97/2000/XPÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 97 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Microsoft Excel 97/2000/XP templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 95Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Microsoft Excel 5.0/95Â </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 5.0/95Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Different name for the same filterÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 95 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Microsoft Excel 5.0/95 templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 5.0/95 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Different name for the same filterÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 4.0Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Microsoft Excel 2.1/3.0/4.0Â </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">Â </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">MS Excel 4.0 Vorlage/TemplateÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Microsoft Excel 2.1/3.0/4.0 templatesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">Â </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">LotusÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Lotus 1-2-3Â </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">Â </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">Text - txt - csv (StarCalc)Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Comma separated valuesÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">Rich Text Format (StarCalc)Â </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">dBaseÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">SYLKÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Symbolic LinkÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr><tr><td style="text-align:left;width:5.987cm; " class="Table70A2">
     <p class="TextInTable">DIFÂ </p>
    </td><td style="text-align:left;width:6.488cm; " class="Table70A2">
     <p class="TextInTable">Data Interchange FormatÂ </p>
    </td><td style="text-align:left;width:1.494cm; " class="Table70A2">
     <p class="P6">âÂ </p>
    </td><td style="text-align:left;width:1.471cm; " class="Table70D2">
     <p class="P6">âÂ </p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_2_2_3_1_Filter_Options_for_Lotus_2C_dBase_and_DIF_Filters" />Filter Options for Lotus, dBase and DIF Filters</h5>
  <p class="Paragraph">These filters accept a string containing the numerical index of the used character set for single-byte characters, that is, 0 for the system character set.Â </p>
  <h5 class="Head5"><a name="1_2_2_3_2_Filter_Options_for_the_CSV_Filter" />Filter Options for the CSV Filter</h5>
  <p class="Paragraph">This filter accepts an option string containing five tokens, separated by commas. The following table shows an example string for a file with four columns of type date â number â number - number. In the table the tokens are numbered from (1) to (5). Each token is explained below.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table156"><colgroup><col width="183" /><col width="87" /><col width="85" /><col width="87" /><col width="93" /><col width="57" /><col width="113" /></colgroup><tr><td style="text-align:left;width:4.013cm; " class="Table156A1">
      <p class="TableHead">Example Filter Options StringÂ </p>
     </td><td style="text-align:left;width:1.914cm; " class="Table156A1">
      <p class="TableHead">Field <br />Separator <br />(1)</p>
     </td><td style="text-align:left;width:1.852cm; " class="Table156A1">
      <p class="TableHead">Text Delimiter (2)Â </p>
     </td><td style="text-align:left;width:1.912cm; " class="Table156A1">
      <p class="TableHead">Character Set <br />(3)</p>
     </td><td style="text-align:left;width:2.037cm; " class="Table156A1">
      <p class="TableHead">Number of First Line (4)Â </p>
     </td><td colspan="2" style="text-align:left;">
      <table border="0" cellspacing="0" cellpadding="0" width="100%"><colgroup><col width="57" /><col width="113" /></colgroup><tr><th colspan="2" style="text-align:left;width:1.242cm; " class="Table156F111">
         <p class="TableHead">Cell Format Codes for the four Columns <br />(5)</p>
        </th></tr><tr><th style="text-align:left;width:1.242cm; " class="Table156F112">
         <p class="TextInTable">ColumnÂ </p>
        </th><th style="text-align:left;width:2.466cm; " class="Table156F122">
         <p class="TextInTable">CodeÂ </p>
        </th></tr></table>
     </td></tr><tr><td style="text-align:left;width:4.013cm; " class="Table156A2">
     <p class="P7">File Format: <br />Four columns<br />date â num â num â num </p>
    </td><td style="text-align:left;width:1.914cm; " class="Table156A2">
     <p class="TextInTable">,Â </p>
    </td><td style="text-align:left;width:1.852cm; " class="Table156A2">
     <p class="TextInTable">"Â </p>
    </td><td style="text-align:left;width:1.912cm; " class="Table156A2">
     <p class="TextInTable">SystemÂ </p>
    </td><td style="text-align:left;width:2.037cm; " class="Table156A2">
     <p class="TextInTable">line no. 1Â </p>
    </td><td style="text-align:left;width:1.242cm; " class="Table156A2">
     <p class="TextInTable">1<br />2<br />3<br />4</p>
    </td><td style="text-align:left;width:2.466cm; " class="Table156G2">
     <p class="TextInTable">YY/MM/DD = 5<br />Standard = 1<br />Standard = 1<br />Standard = 1</p>
    </td></tr><tr><td style="text-align:left;width:4.013cm; " class="Table156A3">
     <p class="P7">TokenÂ </p>
    </td><td style="text-align:right; width:1.914cm; " class="Table156B3">
     <p class="TextInTable">44Â </p>
    </td><td style="text-align:right; width:1.852cm; " class="Table156B3">
     <p class="TextInTable">34Â </p>
    </td><td style="text-align:right; width:1.912cm; " class="Table156B3">
     <p class="TextInTable">0Â </p>
    </td><td style="text-align:right; width:2.037cm; " class="Table156B3">
     <p class="TextInTable">1Â </p>
    </td><td colspan="2" style="text-align:left;width:1.242cm; " class="Table156F122">
     <p class="TextInTable">1/5/2/1/3/1/4/1Â </p>
    </td></tr></table></div>
  <p class="Paragraph">For the filter options above, set the PropertyValue <span class="Codeintext">FilterOptions</span> in the load arguments to "44,34,0,1,1/5/2/1/3/1/4/1". There are a number of possible settings for the five tokens.</p>
  <ol style="margin-left:0.5cm;list-style-type:decimal; ">
   <li class="P8" style="margin-left:2.5cm;"><p class="P8" style="margin-left:0cm;">Field separator(s) as ASCII values. Multiple values are separated by the slash sign (â/â), that is, Â if the values are separated by semicolons and horizontal tabulators, the token would be 59/9. To treat several consecutive separators as one, the four letters <span class="Codeintext">/MRG</span> have to be appended to the token. If the file contains fixed width fields, the three letters <span class="Codeintext">FIX</span> are used.</p></li>
   <li class="P8" style="margin-left:2.5cm;"><p class="P8" style="margin-left:0cm;">The text delimiter as ASCII value, that is, 34 for double quotes and 39 for single quotes.Â </p></li>
   <li class="P8" style="margin-left:2.5cm;"><p class="P8" style="margin-left:0cm;">The character set used in the file as described above.Â </p></li>
   <li class="P8" style="margin-left:2.5cm;"><p class="P8" style="margin-left:0cm;">Number of the first line to convert. The first line in the file has the number 1.Â </p></li>
   <li class="P8" style="margin-left:2.5cm;"><p class="P8" style="margin-left:0cm;">Cell format of the columns. The content of this token depends on the value of the first token.Â </p></li>
  </ol>
  <ul style="margin-left:0.5cm;">
   <li class="P9" style="margin-left:3.75cm;"><p class="P9" style="margin-left:0cm;">If value separators are used, the form of this token is <span class="Emphasis">column/format</span>[<span class="Emphasis">/column/format/</span>...] where <span class="Emphasis">column</span> is the number of the column, with 1 being the leftmost column. The Â <span class="Emphasis">format</span> is explained below.</p></li>
   <li class="P9" style="margin-left:3.75cm;"><p class="P9" style="margin-left:0cm;">If the first token is <span class="Codeintext">FIX</span> it has the fo<span class="T7">rm </span><span class="T8">start/format</span><span class="T7">[</span><span class="T8">/start/format/...</span><span class="T7">], w</span>here <span class="Emphasis">start</span> is the number of the first character for this field, with 0 being the leftmost character in a line. The <span class="Emphasis">format</span> is explained below.</p></li>
  </ul>
  <p class="P10">Format specifies which cell format should be used for a field during import:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table157"><colgroup><col width="107" /><col width="430" /></colgroup><tr><td style="text-align:left;width:2.341cm; " class="Table157A1">
      <p class="P11">Format CodeÂ </p>
     </td><td style="text-align:left;width:9.414cm; " class="Table157B1">
      <p class="TableHead">MeaningÂ </p>
     </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">1Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">StandardÂ </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">2Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">TextÂ </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">3Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">MM/DD/YYÂ </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">4Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">DD/MM/YYÂ </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">5Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">YY/MM/DDÂ </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">6Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">-Â </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">7Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">-Â </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">8Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">-Â </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">9Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">ignore field (do not import)Â </p>
    </td></tr><tr><td style="text-align:right; width:2.341cm; " class="Table157A2">
     <p class="TextInTable">10Â </p>
    </td><td style="text-align:left;width:9.414cm; " class="Table157B2">
     <p class="P7">US-EnglishÂ </p>
    </td></tr></table></div>
  <p class="P10">The type code 10 indicates that the content of a field is US-English. This is useful if a field contains decimal numbers that are formatted according to the US system (using â.â as decimal separator and â,â as thousands separator). Using 10 as a format specifier for this field tells <span class="T2">OpenOffice.org</span> API to correctly interpret its numerical content, even if the decimal and thousands separator in the current language are different.</p>
  <h3 class="Head3"><a name="1_2_3_Printing_Spreadsheet_Documents" />9.2.3Â Â Printing Spreadsheet Documents</h3>
  <h4 class="Head4"><a name="1_2_3_1_Printer_and_Print_Job_Settings" />Printer and Print Job Settings</h4>
  <p class="Paragraph">Printing is a common office functionality. The chapter Â <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_Office_Development" title="see chapter 7 Office Development">7 Office Development</a></span> provides in-depth information about it. The spreadsheet document implements the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/XPrintable.html" title="see type com.sun.star.view.XPrintable">com.sun.star.view.XPrintable</a></span> interface for printing. It consists of three methods:</p>
  <p class="MethodSignatures">sequence&lt; com::sun::star::beans::PropertyValue &gt; <span class="T6">getPrinter</span>()</p>
  <p class="MethodSignatures">void <span class="T6">setPrinter</span>([in] sequence&lt; com::sun::star::beans::PropertyValue &gt; aPrinter)</p>
  <p class="MethodSignatures">void <span class="T6">print</span>([in] sequence&lt; com::sun::star::beans::PropertyValue &gt; xOptions)</p>
  <p class="Paragraph">The following code is used with a given document xDoc to print to the standard printer without any settings:Â </p>
  <p class="Code">Â  Â  // query the XPrintable interface from your document</p>
  <p class="Code">Â  Â  XPrintable xPrintable = (XPrintable)UnoRuntime.queryInterface(XPrintable.class, xDoc);</p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  // create an empty printOptions array</p>
  <p class="Code">Â  Â  PropertyValue[] printOpts = new PropertyValue[0];</p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  // kick off printingÂ  Â  Â  Â  </p>
  <p class="Code">Â  Â  xPrintable.<span class="CODEEmphasis">print</span>(printOpts);</p>
  <p class="Paragraph">There are two groups of properties involved in general printing. The first one is used with <span class="Codeintext">setPrinter()</span> and <span class="Codeintext">getPrinter(),</span> and controls the printer, and the second is passed to <span class="Codeintext">print()</span> and controls the print job.</p>
  <p class="Paragraph"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html" title="see type com.sun.star.view.PrinterDescriptor">com.sun.star.view.PrinterDescriptor</a></span> comprises the properties for the printer:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table138"><colgroup><col width="216" /><col width="489" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.734cm; " class="Table138A1">
      <p class="TableHead">Properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html" title="see type com.sun.star.view.PrinterDescriptor">com.sun.star.view.PrinterDescriptor</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#Name" title="see Name of type com.sun.star.view.PrinterDescriptor">Name</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7">string â Specifies the name of the printer queue to be used.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#PaperOrientation" title="see PaperOrientation of type com.sun.star.view.PrinterDescriptor">PaperOrientation</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PaperOrientation.html" title="see type com.sun.star.view.PaperOrientation">com.sun.star.view.PaperOrientation</a></span> Specifies the orientation of the paper. </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#PaperFormat" title="see PaperFormat of type com.sun.star.view.PrinterDescriptor">PaperFormat</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PaperFormat.html" title="see type com.sun.star.view.PaperFormat">com.sun.star.view.PaperFormat</a></span> Specifies a predefined paper size or if the paper size is a user-defined size.</p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#PaperSize" title="see PaperSize of type com.sun.star.view.PrinterDescriptor">PaperSize</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/awt/Size.html" title="see type com.sun.star.awt.Size">com.sun.star.awt.Size</a></span> Specifies the size of the paper in 100th mm.</p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#IsBusy" title="see IsBusy of type com.sun.star.view.PrinterDescriptor">IsBusy</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7">boolean â Indicates if the printer is busy.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#CanSetPaperOrientation" title="see CanSetPaperOrientation of type com.sun.star.view.PrinterDescriptor">CanSetPaperOrientation</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7">boolean â Indicates if the printer allows changes to PaperOrientation.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#CanSetPaperFormat" title="see CanSetPaperFormat of type com.sun.star.view.PrinterDescriptor">CanSetPaperFormat</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7">boolean â Indicates if the printer allows changes to PaperFormat.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table138A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrinterDescriptor.html#CanSetPaperSize" title="see CanSetPaperSize of type com.sun.star.view.PrinterDescriptor">CanSetPaperSize</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table138B2">
     <p class="P7">boolean â Indicates if the printer allows changes to PaperSize.Â </p>
    </td></tr></table></div>
  <p class="Paragraph"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html" title="see type com.sun.star.view.PrintOptions">com.sun.star.view.PrintOptions</a></span> contains the following possibilities for a print job:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table139"><colgroup><col width="216" /><col width="489" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.734cm; " class="Table139A1">
     <p class="TableHead">Properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html" title="see type com.sun.star.view.PrintOptions">com.sun.star.view.PrintOptions</a></span></p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table139A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html#CopyCount" title="see CopyCount of type com.sun.star.view.PrintOptions">CopyCount</a></span> </p>
    </td><td style="text-align:left;width:10.705cm; " class="Table139B2">
     <p class="P7">short â Specifies the number of copies to print.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table139A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html#FileName" title="see FileName of type com.sun.star.view.PrintOptions">FileName</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table139B2">
     <p class="P7">string â If set, specifies the name of the file to print to.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table139A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html#Collate" title="see Collate of type com.sun.star.view.PrintOptions">Collate</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table139B2">
     <p class="P7">boolean â Advises the printer to collate the pages of the copies. If true, a whole document is printed prior to the next copy, otherwise the page copies are completed together.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table139A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html#Sort" title="see Sort of type com.sun.star.view.PrintOptions">Sort</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table139B2">
     <p class="P7">boolean â Advises the printer to sort the pages of the copies.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.734cm; " class="Table139A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/PrintOptions.html#Pages" title="see Pages of type com.sun.star.view.PrintOptions">Pages</a></span></p>
    </td><td style="text-align:left;width:10.705cm; " class="Table139B2">
     <p class="P7">string â Specifies the pages to print with the same format as in the print dialog of the GUI, for example, "1, 3, 4-7, 9-".Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The following method uses <span class="Codeintext">PrinterDescriptor</span> and <span class="Codeintext">PrintOptions</span> to print to a special printer, and preselect the pages to print.</p>
  <p class="Code">protected void printDocComponent(XComponent xDoc) throws java.lang.Exception {Â </p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  XPrintable xPrintable = (XPrintable)UnoRuntime.queryInterface(XPrintable.class, xDoc);</p>
  <p class="Code">Â  Â  PropertyValue[] printerDesc = new PropertyValue[1];</p>
  <p class="Code">Â  Â  printerDesc[0] = new PropertyValue();</p>
  <p class="Code">Â  Â  printerDesc[0].Name = "Name";</p>
  <p class="Code">Â  Â  printerDesc[0].Value = "5D PDF Creator"; Â  Â  Â  Â </p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  xPrintable.setPrinter(printerDesc); Â  Â  Â  Â </p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  PropertyValue[] printOpts = new PropertyValue[1];</p>
  <p class="Code">Â  Â  printOpts[0] = new PropertyValue();</p>
  <p class="Code">Â  Â  printOpts[0].Name = "Pages";</p>
  <p class="Code">Â  Â  printOpts[0].Value = "3-5,7"; Â  Â  Â  Â </p>
  <p class="Code">Â  Â  Â  Â  </p>
  <p class="Code">Â  Â  xPrintable.print(printOpts);</p>
  <p class="Code">}Â </p>
  <h4 class="Head4"><a name="1_2_3_2_Page_Breaks_and_Scaling_for_Printout" />Page Breaks and Scaling for Printout</h4>
  <p class="Paragraph">Manual page breaks can be inserted and removed using the property <span class="Codeintext">IsStartOfNewPage</span> of the services <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumn.html" title="see type com.sun.star.table.TableColumn">com.sun.star.table.TableColumn</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRow.html" title="see type com.sun.star.table.TableRow">com.sun.star.table.TableRow</a></span>. For details, refer to the section about page breaks in the chapter <span class="ChapterRef"><a href="./9 Spreadsheet Documents_files/9 Spreadsheet Documents.xhtml" title="see chapter 9 Spreadsheet Documents">9 Spreadsheet Documents</a></span>.</p>
  <p class="Paragraph">To reduce the page size of a sheet so that the sheet fits on a fixed number of printout pages, use the properties <span class="Codeintext">PageScale</span> and <span class="Codeintext">ScaleToPages</span> of the current page style. Both of the properties are <span class="Codeintext">short</span> numbers. The <span class="Codeintext">PageScale</span> property expects a percentage and <span class="Codeintext">ScaleToPages</span> is the number of pages the printout is to fit. The page style is available through the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/XStyleFamiliesSupplier.html" title="see type com.sun.star.style.XStyleFamiliesSupplier">com.sun.star.style.XStyleFamiliesSupplier</a></span> of the document component, and is described in the chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_4_1_Styles" title="see chapter 9.4.1 Spreadsheet Documents - Overall Document Features - Styles">9.4.1 Spreadsheet Documents - Overall Document Features - Styles</a></span>.</p>
  <h4 class="Head4"><a name="1_2_3_3_Print_Areas" />Print Areas</h4>
  <p class="Paragraph">The Interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html" title="see type com.sun.star.sheet.XPrintAreas">com.sun.star.sheet.XPrintAreas</a></span> is available at spreadsheets. It provides access to the addresses of all printable cell ranges, represented by a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> structs.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table154"><colgroup><col width="208" /><col width="498" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.546cm; " class="Table154A1">
      <p class="TableHead">Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html" title="see type com.sun.star.sheet.XPrintAreas">com.sun.star.sheet.XPrintAreas</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#getPrintAreas" title="see getPrintAreas of type com.sun.star.sheet.XPrintAreas">getPrintAreas</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Returns the print areas of the sheet.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#setPrintAreas" title="see setPrintAreas of type com.sun.star.sheet.XPrintAreas">setPrintAreas</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Sets the print areas of the sheet.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#getPrintTitleColumns" title="see getPrintTitleColumns of type com.sun.star.sheet.XPrintAreas">getPrintTitleColumns</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Returns true if the title columns are repeated on all subsequent print pages to the right.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#setPrintTitleColumns" title="see setPrintTitleColumns of type com.sun.star.sheet.XPrintAreas">setPrintTitleColumns</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Specifies if the title columns are repeated on all subsequent print pages to the right.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#getTitleColumns" title="see getTitleColumns of type com.sun.star.sheet.XPrintAreas">getTitleColumns</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Returns the range of columns that are marked as title columns.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#setTitleColumns" title="see setTitleColumns of type com.sun.star.sheet.XPrintAreas">setTitleColumns</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Sets the range of columns marked as title columns.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#getPrintTitleRows" title="see getPrintTitleRows of type com.sun.star.sheet.XPrintAreas">getPrintTitleRows</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Returns true if the title rows are repeated on all subsequent print pages to the bottom.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#setPrintTitleRows" title="see setPrintTitleRows of type com.sun.star.sheet.XPrintAreas">setPrintTitleRows</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Specifies if the title rows are repeated on all subsequent print pages to the bottom. Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#getTitleRows" title="see getTitleRows of type com.sun.star.sheet.XPrintAreas">getTitleRows</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Returns the range of rows that are marked as title rows.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.546cm; " class="Table154A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html#setTitleRows" title="see setTitleRows of type com.sun.star.sheet.XPrintAreas">setTitleRows</a>()</span></p>
    </td><td style="text-align:left;width:10.894cm; " class="Table154B2">
     <p class="P7">Sets the range of rows marked as title rows.Â </p>
    </td></tr></table></div>
  <h2 class="Head2"><a name="1_3_Working_with_Spreadsheet_Documents" />9.3Â Â Working with Spreadsheet Documents</h2>
  <h3 class="Head3"><a name="1_3_1_Document_Structure" />9.3.1Â Â Document Structure</h3>
  <h4 class="Head4"><a name="1_3_1_1_Spreadsheet_Document" />Spreadsheet Document</h4>
  <p class="Paragraph">The whole spreadsheet document is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetDocument.html" title="see type com.sun.star.sheet.SpreadsheetDocument">com.sun.star.sheet.SpreadsheetDocument</a></span>. It implements interfaces that provide access to the container of spreadsheets and methods to modify the document wide contents, for instance, data consolidation.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table66"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table66A1">
     <div class="Paragraph"><div style="width: 12.719cm; " id="Frame21" class="fr5">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetDocumentUML.png" title="link to the full-sized graphic &quot;./SpreadsheetDocumentUML.png&quot;"><img border="0" width="573" height="873" alt="UML diagram showing the com.sun.star.sheet.SpreadsheetDocument service" src="./9 Spreadsheet Documents_files/SpreadsheetDocumentUML.png" class="fr6" /></a>Illustration <a name="refIllustration1">9.2</a>: Spreadsheet Document</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">A spreadsheet document contains a collection of spreadsheets with at least one spreadsheet, represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheets.html" title="see type com.sun.star.sheet.Spreadsheets">com.sun.star.sheet.Spreadsheets</a></span>. The method <span class="Codeintext">getSheets()</span> of the Interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheetDocument.html" title="see type com.sun.star.sheet.XSpreadsheetDocument">com.sun.star.sheet.XSpreadsheetDocument</a></span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html" title="see type com.sun.star.sheet.XSpreadsheets">com.sun.star.sheet.XSpreadsheets</a></span> for accessing the container of sheets.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table79"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table79A1">
     <div class="Paragraph"><div style="width: 13.037cm; " id="Frame3" class="fr7">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetsUML.png" title="link to the full-sized graphic &quot;./SpreadsheetsUML.png&quot;"><img border="0" width="593" height="620" alt="UML diagram showing the  com.sun.star.sheet.Spreadsheets service" src="./9 Spreadsheet Documents_files/SpreadsheetsUML.png" class="fr6" /></a>Illustration <a name="refIllustration2">9.3</a>: Spreadsheets Container</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">When the spreadsheet container is retrieved from a document using its <span class="Codeintext">getSheets()</span> method, it is possible to access the sheets in three different ways:</p>
  <p class="TitledListHead">by indexÂ </p>
  <p class="TitledListBody">Using the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> allows access to spreadsheets by their index.</p>
  <p class="TitledListHead">with an enumerationÂ </p>
  <p class="TitledListBody">Using the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetsEnumeration.html" title="see type com.sun.star.sheet.SpreadsheetsEnumeration">com.sun.star.sheet.SpreadsheetsEnumeration</a></span> spreadsheets can be accessed as an enumeration.</p>
  <p class="TitledListHead">by nameÂ </p>
  <p class="TitledListBody">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html" title="see type com.sun.star.sheet.XSpreadsheets">com.sun.star.sheet.XSpreadsheets</a></span> is derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameContainer.html" title="see type com.sun.star.container.XNameContainer">com.sun.star.container.XNameContainer</a></span> and therefore contains all methods for accessing the sheets with a name. It is possible to <span class="Emphasis">get</span> a spreadsheet using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span>) to <span class="Emphasis">replace</span> it with another sheet (interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameReplace.html" title="see type com.sun.star.container.XNameReplace">com.sun.star.container.XNameReplace</a></span>), and to <span class="Emphasis">insert</span> and <span class="Emphasis">remove</span> a spreadsheet (interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameContainer.html" title="see type com.sun.star.container.XNameContainer">com.sun.star.container.XNameContainer</a></span>).</p>
  <p class="Paragraph">The following two helper methods demonstrate how spreadsheets are accessed by their indexes and their names: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetDocHelper.java" title="goto source Spreadsheet/SpreadsheetDocHelper.java">Spreadsheet/SpreadsheetDocHelper.java</a>)Â </p>
  <p class="Code">/** Returns the spreadsheet with the specified index (0-based).Â </p>
  <p class="Code">Â  Â  @param xDocument Â The XSpreadsheetDocument interface of the document.</p>
  <p class="Code">Â  Â  @param nIndex Â The index of the sheet.</p>
  <p class="Code">Â  Â  @return Â The XSpreadsheet interface of the sheet. */</p>
  <p class="Code">public com.sun.star.sheet.XSpreadsheet getSpreadsheet(Â </p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheetDocument xDocument, int nIndex) {</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Collection of sheets</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheets xSheets = xDocument.getSheets();</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheet xSheet = null;</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  try {</p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.container.XIndexAccess xSheetsIA = (com.sun.star.container.XIndexAccess)</p>
  <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XIndexAccess.class, xSheets);</p>
  <p class="Code">Â  Â  Â  Â  xSheet = (com.sun.star.sheet.XSpreadsheet) xSheetsIA.getByIndex(nIndex);</p>
  <p class="Code">Â  Â  } catch (Exception ex) {</p>
  <p class="Code">Â  Â  }</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  return xSheet;</p>
  <p class="Code">}Â </p>
  <p class="P12">Â </p>
  <p class="Code">/** Returns the spreadsheet with the specified name.Â </p>
  <p class="Code">Â  Â  @param xDocument Â The XSpreadsheetDocument interface of the document.</p>
  <p class="Code">Â  Â  @param aName Â The name of the sheet.</p>
  <p class="Code">Â  Â  @return Â The XSpreadsheet interface of the sheet. */</p>
  <p class="Code">public com.sun.star.sheet.XSpreadsheet getSpreadsheet(Â </p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheetDocument xDocument,</p>
  <p class="Code">Â  Â  Â  Â  String aName) {</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Collection of sheets</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheets xSheets = xDocument.getSheets();</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheet xSheet = null;</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  try {</p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.container.XNameAccess xSheetsNA = (com.sun.star.container.XNameAccess)</p>
  <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNameAccess.class, xSheets);</p>
  <p class="Code">Â  Â  Â  Â  xSheet = (com.sun.star.sheet.XSpreadsheet) xSheetsNA.<span class="CODEEmphasis">getByName</span>(aName);</p>
  <p class="Code">Â  Â  } catch (Exception ex) {</p>
  <p class="Code">Â  Â  }</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  return xSheet;</p>
  <p class="Code">}Â </p>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html" title="see type com.sun.star.sheet.XSpreadsheets">com.sun.star.sheet.XSpreadsheets</a></span> contains additional methods that use the name of spreadsheets to add new sheets, and to move and copy them:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table147"><colgroup><col width="249" /><col width="456" /></colgroup><tr><td colspan="2" style="text-align:left;width:5.461cm; " class="Table147A1">
     <p class="TableHead">Â Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html" title="see type com.sun.star.sheet.XSpreadsheets">com.sun.star.sheet.XSpreadsheets</a></span> </p>
    </td></tr><tr><td style="text-align:left;width:5.461cm; " class="Table147A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html#insertNewByName" title="see insertNewByName of type com.sun.star.sheet.XSpreadsheets">insertNewByName</a>()</span></p>
    </td><td style="text-align:left;width:9.978cm; " class="Table147B2">
     <p class="P7">Creates a new empty spreadsheet with the specified name and inserts it at the specified position.Â </p>
    </td></tr><tr><td style="text-align:left;width:5.461cm; " class="Table147A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html#moveByName" title="see moveByName of type com.sun.star.sheet.XSpreadsheets">moveByName</a>()</span></p>
    </td><td style="text-align:left;width:9.978cm; " class="Table147B2">
     <p class="P7">Moves the spreadsheet with the specified name to a new position.Â </p>
    </td></tr><tr><td style="text-align:left;width:5.461cm; " class="Table147A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheets.html#copyByName" title="see copyByName of type com.sun.star.sheet.XSpreadsheets">copyByName</a>()</span></p>
    </td><td style="text-align:left;width:9.978cm; " class="Table147B2">
     <p class="P7">Creates a copy of a spreadsheet, renames it and inserts it at a new position.Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The method below shows how a new spreadsheet is inserted into the spreadsheet collection of a document with the specified name. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetDocHelper.java" title="goto source Spreadsheet/SpreadsheetDocHelper.java">Spreadsheet/SpreadsheetDocHelper.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table65"><colgroup><col width="822" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">/** Inserts a new empty spreadsheet with the specified name.Â </p>
     <p class="Code">Â  Â  @param xDocument Â The XSpreadsheetDocument interface of the document.</p>
     <p class="Code">Â  Â  @param aName Â The name of the new sheet.</p>
     <p class="Code">Â  Â  @param nIndex Â The insertion index.</p>
     <p class="Code">Â  Â  @return Â The XSpreadsheet interface of the new sheet.</p>
     <p class="Code">Â */</p>
     <p class="Code">public com.sun.star.sheet.XSpreadsheet insertSpreadsheet(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheetDocument xDocument,</p>
     <p class="Code">Â  Â  Â  Â  String aName, short nIndex ) {</p>
     <p class="Code">Â  Â  // Collection of sheets</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheets xSheets = xDocument.getSheets();</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheet xSheet = null;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  try {</p>
     <p class="Code">Â  Â  Â  Â  xSheets.<span class="CODEEmphasis">insertNewByName</span>(aName, nIndex);</p>
     <p class="Code">Â  Â  Â  Â  xSheet = xSheets.getByName( aName );</p>
     <p class="Code">Â  Â  } catch (Exception ex) {</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  return xSheet;</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h4 class="P13"><a name="1_3_1_2_Spreadsheet_Services_-_Overview" />Spreadsheet Services - Overview</h4>
  <p class="Paragraph">The previous section introduced the organization of the spreadsheets in a document and how they can be handled. This section discusses the spreadsheets themselves. The following illustration provides an overview about the main API objects that can be used in a spreadsheet.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table53"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table53A1">
      <div class="Paragraph"><div style="width: 14.506cm; " id="Frame8" class="fr2">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetOverview.png" title="link to the full-sized graphic &quot;./SpreadsheetOverview.png&quot;"><img border="0" width="659" height="408" alt="Overview graphic showing the main Spreadsheet services" src="./9 Spreadsheet Documents_files/SpreadsheetOverview.png" class="fr8" /></a>Illustration <a name="refIllustration3">9.4</a>: Main Spreadsheet Services</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">The main services in a spreadsheet are <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html" title="see type com.sun.star.sheet.Spreadsheet">com.sun.star.sheet.Spreadsheet</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span>, the cell service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span>, the collection of cell ranges <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span> and the services <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumn.html" title="see type com.sun.star.table.TableColumn">com.sun.star.table.TableColumn</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRow.html" title="see type com.sun.star.table.TableRow">com.sun.star.table.TableRow</a></span>. An overview of the capabilities of these services is provided below.</p>
  <h5 class="Head5"><a name="1_3_1_2_1_Capabilities_of_Spreadsheet" />Capabilities of Spreadsheet</h5>
  <p class="Paragraph">The spreadsheet is a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html" title="see type com.sun.star.sheet.Spreadsheet">com.sun.star.sheet.Spreadsheet</a></span> service that includes the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span>, that is, a spreadsheet is a cell range with additional capabilities concerning the entire sheet:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table132"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table132A1">
      <div class="Paragraph"><div style="width: 11.845cm; " id="Frame4" class="fr9">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetUML.png" title="link to the full-sized graphic &quot;./SpreadsheetUML.png&quot;"><img border="0" width="539" height="636" alt="UML diagram showing the com.sun.star.sheet.Spreadsheet service" src="./9 Spreadsheet Documents_files/SpreadsheetUML.png" class="fr6" /></a>Illustration <a name="refIllustration4">9.5</a>: Spreadsheet</div>
       </div></div>
     </td></tr></table></div>
  <ul style="margin-left:0.5cm;">
   <li class="P14" style="margin-left:2.5cm;"><p class="P14" style="margin-left:0cm;">It can be named using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span>.</p></li>
   <li class="P14" style="margin-left:2.5cm;"><p class="P14" style="margin-left:0cm;">It has interfaces for sheet analysis. Data pilot tables, sheet outlining, sheet auditing (detective) and scenarios all are controlled from the spreadsheet object. The corresponding interfaces are <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTablesSupplier.html" title="see type com.sun.star.sheet.XDataPilotTablesSupplier">com.sun.star.sheet.XDataPilotTablesSupplier</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XScenariosSupplier.html" title="see type com.sun.star.sheet.XScenariosSupplier">com.sun.star.sheet.XScenariosSupplier</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html" title="see type com.sun.star.sheet.XSheetOutline">com.sun.star.sheet.XSheetOutline</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html" title="see type com.sun.star.sheet.XSheetAuditing">com.sun.star.sheet.XSheetAuditing</a></span>.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P15" style="margin-left:2.5cm;"><p class="P15" style="margin-left:0cm;">Cells can be inserted, and entire cell ranges can be removed, moved or copied on the spreadsheet level using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html" title="see type com.sun.star.sheet.XCellRangeMovement">com.sun.star.sheet.XCellRangeMovement</a></span>.</p></li>
   <li class="P15" style="margin-left:2.5cm;"><p class="P15" style="margin-left:0cm;">Drawing elements in a spreadsheet are part of the draw page available through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/drawing/XDrawPageSupplier.html" title="see type com.sun.star.drawing.XDrawPageSupplier">com.sun.star.drawing.XDrawPageSupplier</a></span>.</p></li>
   <li class="P15" style="margin-left:2.5cm;"><p class="P15" style="margin-left:0cm;">Certain sheet printing features are accessed at the spreadsheet. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XPrintAreas.html" title="see type com.sun.star.sheet.XPrintAreas">com.sun.star.sheet.XPrintAreas</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetPageBreak.html" title="see type com.sun.star.sheet.XSheetPageBreak">com.sun.star.sheet.XSheetPageBreak</a></span> are used to get page breaks and control print areas.</p></li>
   <li class="P15" style="margin-left:2.5cm;"><p class="P15" style="margin-left:0cm;">The spreadsheet maintains charts. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableChartsSupplier.html" title="see type com.sun.star.table.XTableChartsSupplier">com.sun.star.table.XTableChartsSupplier</a></span> controls charts in the spreadsheet.</p></li>
   <li class="P15" style="margin-left:2.5cm;"><p class="P15" style="margin-left:0cm;">All cell annotations can be retrieved on the spreadsheet level with <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotationsSupplier.html" title="see type com.sun.star.sheet.XSheetAnnotationsSupplier">com.sun.star.sheet.XSheetAnnotationsSupplier</a></span>.</p></li>
   <li class="P15" style="margin-left:2.5cm;"><p class="P15" style="margin-left:0cm;">A spreadsheet can be permanently protected from changes through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XProtectable.html" title="see type com.sun.star.util.XProtectable">com.sun.star.util.XProtectable</a></span>.</p></li>
  </ul>
  <h5 class="Head5"><a name="1_3_1_2_2_Capabilities_of_SheetCellRange" />Capabilities of SheetCellRange</h5>
  <p class="Paragraph">The spreadsheet, as well as the cell ranges in a spreadsheet are <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span> services. A <span class="Codeintext">SheetCellRange</span> is a rectangular range of calculation cells that includes the following services:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table158"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table158A1">
      <div class="Paragraph"><div style="width: 12.187cm; " id="Frame5" class="fr9">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellRangeUML.png" title="link to the full-sized graphic &quot;./SheetCellRangeUML.png&quot;"><img border="0" width="549" height="871" alt="UML diagram showing the supported services of com.sun.star.sheet.SheetCellRange" src="./9 Spreadsheet Documents_files/SheetCellRangeUML.png" class="fr10" /></a>Illustration <a name="refIllustration5">9.6</a>: Services supported by SheetCellRange</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">The interfaces supported by a SheetCellRange are depicted in the following illustration:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table55"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table55A1">
      <div class="Paragraph"><div style="width: 12.093cm; " id="Frame11" class="fr11">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellRangeUML2.png" title="link to the full-sized graphic &quot;./SheetCellRangeUML2.png&quot;"><img border="0" width="552" height="807" alt="UML diagram showing the interfaces of the com.sun.star.sheet.SheetCellRange service" src="./9 Spreadsheet Documents_files/SheetCellRangeUML2.png" class="fr12" /></a>Illustration <a name="refIllustration6">9.7</a>: SheetCellRange Interfaces</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">A <span class="Codeintext">SheetCellRange</span> has the following capabilities:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Supplies cells and sub-ranges of cells, as well as rows and columns. It has the interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRange.html" title="see type com.sun.star.sheet.XSheetCellRange">com.sun.star.sheet.XSheetCellRange</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XColumnRowRange.html" title="see type com.sun.star.table.XColumnRowRange">com.sun.star.table.XColumnRowRange</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Performs calculations with a <span class="Codeintext">SheetCellRange</span>. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOperation.html" title="see type com.sun.star.sheet.XSheetOperation">com.sun.star.sheet.XSheetOperation</a></span> is for aggregate operations, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XMultipleOperation.html" title="see type com.sun.star.sheet.XMultipleOperation">com.sun.star.sheet.XMultipleOperation</a></span> copies formulas adjusting their cell references, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSubTotalCalculatable.html" title="see type com.sun.star.sheet.XSubTotalCalculatable">com.sun.star.sheet.XSubTotalCalculatable</a></span> applies and removes sub totals, and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XArrayFormulaRange.html" title="see type com.sun.star.sheet.XArrayFormulaRange">com.sun.star.sheet.XArrayFormulaRange</a></span> handles array formulas.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Formats cells in a range. The settings affect all cells in the range. There are cell properties, character properties and paragraph properties for formatting purposes. Additionally, a SheetCellRange supports auto formats with <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XAutoFormattable.html" title="see type com.sun.star.table.XAutoFormattable">com.sun.star.table.XAutoFormattable</a></span> and the content of the cells can be indented using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XIndent.html" title="see type com.sun.star.util.XIndent">com.sun.star.util.XIndent</a></span>. The interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellFormatRangesSupplier.html" title="see type com.sun.star.sheet.XCellFormatRangesSupplier">com.sun.star.sheet.XCellFormatRangesSupplier</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XUniqueCellFormatRangesSupplier.html" title="see type com.sun.star.sheet.XUniqueCellFormatRangesSupplier">com.sun.star.sheet.XUniqueCellFormatRangesSupplier</a></span> obtain enumeration of cells that differ in formatting.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Works with the data in a cell range through a sequence of sequences of <span class="Codeintext">any </span>that maps to the two-dimensional cell array of the range. This array is available through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeData.html" title="see type com.sun.star.sheet.XCellRangeData">com.sun.star.sheet.XCellRangeData</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Fills a cell range with data series automatically through its interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellSeries.html" title="see type com.sun.star.sheet.XCellSeries">com.sun.star.sheet.XCellSeries</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Imports data from a database using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XImportable.html" title="see type com.sun.star.util.XImportable">com.sun.star.util.XImportable</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Searches and replaces cell contents using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XSearchable.html" title="see type com.sun.star.util.XSearchable">com.sun.star.util.XSearchable</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Perform queries for cell contents, such as formula cells, formula result types, or empty cells. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html" title="see type com.sun.star.sheet.XCellRangesQuery">com.sun.star.sheet.XCellRangesQuery</a></span> of the included <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetRangesQuery.html" title="see type com.sun.star.sheet.SheetRangesQuery">com.sun.star.sheet.SheetRangesQuery</a></span> service is responsible for this task.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Merges cells into a single cell through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XMergeable.html" title="see type com.sun.star.util.XMergeable">com.sun.star.util.XMergeable</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Sorts and filters the content of a SheetCellRange, using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XSortable.html" title="see type com.sun.star.util.XSortable">com.sun.star.util.XSortable</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterable.html" title="see type com.sun.star.sheet.XSheetFilterable">com.sun.star.sheet.XSheetFilterable</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterableEx.html" title="see type com.sun.star.sheet.XSheetFilterableEx">com.sun.star.sheet.XSheetFilterableEx</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Provides its unique range address in the spreadsheet document, that is, the start column and row, end column and row, and the sheet where it is located. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeAddressable.html#getRangeAddress" title="see getRangeAddress of type com.sun.star.sheet.XCellRangeAddressable:getRangeAddress">com.sun.star.sheet.XCellRangeAddressable:getRangeAddress</a>()</span> returns the corresponding address description struct <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span>.</p></li>
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">Charts can be based on a <span class="Codeintext">SheetCellRange</span>, because it supports <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/chart/XChartDataArray.html" title="see type com.sun.star.chart.XChartDataArray">com.sun.star.chart.XChartDataArray</a></span>.</p></li>
  </ul>
  <h5 class="Head5"><a name="1_3_1_2_3_Capabilities_of_SheetCell" />Capabilities of SheetCell</h5>
  <p class="P5">A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span> is the base unit of OpenOffice.org Calc tables. Values, formulas and text required for calculation jobs are all written into sheet cells. The <span class="Codeintext">SheetCell</span> includes the following services:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table137"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table137A1">
      <div class="Paragraph"><div style="width: 11.534cm; " id="Frame6" class="fr2">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCell.png" title="link to the full-sized graphic &quot;./SheetCell.png&quot;"><img border="0" width="524" height="898" alt="UML diagram shwoing the supported services of a com.sun.star.sheet.SheetCell" src="./9 Spreadsheet Documents_files/SheetCell.png" class="fr8" /></a>Illustration <a name="refIllustration7">9.8</a>: SheetCell</div>
       </div></div>
     </td></tr></table></div>
  <p class="P17">The <span class="Codeintext">SheetCell</span> exports the following interfaces:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table62"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table62A1">
     <div class="Paragraph"><div style="width: 12.123cm; " id="Frame9" class="fr13">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellInterfaces.png" title="link to the full-sized graphic &quot;./SheetCellInterfaces.png&quot;"><img border="0" width="550" height="441" alt="UML diagram showing the interfasces of the com.sun.star.sheet.SheetCell service" src="./9 Spreadsheet Documents_files/SheetCellInterfaces.png" class="fr14" /></a>Illustration <a name="refIllustration8">9.9</a>: SheetCell Interfaces</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext">SheetCell</span> service has the following capabilities:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P18" style="margin-left:2.5cm;"><p class="P18" style="margin-left:0cm;">It can access the cell content. It can contain numeric <span class="Emphasis">values</span> that are used for calculations, <span class="Emphasis">formulas</span> that operate on these values, and <span class="Emphasis">text</span> supporting full-featured formatting and hyperlink text fields. The access to the cell values and formulas is provided through the <span class="Codeintext">SheetCell</span> parent service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/Cell.html" title="see type com.sun.star.table.Cell">com.sun.star.table.Cell</a></span>. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCell.html" title="see type com.sun.star.table.XCell">com.sun.star.table.XCell</a></span> is capable of manipulating the values and formulas in a cell. For text, the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/Text.html" title="see type com.sun.star.text.Text">com.sun.star.text.Text</a></span> with the main interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XText.html" title="see type com.sun.star.text.XText">com.sun.star.text.XText</a></span> is available at a <span class="Codeintext">SheetCell.</span> Its text fields are accessed through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XTextFieldsSupplier.html" title="see type com.sun.star.text.XTextFieldsSupplier">com.sun.star.text.XTextFieldsSupplier</a></span>.</p></li>
   <li class="P18" style="margin-left:2.5cm;"><p class="P18" style="margin-left:0cm;">A <span class="Codeintext">SheetCell</span> is a special case of a <span class="Codeintext">SheetCellRange</span>. As such, it has all capabilities of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span> described above.</p></li>
   <li class="P18" style="margin-left:2.5cm;"><p class="P18" style="margin-left:0cm;">It can have an annotation: <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotationAnchor.html" title="see type com.sun.star.sheet.XSheetAnnotationAnchor">com.sun.star.sheet.XSheetAnnotationAnchor</a></span>. </p></li>
   <li class="P18" style="margin-left:2.5cm;"><p class="P18" style="margin-left:0cm;">It can provide its unique cell address in the spreadsheet document, that is, its column, row and the sheet it is located in. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellAddressable.html#getCellAddress" title="see getCellAddress of type com.sun.star.sheet.XCellAddressable:getCellAddress">com.sun.star.sheet.XCellAddressable:getCellAddress</a>()</span> returns the appropriate <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellAddress.html" title="see type com.sun.star.table.CellAddress">com.sun.star.table.CellAddress</a></span> struct.</p></li>
   <li class="P18" style="margin-left:2.5cm;"><p class="P18" style="margin-left:0cm;">It can be locked temporarily against user interaction with <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/document/XActionLockable.html" title="see type com.sun.star.document.XActionLockable">com.sun.star.document.XActionLockable</a></span>.</p></li>
  </ul>
  <h5 class="Head5"><a name="1_3_1_2_4_Capabilities_of_SheetCellRanges_Container" />Capabilities of SheetCellRanges Container</h5>
  <p class="Paragraph">The container of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span> is used where several cell ranges have to be handled at once for cell query results and other situations. The <span class="Codeintext">SheetCellRanges</span> service includes cell, paragraph and character property services, and it offers a query option:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table29"><colgroup><col width="821" /></colgroup><tr class="Table291"><td style="text-align:left;width:17.979cm; " class="Table29A1">
     <div class="Paragraph"><div style="width: 11.532cm; " id="Frame13" class="fr15">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellRangesUML1.png" title="link to the full-sized graphic &quot;./SheetCellRangesUML1.png&quot;"><img border="0" width="524" height="651" alt="UML diagram showing the com.sun.star.sheet.SheetCellRanges service" src="./9 Spreadsheet Documents_files/SheetCellRangesUML1.png" class="fr16" /></a>Illustration <a name="refIllustration9">9.10</a>: Services of SheetCellRanges</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The interfaces of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span> are element accesses for the ranges in the <span class="Codeintext">SheetCellRanges</span> container. These interfaces are discussed below.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table54"><colgroup><col width="821" /></colgroup><tr class="Table541"><td style="text-align:left;width:17.979cm; " class="Table54A1">
     <div class="Paragraph"><div style="width: 12.173cm; " id="Frame53" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellRangesUML2.png" title="link to the full-sized graphic &quot;./SheetCellRangesUML2.png&quot;"><img border="0" width="553" height="613" alt="UML diagram shwoing the interfaces of the com.sun.star.sheet.SheetCellRanges service" src="./9 Spreadsheet Documents_files/SheetCellRangesUML2.png" class="fr8" /></a>Illustration <a name="refIllustration10">9.11</a>: Implemented interfaces of SheetCellRanges</div>
      </div></div>
    </td></tr></table></div>
  <p class="P19">The <span class="Codeintext">SheetCellRanges</span> container has the following capabilities:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P20" style="margin-left:2.5cm;"><p class="P20" style="margin-left:0cm;">It can be formatted using the character, paragraph and cell property services it includes.Â </p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P21" style="margin-left:2.5cm;"><p class="P21" style="margin-left:0cm;">It yields independent cell ranges through the element access interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span>.</p></li>
   <li class="P21" style="margin-left:2.5cm;"><p class="P21" style="margin-left:0cm;">It can access, replace, append and remove ranges by <span class="Emphasis">name</span> through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameContainer.html" title="see type com.sun.star.container.XNameContainer">com.sun.star.container.XNameContainer</a></span></p></li>
   <li class="P21" style="margin-left:2.5cm;"><p class="P21" style="margin-left:0cm;">It can add new ranges to <span class="Codeintext">SheetCellRanges</span> by their <span class="Emphasis">address descriptions, </span>access the ranges by <span class="Emphasis">index,</span> and obtain the <span class="Emphasis">cells</span> in the ranges. This is possible through the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRangeContainer.html" title="see type com.sun.star.sheet.XSheetCellRangeContainer">com.sun.star.sheet.XSheetCellRangeContainer</a></span> that was originally based on <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span>. The <span class="Codeintext">SheetCellRanges</span> maintain a sub-container of all cells in the ranges that are not empty, obtainable through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRanges.html#getCells" title="see getCells of type com.sun.star.sheet.XSheetCellRanges">getCells</a>() </span>method.</p></li>
   <li class="P21" style="margin-left:2.5cm;"><p class="P21" style="margin-left:0cm;">It can enumerate the ranges using <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span>.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P16" style="margin-left:2.5cm;"><p class="P16" style="margin-left:0cm;">It can query the ranges for certain cell contents, such as formula cells, formula result types or empty cells. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html" title="see type com.sun.star.sheet.XCellRangesQuery">com.sun.star.sheet.XCellRangesQuery</a></span> of the included <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetRangesQuery.html" title="see type com.sun.star.sheet.SheetRangesQuery">com.sun.star.sheet.SheetRangesQuery</a></span> service is responsible for this task.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P21" style="margin-left:2.5cm;"><p class="P21" style="margin-left:0cm;">The <span class="Codeintext">SheetCellRanges</span> supports selected <span class="Codeintext">SheetCellRange</span> features, such as searching and replacing, indenting, sheet operations and charting.</p></li>
  </ul>
  <h5 class="Head5"><a name="1_3_1_2_5_Capabilities_of_Columns_and_Rows" />Capabilities of Columns and Rows</h5>
  <p class="Paragraph">All cell ranges are organized in columns and rows, therefore column and row containers are retrieved from a spreadsheet, as well as from sub-ranges of a spreadsheet through <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XColumnRowRange.html" title="see type com.sun.star.table.XColumnRowRange">com.sun.star.table.XColumnRowRange</a></span>. These containers are <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumns.html" title="see type com.sun.star.table.TableColumns">com.sun.star.table.TableColumns</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRows.html" title="see type com.sun.star.table.TableRows">com.sun.star.table.TableRows</a></span>. Both containers support index and enumeration access. Only the <span class="Codeintext">TableColumns</span> supports name access to the single columns and rows (<span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumn.html" title="see type com.sun.star.table.TableColumn">com.sun.star.table.TableColumn</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRow.html" title="see type com.sun.star.table.TableRow">com.sun.star.table.TableRow</a></span>) of a <span class="Codeintext">SheetCellRange</span>.</p>
  <p class="Paragraph">The following UML charts show table columns and rows. The first chart shows columns:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table159"><colgroup><col width="821" /></colgroup><tr class="Table1591"><td style="text-align:left;width:17.979cm; " class="Table159A1">
     <div class="Paragraph"><div style="width: 13.025cm; " id="Frame54" class="fr2">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableColumnsUML.png" title="link to the full-sized graphic &quot;./TableColumnsUML.png&quot;"><img border="0" width="592" height="508" alt="UML diagram showing the com.sun.star.table.TableColumns service" src="./9 Spreadsheet Documents_files/TableColumnsUML.png" class="fr8" /></a>Illustration <a name="refIllustration11">9.12</a>: Collection of table columns</div>
      </div></div>
    </td></tr></table></div>
  <p class="P5">The collection of table rows differs from the collection of columns, that is, it does not support <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span>:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table160"><colgroup><col width="821" /></colgroup><tr class="Table1601"><td style="text-align:left;width:17.979cm; " class="Table160A1">
     <div class="Paragraph"><div style="width: 13.03cm; " id="Frame55" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableRowsUML.png" title="link to the full-sized graphic &quot;./TableRowsUML.png&quot;"><img border="0" width="592" height="508" alt="UML diagram showing the com.sun.star.table.TableRows service" src="./9 Spreadsheet Documents_files/TableRowsUML.png" class="fr8" /></a>Illustration <a name="refIllustration12">9.13</a>: Collection of table rows</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The services for table rows and columns control the table structure and grid size of a cell range:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P22" style="margin-left:2.5cm;"><p class="P22" style="margin-left:0cm;">The containers for columns and rows have methods to insert and remove columns, and rows by index in their main interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableRows.html" title="see type com.sun.star.table.XTableRows">com.sun.star.table.XTableRows</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableColumns.html" title="see type com.sun.star.table.XTableColumns">com.sun.star.table.XTableColumns</a></span>.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P23" style="margin-left:2.5cm;"><p class="P23" style="margin-left:0cm;">The services <span class="Codeintext">TableColumn</span> and <span class="Codeintext">TableRow</span> have properties to adjust their column width and row height, toggle their visibility, and set page breaks.</p></li>
  </ul>
  <h4 class="Head4"><a name="1_3_1_3_Spreadsheet" />Spreadsheet</h4>
  <p class="Paragraph">A spreadsheet is a cell range with additional interfaces and is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html" title="see type com.sun.star.sheet.Spreadsheet">com.sun.star.sheet.Spreadsheet</a></span>.</p>
  <h5 class="Head5"><a name="1_3_1_3_1_Properties_of_Spreadsheet" />Properties of Spreadsheet</h5>
  <p class="Paragraph">The properties of a spreadsheet deal with its visibility and its page style:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table99"><colgroup><col width="227" /><col width="478" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.981cm; " class="Table99A1">
      <p class="TableHead">Properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html" title="see type com.sun.star.sheet.Spreadsheet">com.sun.star.sheet.Spreadsheet</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:4.981cm; " class="Table99A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html#IsVisible" title="see IsVisible of type com.sun.star.sheet.Spreadsheet">IsVisible</a></span></p>
    </td><td style="text-align:left;width:10.458cm; " class="Table99B2">
     <p class="P7">boolean â Determines if the sheet is visible in the GUI.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.981cm; " class="Table99A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html#PageStyle" title="see PageStyle of type com.sun.star.sheet.Spreadsheet">PageStyle</a></span></p>
    </td><td style="text-align:left;width:10.458cm; " class="Table99B2">
     <p class="P7">Contains the name of the page style of this spreadsheet. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_4_1_Styles" title="see chapter 9.4.1 Spreadsheet Documents - Overall Document Features - Styles">9.4.1 Spreadsheet Documents - Overall Document Features - Styles</a></span> for details about styles.</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_3_2_Naming" />Naming</h5>
  <p class="Paragraph">The spreadsheet interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span> obtains and changes the name of the spreadsheet, and uses it to get a spreadsheet from the spreadsheet collection. Refer to <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_1_Spreadsheet_Document" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Spreadsheet Document">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Spreadsheet Document</a></span>.</p>
  <h5 class="Head5"><a name="1_3_1_3_3_Inserting_Cells_2C_Moving_and_Copying_Cell_Ranges" />Inserting Cells, Moving and Copying Cell Ranges</h5>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html" title="see type com.sun.star.sheet.XCellRangeMovement">com.sun.star.sheet.XCellRangeMovement</a></span> of the <span class="Codeintext">Spreadsheet</span> service supports <span class="Emphasis">inserting</span> and <span class="Emphasis">removing</span> cells from a spreadsheet, and <span class="Emphasis">copying</span> and <span class="Emphasis">moving</span> cell contents. When cells are copied or moved, the relative references of all formulas are updated automatically. The sheet index included in the source range addresses should be equal to the index of the sheet of this interface.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table151"><colgroup><col width="257" /><col width="448" /></colgroup><tr><td colspan="2" style="text-align:left;width:5.627cm; " class="Table151A1">
      <p class="TableHead">Â Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html" title="see type com.sun.star.sheet.XCellRangeMovement">com.sun.star.sheet.XCellRangeMovement</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:5.627cm; " class="Table151A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html#insertCells" title="see insertCells of type com.sun.star.sheet.XCellRangeMovement">insertCells</a>]()</span></p>
    </td><td style="text-align:left;width:9.813cm; " class="Table151B2">
     <p class="P7">Inserts a range of empty cells at a specific position. The direction of the insertion is determined by the parameter nMode (type <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellInsertMode.html" title="see type com.sun.star.sheet.CellInsertMode">com.sun.star.sheet.CellInsertMode</a></span>).</p>
    </td></tr><tr><td style="text-align:left;width:5.627cm; " class="Table151A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html#removeRange" title="see removeRange of type com.sun.star.sheet.XCellRangeMovement">removeRange</a>()</span></p>
    </td><td style="text-align:left;width:9.813cm; " class="Table151B2">
     <p class="P7">Deletes a range of cells from the spreadsheet. The parameter <span class="Codeintext">nMode</span> (type <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellDeleteMode.html" title="see type com.sun.star.sheet.CellDeleteMode">com.sun.star.sheet.CellDeleteMode</a></span>) determines how remaining cells will be moved.</p>
    </td></tr><tr><td style="text-align:left;width:5.627cm; " class="Table151A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html#copyRange" title="see copyRange of type com.sun.star.sheet.XCellRangeMovement">copyRange</a>()</span></p>
    </td><td style="text-align:left;width:9.813cm; " class="Table151B2">
     <p class="P7">Copies the contents of a cell range to another place in the document.Â </p>
    </td></tr><tr><td style="text-align:left;width:5.627cm; " class="Table151A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeMovement.html#moveRange" title="see moveRange of type com.sun.star.sheet.XCellRangeMovement">moveRange</a>()</span></p>
    </td><td style="text-align:left;width:9.813cm; " class="Table151B2">
     <p class="P7">Moves the contents of a cell range to another place in the document. Deletes all contents of the source range.Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The following example copies a cell range to another location in the sheet. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table67"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">/** Copies a cell range to another place in the sheet.Â </p>
     <p class="Code">Â  Â  @param xSheet Â The XSpreadsheet interface of the spreadsheet.</p>
     <p class="Code">Â  Â  @param aDestCell Â The address of the first cell of the destination range.</p>
     <p class="Code">Â  Â  @param aSourceRange Â The source range address.</p>
     <p class="Code">Â */</p>
     <p class="Code">public void doMovementExample(com.sun.star.sheet.XSpreadsheet xSheet,Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.table.CellAddress aDestCell, com.sun.star.table.CellRangeAddress aSourceRange)</p>
     <p class="Code">Â  Â  Â  Â  throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeMovement xMovement = (com.sun.star.sheet.XCellRangeMovement)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeMovement.class, xSheet);</p>
     <p class="Code">Â  Â  xMovement.<span class="CODEEmphasis">copyRange</span>(aDestCell, aSourceRange);</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_3_4_Page_Breaks" />Page Breaks</h5>
  <p class="Paragraph">The methods <span class="Codeintext">getColumnPageBreaks()</span> and <span class="Codeintext">getRowPageBreaks()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetPageBreak.html" title="see type com.sun.star.sheet.XSheetPageBreak">com.sun.star.sheet.XSheetPageBreak</a></span> return the positions of column and row page breaks, represented by a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TablePageBreakData.html" title="see type com.sun.star.sheet.TablePageBreakData">com.sun.star.sheet.TablePageBreakData</a></span> structs. Each struct contains the position of the page break and a boolean property that determines if the page break was inserted manually. Inserting and removing a manual page break uses the property <span class="Codeintext">IsStartOfNewPage</span> of the services <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumn.html" title="see type com.sun.star.table.TableColumn">com.sun.star.table.TableColumn</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRow.html" title="see type com.sun.star.table.TableRow">com.sun.star.table.TableRow</a></span>.</p>
  <p class="P5">The following example prints the positions of all the automatic column page breaks: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table68"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Print automatic column page breaks ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetPageBreak xPageBreak = (com.sun.star.sheet.XSheetPageBreak)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetPageBreak.class, xSheet);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.TablePageBreakData[] aPageBreakArray = xPageBreak.getColumnPageBreaks();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  System.out.print("Automatic column page breaks:");</p>
     <p class="Code">Â  Â  for (int nIndex = 0; nIndex &lt; aPageBreakArray.length; ++nIndex)</p>
     <p class="Code">Â  Â  Â  Â  if (!aPageBreakArray[nIndex].ManualBreak)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  System.out.print( " " + aPageBreakArray[nIndex].Position);</p>
     <p class="Code">Â  Â  System.out.println();</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_1_4_Cell_Ranges" />Cell Ranges</h4>
  <p class="Paragraph">A cell range is a rectangular range of cells. It is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span>.</p>
  <h5 class="Head5"><a name="1_3_1_4_1_Properties_of_Cell_Ranges" />Properties of Cell Ranges</h5>
  <p class="Paragraph">The cell range properties deal with the position and size of a range, conditional formats, and cell validation during user input.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table145"><colgroup><col width="272" /><col width="434" /></colgroup><tr><td colspan="2" style="text-align:left;width:5.946cm; " class="Table145A1">
      <p class="TableHead">Properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span></p>
     </td></tr><tr><td style="text-align:left;width:5.946cm; " class="Table145A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html#Position" title="see Position of type com.sun.star.sheet.SheetCellRange">Position</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html#Size" title="see Size of type com.sun.star.sheet.SheetCellRange">Size</a></span></p>
    </td><td style="text-align:left;width:9.493cm; " class="Table145B2">
     <p class="TextInTable">The position and size of the cell in 100<span class="T9">th</span> of a millimeter. The position is relative to the first cell of the spreadsheet. Note, that this is not always the first visible cell.</p>
    </td></tr><tr><td style="text-align:left;width:5.946cm; " class="Table145A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html#ConditionalFormat" title="see ConditionalFormat of type com.sun.star.sheet.SheetCellRange">ConditionalFormat</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html#ConditionalFormatLocal" title="see ConditionalFormatLocal of type com.sun.star.sheet.SheetCellRange">ConditionalFormatLocal</a></span></p>
    </td><td style="text-align:left;width:9.493cm; " class="Table145B2">
     <p class="TextInTable">Used to access conditional formats. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_2_6_Conditional_Formats" title="see chapter 9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting - Conditional Formats">9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting - Conditional Formats</a></span> for details.</p>
    </td></tr><tr><td style="text-align:left;width:5.946cm; " class="Table145A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html#Validation" title="see Validation of type com.sun.star.sheet.SheetCellRange">Validation</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html#ValidationLocal" title="see ValidationLocal of type com.sun.star.sheet.SheetCellRange">ValidationLocal</a></span></p>
    </td><td style="text-align:left;width:9.493cm; " class="Table145B2">
     <p class="TextInTable">Used to access data validation. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_11_1_Data_Validation" title="see chapter 9.3.11 Spreadsheet Documents - Working with Spreadsheets - Other Table Operations - Data Validation">9.3.11 Spreadsheet Documents - Working with Spreadsheets - Other Table Operations - Data Validation</a></span> for details.</p>
    </td></tr></table></div>
  <p class="P17">This service extends the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRange.html" title="see type com.sun.star.table.CellRange">com.sun.star.table.CellRange</a></span> to provide common table cell range functionality.</p>
  <h5 class="Head5"><a name="1_3_1_4_2_Cell_and_Cell_Range_Access" />Cell and Cell Range Access</h5>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRange.html" title="see type com.sun.star.sheet.XSheetCellRange">com.sun.star.sheet.XSheetCellRange</a></span> is derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span>. It provides access to cells of the range and sub ranges, and is supported by the spreadsheet and sub-ranges of a spreadsheet. The methods in <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRange.html" title="see type com.sun.star.sheet.XSheetCellRange">com.sun.star.sheet.XSheetCellRange</a></span> are:</p>
  <p class="MethodSignatures">com::sun::star::table::XCell <span class="MethodSignatureEmphasis">getCellByPosition</span>( [in] long nColumn, [in] long nRow)</p>
  <p class="MethodSignatures">com::sun::star::table::XCellRange <span class="MethodSignatureEmphasis">getCellRangeByPosition</span>( [in] long nLeft, [in] long nTop,</p>
  <p class="MethodSignatures">Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  [in] long nRight, [in] long nBottom)</p>
  <p class="MethodSignatures">com::sun::star::table::XCellRange <span class="MethodSignatureEmphasis">getCellRangeByName</span> ( [in] string aRange)</p>
  <p class="MethodSignatures">com::sun::star::sheet::XSpreadsheet <span class="MethodSignatureEmphasis">getSpreadsheet</span>() Â </p>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span> provides methods to access cell ranges and single cells from a cell range. </p>
  <p class="Paragraph">Cells are retrieved by their position. Cell addresses consist of a row index and a column index. The index is zero-based, that is, the index 0 means the first row or column of the table.Â </p>
  <p class="Paragraph">Cell ranges are retrieved:Â </p>
  <p class="TitledListHead">by positionÂ </p>
  <p class="TitledListBody">Addresses of cell ranges consist of indexes to the first and last row, and the first and last column. Range indexes are always zero-based, that is, the index 0 points to the first row or column of the table.Â </p>
  <p class="TitledListHead">by nameÂ </p>
  <p class="TitledListBody">It is possible to address a cell range over its name in A1:B2 notation as it would appear in the application.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table140"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table140A1">
      <div class="TableContents"><img width="39" height="39" alt="Tip graphics marks a hint section in the text" src="./9 Spreadsheet Documents_files/tip.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table140B1">
      <p class="TipInTable">In a spreadsheet, âA1:B2â, â$C$1:$D$2â, or âE5â are valid ranges. Even user defined cell names, range names, or database range names can be used.Â </p>
     </td></tr></table></div>
  <p class="Paragraph">Additionally, <span class="Codeintext">XCellRange</span> contains the method <span class="Codeintext">getSpreadsheet()</span> that returns the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> interface of the spreadsheet which contains the cell range.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table37"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- First cell in a cell range. ---</p>
     <p class="Code">Â  Â  com.sun.star.table.XCell xCell = xCellRange.getCellByPosition(0, 0);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // --- Spreadsheet that contains the cell range. ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheet xSheet = xCellRange.getSpreadsheet();</p>
    </td></tr></table></div>
  <p class="Paragraph">There are no methods to modify the contents of <span class="Emphasis">all</span> cells of a cell range. Access to cell range formatting is supported. Refer to the chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_2_Formatting" title="see chapter 9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting">9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting</a></span> for additional details.</p>
  <p class="Paragraph">In the following example, <span class="Codeintext">xRange</span> is an existing cell range (a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span> interface): Â (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/GeneralTableSample.java" title="goto source Spreadsheet/GeneralTableSample.java">Spreadsheet/GeneralTableSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle7"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = null;</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCellRange = null;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // *** Accessing a CELL RANGE ***</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Accessing a cell range over its position.</p>
     <p class="Code">Â  Â  xCellRange = xRange.getCellRangeByPosition(2, 0, 3, 1);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Change properties of the range.</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xCellRange);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(0x8080FF));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Accessing a cell range over its name.</p>
     <p class="Code">Â  Â  xCellRange = xRange.getCellRangeByName("C4:D5");</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Change properties of the range.</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xCellRange);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(0xFFFF80));</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_3_Merging_Cell_Ranges_into_a_Single_Cell" />Merging Cell Ranges into a Single Cell</h5>
  <p class="Paragraph">The cell range interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XMergeable.html" title="see type com.sun.star.util.XMergeable">com.sun.star.util.XMergeable</a></span> Â merges and undoes merged cell ranges.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P24" style="margin-left:2.5cm;"><p class="P24" style="margin-left:0cm;">The method <span class="Codeintext">merge()</span> merges or Â undoes merged the whole cell range.</p></li>
   <li class="P24" style="margin-left:2.5cm;"><p class="P24" style="margin-left:0cm;">The method <span class="Codeintext">getIsMerged()</span> determines if the cell range is completely merged.</p></li>
  </ul>
  <p class="Paragraph">(<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table33"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Merge cells. ---</p>
     <p class="Code">Â  Â  com.sun.star.util.XMergeable xMerge = (com.sun.star.util.XMergeable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.util.XMergeable.class, xCellRange);</p>
     <p class="Code">Â  Â  xMerge.<span class="MethodSignatureEmphasis">merge</span>(true);</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_4_Column_and_Row_Access" />Column and Row Access</h5>
  <p class="Paragraph">The cell range interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XColumnRowRange.html" title="see type com.sun.star.table.XColumnRowRange">com.sun.star.table.XColumnRowRange</a></span> accesses the column and row ranges in the current cell range. A column or row range contains all the cells in the selected column or row. This type of range has additional properties, such as, visibility, and width or height. For more information, see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_7_Columns_and_Rows" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Columns and Rows">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Columns and Rows</a></span>.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P25" style="margin-left:2.5cm;"><p class="P25" style="margin-left:0cm;">The method <span class="Codeintext">getColumns()</span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableColumns.html" title="see type com.sun.star.table.XTableColumns">com.sun.star.table.XTableColumns</a></span> of the collection of columns.</p></li>
   <li class="P25" style="margin-left:2.5cm;"><p class="P25" style="margin-left:0cm;">The method <span class="Codeintext">getRows()</span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableRows.html" title="see type com.sun.star.table.XTableRows">com.sun.star.table.XTableRows</a></span> of the collection of rows.</p></li>
  </ul>
  <p class="Paragraph">(<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table36"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Column properties. ---</p>
     <p class="Code">Â  Â  com.sun.star.table.XColumnRowRange xColRowRange = (com.sun.star.table.XColumnRowRange)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.table.XColumnRowRange.class, xCellRange);</p>
     <p class="Code">Â  Â  com.sun.star.table.XTableColumns xColumns = xColRowRange.getColumns();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Object aColumnObj = xColumns.getByIndex(0);</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.beans.XPropertySet.class, aColumnObj);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue( "Width", new Integer( 6000 ) );</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.container.XNamed xNamed = (com.sun.star.container.XNamed)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNamed.class, aColumnObj);</p>
     <p class="Code">Â  Â  System.out.println("The name of the wide column is " + xNamed.getName() + ".");</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_5_Data_Array" />Data Array</h5>
  <p class="Paragraph">The contents of a cell range that are stored in a 2-dimensional array of objects are set and obtained by the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeData.html" title="see type com.sun.star.sheet.XCellRangeData">com.sun.star.sheet.XCellRangeData</a></span>.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P26" style="margin-left:2.5cm;"><p class="P26" style="margin-left:0cm;">The method <span class="Codeintext">getDataArray()</span> returns a 2-dimensional array with the contents of all cells of the range.</p></li>
   <li class="P26" style="margin-left:2.5cm;"><p class="P26" style="margin-left:0cm;">The method <span class="Codeintext">setDataArray()</span> fills the data of the passed array into the cells. An empty cell is created by an empty string. The size of the array has to fit in the size of the cell range.</p></li>
  </ul>
  <p class="Paragraph">The following example uses the cell range <span class="Codeintext">xCellRange</span> that has the size of 2 columns and 3 rows. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table38"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Cell range data ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeData xData = (com.sun.star.sheet.XCellRangeData)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeData.class, xCellRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Object[][] aValues =</p>
     <p class="Code">Â  Â  {</p>
     <p class="Code">Â  Â  Â  Â  {new Double(1.1), new Integer(10)},</p>
     <p class="Code">Â  Â  Â  Â  {new Double(2.2), new String("")},</p>
     <p class="Code">Â  Â  Â  Â  {new Double(3.3), new String("Text")}</p>
     <p class="Code">Â  Â  };</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  xData.setDataArray(aValues);</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_6_Absolute_Address" />Absolute Address</h5>
  <p class="Paragraph">The method <span class="Codeintext">getCellRangeAddress()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeAddressable.html" title="see type com.sun.star.sheet.XCellRangeAddressable">com.sun.star.sheet.XCellRangeAddressable</a></span> returns a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> struct that contains the absolute address of the cell in the spreadsheet document, including the sheet index. This is useful to get the address of cell ranges returned by other methods. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table39"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Get cell range address. ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeAddressable xRangeAddr = (com.sun.star.sheet.XCellRangeAddressable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeAddressable.class, xCellRange);</p>
     <p class="Code">Â  Â  aRangeAddress = xRangeAddr.getRangeAddress();</p>
     <p class="Code">Â  Â  System.out.println("Address of this range: Â Sheet=" + aRangeAddress.Sheet);</p>
     <p class="Code">Â  Â  System.out.println(</p>
     <p class="Code">Â  Â  Â  Â  "Start column=" + aRangeAddress.StartColumn + "; Â Start row=" + aRangeAddress.StartRow);</p>
     <p class="Code">Â  Â  System.out.println(</p>
     <p class="Code">Â  Â  Â  Â  "End column Â =" + aRangeAddress.EndColumn Â  + "; Â End row Â =" + aRangeAddress.EndRow);</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_7_Fill_Series" />Fill Series</h5>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellSeries.html" title="see type com.sun.star.sheet.XCellSeries">com.sun.star.sheet.XCellSeries</a></span> fills out each cell of a cell range with values based on a start value, step count and fill mode. It is possible to fill a series in each direction, specified by a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FillDirection.html" title="see type com.sun.star.sheet.FillDirection">com.sun.star.sheet.FillDirection</a></span> constant. If the fill direction is horizontal, each row of the cell range forms a separate series. Similarly each column forms a series on a vertical fill.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P27" style="margin-left:2.5cm;"><p class="P27" style="margin-left:0cm;">The method <span class="Codeintext">fillSeries()</span> uses the first cell of each series as start value. For example, if the fill direction is âTo topâ, the bottom-most cell of each column is used as the start value. It expects a fill mode to be used to continue the start value, a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FillMode.html" title="see type com.sun.star.sheet.FillMode">com.sun.star.sheet.FillMode</a></span> constant. If the values are dates, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FillDateMode.html" title="see type com.sun.star.sheet.FillDateMode">com.sun.star.sheet.FillDateMode</a></span> constants describes the mode how the dates are calculated. If the series reaches the specified end value, the calculation is stopped.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P28" style="margin-left:2.5cm;"><p class="P28" style="margin-left:0cm;">The method <span class="Codeintext">fillAuto()</span> determines the fill mode and step count automatically. It takes a parameter containing the number of cells to be examined. For example, if the fill direction is âTo topâ and the specified number of cells is three, the three bottom-most cells of each column are used to continue the series.</p></li>
  </ul>
  <p class="P5">The following example may operate on the following spreadsheet:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table41"><colgroup><col width="68" /><col width="92" /><col width="92" /><col width="91" /><col width="92" /><col width="92" /><col width="92" /><col width="89" /></colgroup><tr><td style="text-align:left;width:1.483cm; " class="Table41A1">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41A1">
     <p class="P30">AÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41A1">
     <p class="P30">BÂ </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41A1">
     <p class="P30">CÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41A1">
     <p class="P30">DÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41A1">
     <p class="P30">EÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41A1">
     <p class="P30">FÂ </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H1">
     <p class="P30">GÂ </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">2Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">3Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">01/30/2002Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">4Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Text 10Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">5Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">JanÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">10Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">6Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">7Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.483cm; " class="Table41A2">
     <p class="P30">8Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">05/28/2002Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">02/28/2002Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:right; width:1.483cm; " class="Table41A10">
     <p class="P30">9Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">6Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table41B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.953cm; " class="Table41H2">
     <p class="P29">Â </p>
    </td></tr></table></div>
  <p class="P5">Inserting filled series in Java: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table42"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public void doSeriesSample(com.sun.star.sheet.XSpreadsheet xSheet) {Â </p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellSeries xSeries = null;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Fill 2 rows linear with end value -&gt; 2nd series is not filled completely</p>
     <p class="Code">Â  Â  xSeries = getCellSeries(xSheet, "A1:E2");</p>
     <p class="Code">Â  Â  xSeries.fillSeries(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDirection.TO_RIGHT, com.sun.star.sheet.FillMode.LINEAR,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDateMode.FILL_DATE_DAY, 2, 9);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Add months to a date</p>
     <p class="Code">Â  Â  xSeries = getCellSeries(xSheet, "A3:E3");</p>
     <p class="Code">Â  Â  xSeries.fillSeries(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDirection.TO_RIGHT, com.sun.star.sheet.FillMode.DATE,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDateMode.FILL_DATE_MONTH, 1, 0x7FFFFFFF);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Fill right to left with a text containing a value</p>
     <p class="Code">Â  Â  xSeries = getCellSeries(xSheet, "A4:E4");</p>
     <p class="Code">Â  Â  xSeries.fillSeries(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDirection.TO_LEFT, com.sun.star.sheet.FillMode.LINEAR,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDateMode.FILL_DATE_DAY, 10, 0x7FFFFFFF);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Fill with an user defined list</p>
     <p class="Code">Â  Â  xSeries = getCellSeries(xSheet, "A5:E5");</p>
     <p class="Code">Â  Â  xSeries.fillSeries(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDirection.TO_RIGHT, com.sun.star.sheet.FillMode.AUTO,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDateMode.FILL_DATE_DAY, 1, 0x7FFFFFFF);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Fill bottom to top with a geometric series</p>
     <p class="Code">Â  Â  xSeries = getCellSeries(xSheet, "G1:G5");</p>
     <p class="Code">Â  Â  xSeries.fillSeries(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDirection.TO_TOP, com.sun.star.sheet.FillMode.GROWTH,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.FillDateMode.FILL_DATE_DAY, 2, 0x7FFFFFFF);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Auto fill</p>
     <p class="Code">Â  Â  xSeries = getCellSeries(xSheet, "A7:G9");</p>
     <p class="Code">Â  Â  xSeries.fillAuto(com.sun.star.sheet.FillDirection.TO_RIGHT, 2);</p>
     <p class="Code">}Â </p>
     <p class="Code">Â </p>
     <p class="Code">Â </p>
     <p class="Code">/** Returns the XCellSeries interface of a cell range.Â </p>
     <p class="Code">Â  Â  @param xSheet Â The spreadsheet containing the cell range.</p>
     <p class="Code">Â  Â  @param aRange Â The address of the cell range.</p>
     <p class="Code">Â  Â  @return Â The XCellSeries interface. */</p>
     <p class="Code">private com.sun.star.sheet.XCellSeries getCellSeries(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheet xSheet, String aRange) {</p>
     <p class="Code">Â  Â  return (com.sun.star.sheet.XCellSeries) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XCellSeries.class, xSheet.getCellRangeByName(aRange));</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="P5">This example produces the following result:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table43"><colgroup><col width="65" /><col width="92" /><col width="92" /><col width="91" /><col width="92" /><col width="92" /><col width="92" /><col width="90" /></colgroup><tr><td style="text-align:left;width:1.432cm; " class="Table43A1">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43A1">
     <p class="P30">AÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43A1">
     <p class="P30">BÂ </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43A1">
     <p class="P30">CÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43A1">
     <p class="P30">DÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43A1">
     <p class="P30">EÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43A1">
     <p class="P30">FÂ </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H1">
     <p class="P30">GÂ </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">1Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">3Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">5Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">7Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">9Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">160Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">2Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">6Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">8Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">80Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">3Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">01/30/2002Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">02/28/2002Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">03/30/2002Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">04/30/2002Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">05/30/2002Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">40Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">4Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Text 50Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Text 40Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">Text 30Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Text 20Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Text 10Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">20Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">5Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">JanÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">FebÂ </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">MarÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">AprÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">MayÂ </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">10Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">6Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">7Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">3Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">5Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">6Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">7Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">8Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">05/28/2002Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">02/28/2002Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">11/28/2001Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">08/28/2001Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">05/28/2001Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">02/28/2001Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">11/28/2000Â </p>
    </td></tr><tr><td style="text-align:left;width:1.432cm; " class="Table43A2">
     <p class="P30">9Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">6Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:1.99cm; " class="Table43B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">0Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">-2Â </p>
    </td><td style="text-align:left;width:2.007cm; " class="Table43B2">
     <p class="P29">-4Â </p>
    </td><td style="text-align:left;width:1.979cm; " class="Table43H2">
     <p class="P29">-6Â </p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_8_Operations" />Operations</h5>
  <p class="Paragraph">The cell range interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOperation.html" title="see type com.sun.star.sheet.XSheetOperation">com.sun.star.sheet.XSheetOperation</a></span> computes a value based on the contents of all cells of a cell range or clears specific contents of the cells.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P31" style="margin-left:2.5cm;"><p class="P31" style="margin-left:0cm;">The method <span class="Codeintext">computeFunction()</span> returns the result of the calculation. The constants <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/GeneralFunction.html" title="see type com.sun.star.sheet.GeneralFunction">com.sun.star.sheet.GeneralFunction</a></span> specify the calculation method.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P32" style="margin-left:2.5cm;"><p class="P32" style="margin-left:0cm;">The method <span class="Codeintext">clearContents()</span> clears contents of the cells used. The parameter describes the contents to clear, using the constants of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellFlags.html" title="see type com.sun.star.sheet.CellFlags">com.sun.star.sheet.CellFlags</a></span>.</p></li>
  </ul>
  <p class="Paragraph">The following code shows how to compute the average of a cell range and clear the cell contents:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table40"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Sheet operation. ---</p>
     <p class="Code">Â  Â  // Compute a function</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetOperation xSheetOp = (com.sun.star.sheet.XSheetOperation)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetOperation.class, xCellRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  double fResult = xSheetOp.<span class="CODEEmphasis">computeFunction</span>(com.sun.star.sheet.GeneralFunction.AVERAGE);</p>
     <p class="Code">Â  Â  System.out.println("Average value of the data table A10:C30: " + fResult);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Clear cell contents</p>
     <p class="Code">Â  Â  xSheetOp.<span class="MethodSignatureEmphasis">clearContents</span>(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.CellFlags.ANNOTATION | com.sun.star.sheet.CellFlags.OBJECTS);</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_9_Multiple_Operations" />Multiple Operations</h5>
  <p class="Paragraph">A multiple operation combines a series of formulas with a variable and a series of values. The results of each formula with each value is shown in the table. Additionally, it is possible to calculate a single formula with two variables using a 2-value series. The method <span class="Codeintext">setTableOperation()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XMultipleOperation.html" title="see type com.sun.star.sheet.XMultipleOperation">com.sun.star.sheet.XMultipleOperation</a></span> inserts a multiple operation range.</p>
  <p class="Paragraph">The following example shows how to calculate the values 1 to 5 raised to the powers of 1 to 5 (each value to each power). The first column contains the base values, and the first row the exponents, for example, cell E3 contains the result of 2<span class="T9">4</span>. Below there are three trigonometrical functions calculated based on a series of values, for example, cell C11 contains the result of cos(0.2).</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table46"><colgroup><col width="66" /><col width="92" /><col width="92" /><col width="91" /><col width="92" /><col width="92" /><col width="92" /><col width="90" /></colgroup><tr><td style="text-align:left;width:1.45cm; " class="Table46A1">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46A1">
     <p class="P30">AÂ </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46A1">
     <p class="P30">BÂ </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46A1">
     <p class="P30">CÂ </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46A1">
     <p class="P30">DÂ </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46A1">
     <p class="P30">EÂ </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46A1">
     <p class="P30">FÂ </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H1">
     <p class="P30">GÂ </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">1Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">=A2^B1Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">3Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">5Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">2Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">3Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">4Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">3Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">5Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">6Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">5Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">7Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">8Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">=SIN(A8)Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">=COS(A8)Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">=TAN(A8)Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">9Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">0Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">10Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">0.1Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">11Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">0.2Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">12Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">0.3Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.45cm; " class="Table46A2">
     <p class="P30">13Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">0.4Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.988cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.006cm; " class="Table46B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.97cm; " class="Table46H2">
     <p class="P29">Â </p>
    </td></tr></table></div>
  <p class="Paragraph">Note that the value series have to be included in the multiple operations cell range, but not the formula cell range (in the second example). The references in the formulas address any cell outside of the area to be filled. The column cell and row cell parameter have to reference these cells exactly. In the second example, a row cell address does not have to be used, because the row contains the formulas. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table47"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public void InsertMultipleOperation(com.sun.star.sheet.XSpreadsheet xSheet)Â </p>
     <p class="Code">Â  Â  Â  Â  throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  // --- Two independent value series ---</p>
     <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress aFormulaRange = createCellRangeAddress(xSheet, "A1");</p>
     <p class="Code">Â  Â  com.sun.star.table.CellAddress aColCell = createCellAddress(xSheet, "A2");</p>
     <p class="Code">Â  Â  com.sun.star.table.CellAddress aRowCell = createCellAddress(xSheet, "B1");</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCellRange = xSheet.getCellRangeByName("A1:F6");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XMultipleOperation xMultOp = (com.sun.star.sheet.XMultipleOperation)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XMultipleOperation.class, xCellRange);</p>
     <p class="Code">Â  Â  xMultOp.setTableOperation(</p>
     <p class="Code">Â  Â  Â  Â  aFormulaRange, com.sun.star.sheet.TableOperationMode.BOTH, aColCell, aRowCell);</p>
     <p class="Code">Â </p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // --- A value series, a formula series ---</p>
     <p class="Code">Â  Â  aFormulaRange = createCellRangeAddress(xSheet, "B8:D8");</p>
     <p class="Code">Â  Â  aColCell = createCellAddress(xSheet, "A8");</p>
     <p class="Code">Â  Â  // Row cell not needed</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  xCellRange = xSheet.getCellRangeByName("A9:D13");</p>
     <p class="Code">Â  Â  xMultOp = (com.sun.star.sheet.XMultipleOperation)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XMultipleOperation.class, xCellRange);</p>
     <p class="Code">Â  Â  xMultOp.setTableOperation(</p>
     <p class="Code">Â  Â  Â  Â  aFormulaRange, com.sun.star.sheet.TableOperationMode.COLUMN, aColCell, aRowCell);</p>
     <p class="Code">}Â </p>
     <p class="Code">Â </p>
     <p class="Code">Â </p>
     <p class="Code">/** Creates a com.sun.star.table.CellAddress and initializes itÂ </p>
     <p class="Code">Â  Â  with the given range.</p>
     <p class="Code">Â  Â  @param xSheet Â The XSpreadsheet interface of the spreadsheet.</p>
     <p class="Code">Â  Â  @param aCell Â The address of the cell (or a named cell).</p>
     <p class="Code">Â */</p>
     <p class="Code">public com.sun.star.table.CellAddress createCellAddress(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheet xSheet,</p>
     <p class="Code">Â  Â  Â  Â  String aCell ) throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellAddressable xAddr = (com.sun.star.sheet.XCellAddressable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellAddressable.class,</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  xSheet.getCellRangeByName(aCell).getCellByPosition(0, 0));</p>
     <p class="Code">Â  Â  return xAddr.getCellAddress();</p>
     <p class="Code">}Â </p>
     <p class="Code">Â </p>
     <p class="Code">Â </p>
     <p class="Code">/** Creates a com.sun.star.table.CellRangeAddress and initializesÂ </p>
     <p class="Code">Â  Â  it with the given range.</p>
     <p class="Code">Â  Â  @param xSheet Â The XSpreadsheet interface of the spreadsheet.</p>
     <p class="Code">Â  Â  @param aRange Â The address of the cell range (or a named range).</p>
     <p class="Code">Â */</p>
     <p class="Code">public com.sun.star.table.CellRangeAddress createCellRangeAddress(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheet xSheet, String aRange) {</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeAddressable xAddr = (com.sun.star.sheet.XCellRangeAddressable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeAddressable.class,</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  xSheet.getCellRangeByName(aRange));</p>
     <p class="Code">Â  Â  return xAddr.getRangeAddress();</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_4_10_Handling_Array_Formulas" />Handling Array Formulas</h5>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XArrayFormulaRange.html" title="see type com.sun.star.sheet.XArrayFormulaRange">com.sun.star.sheet.XArrayFormulaRange</a></span> handles array formulas.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P33" style="margin-left:2.5cm;"><p class="P33" style="margin-left:0cm;">If the whole cell range contains an array formula, the method <span class="Codeintext">getArrayFormula()</span> returns the formula string, otherwise an empty string is returned.</p></li>
   <li class="P33" style="margin-left:2.5cm;"><p class="P33" style="margin-left:0cm;">The method <span class="Codeintext">setArrayFormula()</span> sets an array formula to the complete cell range.</p></li>
  </ul>
  <p class="Paragraph">(<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table44"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Array formulas ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XArrayFormulaRange xArrayFormula = (com.sun.star.sheet.XArrayFormulaRange)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XArrayFormulaRange.class, xCellRange);</p>
     <p class="Code">Â  Â  // Insert a 3x3 unit matrix.</p>
     <p class="Code">Â  Â  xArrayFormula.setArrayFormula("=A10:C12");</p>
     <p class="Code">Â  Â  System.out.println("Array formula is: " + xArrayFormula.getArrayFormula());</p>
    </td></tr></table></div>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table45"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table45A1">
      <div class="TableContents"><img width="39" height="39" alt="Pay attention to the following important text section" src="./9 Spreadsheet Documents_files/important.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table45B1">
      <p class="TipInTable">Due to a bug, this interface does not work correctly in the current implementation. The method accepts the translated function names, but not the English names. This is inconsistent to the method <span class="Codeintext">setFormula()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCell.html" title="see type com.sun.star.table.XCell">com.sun.star.table.XCell</a></span>.</p>
     </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_1_5_Cells" />Cells</h4>
  <p class="Paragraph">A single cell of a spreadsheet is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span>. This service extends the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/Cell.html" title="see type com.sun.star.table.Cell">com.sun.star.table.Cell</a></span>, that provides fundamental table cell functionality, such as setting formulas, values and text of a cell. </p>
  <h5 class="Head5"><a name="1_3_1_5_1_Properties_of_SheetCell" />Properties of SheetCell</h5>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span> introduces new properties and interfaces, extending the formatting-related cell properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/Cell.html" title="see type com.sun.star.table.Cell">com.sun.star.table.Cell</a></span>.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table23"><colgroup><col width="228" /><col width="477" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.992cm; " class="Table23A1">
      <p class="TableHead">Properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span></p>
     </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table23A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#Position" title="see Position of type com.sun.star.sheet.SheetCell">Position</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#Size" title="see Size of type com.sun.star.sheet.SheetCell">Size</a></span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table23B2">
     <p class="TextInTable">The position and size of the cell in 100<span class="T9">th</span> of a millimeter. The position is relative to the first cell of the spreadsheet. Note that this is not always the first visible cell.</p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table23A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#FormulaLocal" title="see FormulaLocal of type com.sun.star.sheet.SheetCell">FormulaLocal</a></span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table23B2">
     <p class="TextInTable">Used to query or set a formula using function names of the current language.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table23A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#FormulaResultType" title="see FormulaResultType of type com.sun.star.sheet.SheetCell">FormulaResultType</a></span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table23B2">
     <p class="TextInTable">The type of the result. It is a constant from the set <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FormulaResult.html" title="see type com.sun.star.sheet.FormulaResult">com.sun.star.sheet.FormulaResult</a></span>.</p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table23A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#ConditionalFormat" title="see ConditionalFormat of type com.sun.star.sheet.SheetCell">ConditionalFormat</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#ConditionalFormatLocal" title="see ConditionalFormatLocal of type com.sun.star.sheet.SheetCell">ConditionalFormatLocal</a></span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table23B2">
     <p class="TextInTable">Used to access conditional formats. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_2_6_Conditional_Formats" title="see chapter 9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting - Conditional Formats">9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting - Conditional Formats</a></span> for details.</p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table23A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#Validation" title="see Validation of type com.sun.star.sheet.SheetCell">Validation</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html#ValidationLocal" title="see ValidationLocal of type com.sun.star.sheet.SheetCell">ValidationLocal</a></span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table23B2">
     <p class="TextInTable">Used to access data validation. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_11_1_Data_Validation" title="see chapter 9.3.11 Spreadsheet Documents - Working with Spreadsheets - Other Table Operations - Data Validation">9.3.11 Spreadsheet Documents - Working with Spreadsheets - Other Table Operations - Data Validation</a></span> for details.</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_5_2_Access_to_Formulas_2C_Values_and_Errors" />Access to Formulas, Values and Errors</h5>
  <p class="Paragraph">The cell interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCell.html" title="see type com.sun.star.table.XCell">com.sun.star.table.XCell</a></span> provides methods to access the value, formula, Â content type, and error code of a single cell:</p>
  <p class="MethodSignatures">void <span class="MethodSignatureEmphasis">setValue</span>( [in] double nValue)</p>
  <p class="MethodSignatures">double <span class="MethodSignatureEmphasis">getValue</span>() </p>
  <p class="MethodSignatures">void <span class="MethodSignatureEmphasis">setFormula</span>( [in] string aFormula)</p>
  <p class="MethodSignatures">string <span class="MethodSignatureEmphasis">getFormula</span>() </p>
  <p class="MethodSignatures">com::sun::star::table::CellContentType <span class="MethodSignatureEmphasis">getType</span>()</p>
  <p class="MethodSignatures">long <span class="MethodSignatureEmphasis">getError</span>()</p>
  <p class="Paragraph">The value of a cell is a floating-point number. To set a formula to a cell, the whole formula string has to be passed including the leading equality sign. The function names must be in English.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table24"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table24A1">
      <div class="TableContents"><img width="39" height="39" alt="Tip graphics marks a hint section in the text" src="./9 Spreadsheet Documents_files/tip.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table24B1">
      <p class="TipInTable">It is possible to set simple strings or even values with special number formats. In this case, the formula string consists only of a string constant or of the number as it would be entered in the table (for instance date, time, or currency values).Â </p>
     </td></tr></table></div>
  <p class="Paragraph">The method <span class="Codeintext">getType()</span> returns a value of the enumeration <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellContentType.html" title="see type com.sun.star.table.CellContentType">com.sun.star.table.CellContentType</a></span> indicating the type of the cell content.</p>
  <p class="Paragraph">The following code fragment shows how to access and modify the content, and formatting of single cells. The <span class="Codeintext">xRange</span> is an existing cell range (a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span> interface, described in <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_4_Cell_Ranges" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges</a></span>). The method <span class="Codeintext">getCellByPosition()</span> is provided by this interface. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/GeneralTableSample.java" title="goto source Spreadsheet/GeneralTableSample.java">Spreadsheet/GeneralTableSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table25"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = null;</p>
     <p class="Code">Â  Â  com.sun.star.table.XCell xCell = null;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // *** Access and modify a VALUE CELL ***</p>
     <p class="Code">Â  Â  xCell = xRange.getCellByPosition(0, 0);</p>
     <p class="Code">Â  Â  // Set cell value.</p>
     <p class="Code">Â  Â  xCell.setValue(1234);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Get cell value.</p>
     <p class="Code">Â  Â  double nDblValue = xCell.getValue() * 2;</p>
     <p class="Code">Â  Â  xRange.getCellByPosition(0, 1).setValue(nDblValue);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // *** Create a FORMULA CELL and query error type ***</p>
     <p class="Code">Â  Â  xCell = xRange.getCellByPosition(0, 2);</p>
     <p class="Code">Â  Â  // Set formula string.</p>
     <p class="Code">Â  Â  xCell.setFormula("=1/0");</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Get error type.</p>
     <p class="Code">Â  Â  boolean bValid = (xCell.getError() == 0);</p>
     <p class="Code">Â  Â  // Get formula string.</p>
     <p class="Code">Â  Â  String aText = "The formula " + xCell.getFormula() + " is ";</p>
     <p class="Code">Â  Â  aText += bValid ? "valid." : "erroneous.";</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // *** Insert a TEXT CELL using the XText interface ***</p>
     <p class="Code">Â  Â  xCell = xRange.getCellByPosition( 0, 3 );</p>
     <p class="Code">Â  Â  com.sun.star.text.XText xCellText = (com.sun.star.text.XText)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface( com.sun.star.text.XText.class, xCell );</p>
     <p class="Code">Â  Â  com.sun.star.text.XTextCursor xTextCursor = xCellText.createTextCursor();</p>
     <p class="Code">Â  Â  xCellText.insertString( xTextCursor, aText, false );</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // *** Change cell properties ***</p>
     <p class="Code">Â  Â  int nValue = bValid ? 0x00FF00 : 0xFF4040;</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.beans.XPropertySet.class, xCell);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(nValue));</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_5_3_Access_to_Text_Content" />Access to Text Content</h5>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/Text.html" title="see type com.sun.star.text.Text">com.sun.star.text.Text</a></span> supports the modification of simple or formatted text contents. Changing text contents and text formatting is provided by the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XText.html" title="see type com.sun.star.text.XText">com.sun.star.text.XText</a></span> as discussed in <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/FirstSteps/FirstSteps.xhtml#1_First_Steps" title="see chapter 2 First Steps">2 First Steps</a></span>. Refer to chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml#1_3_1_1_Editing_Text" title="see chapter 8.3.1 Text Documents - Working with Text Documents - Word Processing - Editing Text">8.3.1 Text Documents - Working with Text Documents - Word Processing - Editing Text</a></span> for further information. It implements the interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span> that provides access to the paragraphs of the text and the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XText.html" title="see type com.sun.star.text.XText">com.sun.star.text.XText</a></span> to insert and modify text contents. For detailed information about text handling, see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml#1_3_1_1_Editing_Text" title="see chapter 8.3.1 Text Documents - Working with Text Documents - Word Processing - Editing Text">8.3.1 Text Documents - Working with Text Documents - Word Processing - Editing Text</a></span>. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table119"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table119A1">
     <p class="Code">Â  Â  // --- Insert two text paragraphs into the cell. ---</p>
     <p class="Code">Â  Â  com.sun.star.text.XText xText = (com.sun.star.text.XText)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.text.XText.class, xCell);</p>
     <p class="Code">Â  Â  com.sun.star.text.XTextCursor xTextCursor = xText.createTextCursor();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  xText.insertString(xTextCursor, "Text in first line.", false);</p>
     <p class="Code">Â  Â  xText.insertControlCharacter(xTextCursor,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, false);</p>
     <p class="Code">Â  Â  xText.insertString(xTextCursor, "Some more text.", false);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // --- Query the separate paragraphs. ---</p>
     <p class="Code">Â  Â  String aText;</p>
     <p class="Code">Â  Â  com.sun.star.container.XEnumerationAccess xParaEA =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.container.XEnumerationAccess) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.container.XEnumerationAccess.class, xCell);</p>
     <p class="Code">Â  Â  com.sun.star.container.XEnumeration xParaEnum = xParaEA.createEnumeration();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Go through the paragraphs</p>
     <p class="Code">Â  Â  while (xParaEnum.hasMoreElements()) {</p>
     <p class="Code">Â  Â  Â  Â  Object aPortionObj = xParaEnum.nextElement();</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.container.XEnumerationAccess xPortionEA =</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  (com.sun.star.container.XEnumerationAccess) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  com.sun.star.container.XEnumerationAccess.class, aPortionObj);</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.container.XEnumeration xPortionEnum = xPortionEA.createEnumeration();</p>
     <p class="Code">Â  Â  Â  Â  aText = "";</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  // Go through all text portions of a paragraph and construct string.</p>
     <p class="Code">Â  Â  Â  Â  while (xPortionEnum.hasMoreElements()) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.text.XTextRange xRange =</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  (com.sun.star.text.XTextRange) xPortionEnum.nextElement();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aText += xRange.getString();</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  Â  Â  System.out.println("Paragraph text: " + aText);</p>
     <p class="Code">Â  Â  }</p>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext">SheetCell</span> interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XTextFieldsSupplier.html" title="see type com.sun.star.text.XTextFieldsSupplier">com.sun.star.text.XTextFieldsSupplier</a></span> contains methods that provide access to the collection of text fields in the cell. For details on inserting text fields, refer to <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml#1_3_5_Text_Fields" title="see chapter 8.3.5 Text Documents - Working with Text Documents - Text Fields">8.3.5 Text Documents - Working with Text Documents - Text Fields</a></span>.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table26"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table26A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table26B1">
      <p class="TipInTable">Currently, the only possible text field in Calc cells is the hyperlink field <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/textfield/URL.html" title="see type com.sun.star.text.textfield.URL">com.sun.star.text.textfield.URL</a></span>.</p>
     </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_5_4_Absolute_Address" />Â Absolute Address</h5>
  <p class="Paragraph">The method <span class="Codeintext">getCellAddress()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellAddressable.html" title="see type com.sun.star.sheet.XCellAddressable">com.sun.star.sheet.XCellAddressable</a></span> returns a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellAddress.html" title="see type com.sun.star.table.CellAddress">com.sun.star.table.CellAddress</a></span> struct that contains the absolute address of the cell in the spreadsheet document, including the sheet index. This is useful to get the address of cells returned by other methods. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table133"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Get cell address. ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellAddressable xCellAddr = (com.sun.star.sheet.XCellAddressable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellAddressable.class, xCell);</p>
     <p class="Code">Â  Â  com.sun.star.table.CellAddress aAddress = xCellAddr.getCellAddress();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  String aText = "Address of this cell: Â Column=" + aAddress.Column;</p>
     <p class="Code">Â  Â  aText += "; Â Row=" + aAddress.Row;</p>
     <p class="Code">Â  Â  aText += "; Â Sheet=" + aAddress.Sheet;</p>
     <p class="Code">Â  Â  System.out.println(aText);</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_5_5_Cell_Annotations" />Cell Annotations</h5>
  <p class="Paragraph">A spreadsheet cell may contain one annotation that consists of simple unformatted Text.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table150"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table150A1">
      <div class="Paragraph"><div style="width: 13.157cm; " id="Frame10" class="fr19">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetAnnotationsUML.png" title="link to the full-sized graphic &quot;./SheetAnnotationsUML.png&quot;"><img border="0" width="597" height="662" alt="UML diagram showing the com.sun.star.sheet.CellAnnotation service" src="./9 Spreadsheet Documents_files/SheetAnnotationsUML.png" class="fr20" /></a>Illustration <a name="refIllustration13">9.14</a>: Cell annotations</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">This service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellAnnotation.html" title="see type com.sun.star.sheet.CellAnnotation">com.sun.star.sheet.CellAnnotation</a></span> represents an annotation. It implements interfaces to manipulate the contents and access the source cell.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P34" style="margin-left:2.5cm;"><p class="P34" style="margin-left:0cm;">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotation.html" title="see type com.sun.star.sheet.XSheetAnnotation">com.sun.star.sheet.XSheetAnnotation</a></span> implements methods to query data of the annotation and to show and hide it. This interface is returned by the method <span class="Codeintext">getAnnotation()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotationAnchor.html" title="see type com.sun.star.sheet.XSheetAnnotationAnchor">com.sun.star.sheet.XSheetAnnotationAnchor</a></span>.</p></li>
   <li class="P34" style="margin-left:2.5cm;"><p class="P34" style="margin-left:0cm;">The method <span class="Codeintext">getParent()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XChild.html" title="see type com.sun.star.container.XChild">com.sun.star.container.XChild</a></span> returns the cell object that contains the annotation.</p></li>
   <li class="P34" style="margin-left:2.5cm;"><p class="P34" style="margin-left:0cm;">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XSimpleText.html" title="see type com.sun.star.text.XSimpleText">com.sun.star.text.XSimpleText</a></span> Â modifies the text contents of the annotation. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml#1_3_1_1_Editing_Text" title="see chapter 8.3.1 Text Documents - Working with Text Documents - Word Processing - Editing Text">8.3.1 Text Documents - Working with Text Documents - Word Processing - Editing Text</a></span> for details.</p></li>
  </ul>
  <p class="Paragraph">It is possible to access the annotations through a container object from the spreadsheet or directly from a cell object.Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P35" style="margin-left:2.5cm;"><p class="P35" style="margin-left:0cm;">The method <span class="Codeintext">getAnnotations()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotationsSupplier.html" title="see type com.sun.star.sheet.XSheetAnnotationsSupplier">com.sun.star.sheet.XSheetAnnotationsSupplier</a></span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotations.html" title="see type com.sun.star.sheet.XSheetAnnotations">com.sun.star.sheet.XSheetAnnotations</a></span> of the annotations collection of this spreadsheet.</p></li>
   <li class="P35" style="margin-left:2.5cm;"><p class="P35" style="margin-left:0cm;">The method <span class="Codeintext">getAnnotation()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotationAnchor.html" title="see type com.sun.star.sheet.XSheetAnnotationAnchor">com.sun.star.sheet.XSheetAnnotationAnchor</a></span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotation.html" title="see type com.sun.star.sheet.XSheetAnnotation">com.sun.star.sheet.XSheetAnnotation</a></span> of an annotation object.</p></li>
  </ul>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellAnnotations.html" title="see type com.sun.star.sheet.CellAnnotations">com.sun.star.sheet.CellAnnotations</a></span> represents the collection of annotations for the spreadsheet and implements two interfaces to access the annotations.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P36" style="margin-left:2.5cm;"><p class="P36" style="margin-left:0cm;">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAnnotations.html" title="see type com.sun.star.sheet.XSheetAnnotations">com.sun.star.sheet.XSheetAnnotations</a></span> is derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> to access and remove annotations through their index. The method <span class="Codeintext">insertNew()</span> attaches a new annotation to a cell.</p></li>
   <li class="P36" style="margin-left:2.5cm;"><p class="P36" style="margin-left:0cm;">The method <span class="Codeintext">createEnumeration()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span> creates an enumeration object, represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellAnnotationsEnumeration.html" title="see type com.sun.star.sheet.CellAnnotationsEnumeration">com.sun.star.sheet.CellAnnotationsEnumeration</a></span>, to access the annotations sequentially.</p></li>
  </ul>
  <p class="P5">The following example inserts an annotation and makes it permanently visible. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table144"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public void doAnnotationSample(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheet xSheet,</p>
     <p class="Code">Â  Â  Â  Â  int nColumn, int nRow ) throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  // create the CellAddress struct</p>
     <p class="Code">Â  Â  com.sun.star.table.XCell xCell = xSheet.getCellByPosition(nColumn, nRow);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellAddressable xCellAddr = (com.sun.star.sheet.XCellAddressable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellAddressable.class, xCell);</p>
     <p class="Code">Â  Â  com.sun.star.table.CellAddress aAddress = xCellAddr.<span class="CODEEmphasis">getCellAddress</span>();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // insert an annotation</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetAnnotationsSupplier xAnnotationsSupp =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XSheetAnnotationsSupplier) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.sheet.XSheetAnnotationsSupplier.class, xSheet);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetAnnotations xAnnotations = xAnnotationsSupp.getAnnotations();</p>
     <p class="Code">Â  Â  xAnnotations.<span class="CODEEmphasis">insertNew</span>(aAddress, "This is an annotation");</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // make the annotation visible</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetAnnotationAnchor xAnnotAnchor =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XSheetAnnotationAnchor) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.sheet.XSheetAnnotationAnchor.class, xCell);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetAnnotation xAnnotation = xAnnotAnchor.getAnnotation();</p>
     <p class="Code">Â  Â  xAnnotation.<span class="CODEEmphasis">setIsVisible</span>(true);</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">Â </p>
  <h4 class="Head4"><a name="1_3_1_6_Cell_Ranges_and_Cells_Container" />Cell Ranges and Cells Container</h4>
  <p class="Paragraph">Cell range collections are represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span>. They are returned by several methods, for instance the cell query methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetRangesQuery.html" title="see type com.sun.star.sheet.SheetRangesQuery">com.sun.star.sheet.SheetRangesQuery</a></span>. Besides standard container operations, it performs a few spreadsheet functions also usable with a single cell range.</p>
  <h5 class="Head5"><a name="1_3_1_6_1_Properties_of_SheetCellRanges" />Properties of SheetCellRanges</h5>
  <p class="Standard">Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table52"><colgroup><col width="227" /><col width="478" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.971cm; " class="Table52A1">
      <p class="TableHead">Properties of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Table52A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html#ConditionalFormat" title="see ConditionalFormat of type com.sun.star.sheet.SheetCellRanges">ConditionalFormat</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html#ConditionalFormatLocal" title="see ConditionalFormatLocal of type com.sun.star.sheet.SheetCellRanges">ConditionalFormatLocal</a></span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Table52B2">
     <p class="TextInTable">Used to access conditional formats. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_2_6_Conditional_Formats" title="see chapter 9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting - Conditional Formats">9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting - Conditional Formats</a></span> for details.</p>
    </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Table52A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html#Validation" title="see Validation of type com.sun.star.sheet.SheetCellRanges">Validation</a></span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html#ValidationLocal" title="see ValidationLocal of type com.sun.star.sheet.SheetCellRanges">ValidationLocal</a></span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Table52B2">
     <p class="TextInTable">Used to access data validation. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_11_1_Data_Validation" title="see chapter 9.3.11 Spreadsheet Documents - Working with Spreadsheets - Other Table Operations - Data Validation">9.3.11 Spreadsheet Documents - Working with Spreadsheets - Other Table Operations - Data Validation</a></span> for details.</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_1_6_2_Access_to_Single_Cell_Ranges_in_SheetCellRanges_Container" />Access to Single Cell Ranges in SheetCellRanges Container</h5>
  <p class="P17">The interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> iterates over all contained cell ranges by index or Â enumeration. With the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameContainer.html" title="see type com.sun.star.container.XNameContainer">com.sun.star.container.XNameContainer</a></span>, it is possible to insert ranges with a user-defined name. Later the range can be found, replaced or removed using the name.</p>
  <p class="Paragraph">The following interfaces and service perform cell range actions on all ranges contained in the collection:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P37" style="margin-left:2.5cm;"><p class="P37" style="margin-left:0cm;">Interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XReplaceable.html" title="see type com.sun.star.util.XReplaceable">com.sun.star.util.XReplaceable</a></span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_3_Navigating" title="see chapter 9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating">9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating</a></span>)</p></li>
   <li class="P37" style="margin-left:2.5cm;"><p class="P37" style="margin-left:0cm;">Service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetRangesQuery.html" title="see type com.sun.star.sheet.SheetRangesQuery">com.sun.star.sheet.SheetRangesQuery</a></span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_3_Navigating" title="see chapter 9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating">9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating</a></span>)</p></li>
   <li class="P37" style="margin-left:2.5cm;"><p class="P37" style="margin-left:0cm;">Interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XIndent.html" title="see type com.sun.star.util.XIndent">com.sun.star.util.XIndent</a></span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_2_Formatting" title="see chapter 9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting">9.3.2 Spreadsheet Documents - Working with Spreadsheets - Formatting</a></span>)</p></li>
   <li class="P37" style="margin-left:2.5cm;"><p class="P37" style="margin-left:0cm;">Interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOperation.html" title="see type com.sun.star.sheet.XSheetOperation">com.sun.star.sheet.XSheetOperation</a></span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_4_Cell_Ranges" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges</a></span>)</p></li>
   <li class="P37" style="margin-left:2.5cm;"><p class="P37" style="margin-left:0cm;">Interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/chart/XChartDataArray.html" title="see type com.sun.star.chart.XChartDataArray">com.sun.star.chart.XChartDataArray</a></span> (see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Charts/Charts.xhtml#1_Charts" title="see chapter 11 Charts">11 Charts</a></span>)</p></li>
  </ul>
  <p class="Paragraph">The interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRangeContainer.html" title="see type com.sun.star.sheet.XSheetCellRangeContainer">com.sun.star.sheet.XSheetCellRangeContainer</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRanges.html" title="see type com.sun.star.sheet.XSheetCellRanges">com.sun.star.sheet.XSheetCellRanges</a></span> support basic handling of cell range collections.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P38" style="margin-left:2.5cm;"><p class="P38" style="margin-left:0cm;">The method <span class="Codeintext">getRangeAddressesAsString()</span> returns the string representation of all cell ranges.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P39" style="margin-left:2.5cm;"><p class="P39" style="margin-left:0cm;">The method <span class="Codeintext">getRangeAddresses()</span> returns a sequence with all cell range addresses.</p></li>
  </ul>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRangeContainer.html" title="see type com.sun.star.sheet.XSheetCellRangeContainer">com.sun.star.sheet.XSheetCellRangeContainer</a></span> is derived from the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRanges.html" title="see type com.sun.star.sheet.XSheetCellRanges">com.sun.star.sheet.XSheetCellRanges</a></span> to insert and remove cell ranges.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P40" style="margin-left:2.5cm;"><p class="P40" style="margin-left:0cm;">The methods <span class="Codeintext">addRangeAddress()</span> and <span class="Codeintext">addRangeAddresses()</span> insert one or more ranges into the collection. If the <span class="Codeintext">boolean</span> parameter bMergeRanges is set to <span class="Codeintext">true</span>, the methods try to merge the new range(s) with the ranges of the collection.</p></li>
   <li class="P40" style="margin-left:2.5cm;"><p class="P40" style="margin-left:0cm;">The methods <span class="Codeintext">removeRangeAddress()</span> and <span class="Codeintext">removeRangeAddresses()</span> remove existing ranges from the collection. Only ranges that are contained in the collection are removed. The methods do not try to shorten a range.</p></li>
  </ul>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRanges.html" title="see type com.sun.star.sheet.XSheetCellRanges">com.sun.star.sheet.XSheetCellRanges</a></span> implements methods for access to cells and cell ranges:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P41" style="margin-left:2.5cm;"><p class="P41" style="margin-left:0cm;">The method <span class="Codeintext">getCells()</span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span> of a cell collection. The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Cells.html" title="see type com.sun.star.sheet.Cells">com.sun.star.sheet.Cells</a></span> is discussed below. This collection contains the cell addresses of non-empty cells in all cell ranges.</p></li>
  </ul>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Cells.html" title="see type com.sun.star.sheet.Cells">com.sun.star.sheet.Cells</a></span> represents a collection of cells.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table161"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table161A1">
      <div class="Paragraph"><div style="width: 11.684cm; " id="Frame91" class="fr9">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellsUML.png" title="link to the full-sized graphic &quot;./SheetCellsUML.png&quot;"><img border="0" width="532" height="351" alt="UML diagram showing the com.sun.star.sheet.Cells service" src="./9 Spreadsheet Documents_files/SheetCellsUML.png" class="fr8" /></a>Illustration <a name="refIllustration14">9.15</a>: Cell collections</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">The following example demonstrates the usage of cell range collections and cell collections. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <p class="Code">/** All samples regarding cell range collections. */Â </p>
  <p class="Code">public void doCellRangesSamples(com.sun.star.sheet.XSpreadsheetDocument xDocument)Â </p>
  <p class="Code">Â  Â  Â  Â  throws RuntimeException, Exception {</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Create a new cell range container</p>
  <p class="Code">Â  Â  com.sun.star.lang.XMultiServiceFactory xDocFactory =</p>
  <p class="Code">Â  Â  Â  Â  (com.sun.star.lang.XMultiServiceFactory) UnoRuntime.queryInterface(</p>
  <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.lang.XMultiServiceFactory.class, xDocument);</p>
  <p class="Code">Â  Â  com.sun.star.sheet.XSheetCellRangeContainer xRangeCont =</p>
  <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XSheetCellRangeContainer) UnoRuntime.queryInterface(</p>
  <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.sheet.XSheetCellRangeContainer.class,</p>
  <p class="Code">Â  Â  Â  Â  Â  Â  xDocFactory.createInstance("com.sun.star.sheet.SheetCellRanges"));</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Insert ranges</p>
  <p class="Code">Â  Â  insertRange(xRangeCont, 0, 0, 0, 0, 0, false); Â  Â // A1:A1</p>
  <p class="Code">Â  Â  insertRange(xRangeCont, 0, 0, 1, 0, 2, true); Â  Â  // A2:A3</p>
  <p class="Code">Â  Â  insertRange(xRangeCont, 0, 1, 0, 1, 2, false); Â  Â // B1:B3</p>
  <p class="Code">Â </p>
  <p class="Code">Â  Â  // Query the list of filled cells</p>
  <p class="Code">Â  Â  System.out.print("All filled cells: ");</p>
  <p class="Code">Â  Â  com.sun.star.container.XEnumerationAccess xCellsEA = xRangeCont.getCells();</p>
  <p class="Code">Â  Â  com.sun.star.container.XEnumeration xEnum = xCellsEA.createEnumeration();</p>
  <p class="Code">Â  Â  while (xEnum.hasMoreElements()) {</p>
  <p class="Code">Â  Â  Â  Â  Object aCellObj = xEnum.nextElement();</p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XCellAddressable xAddr = (com.sun.star.sheet.XCellAddressable)</p>
  <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellAddressable.class, aCellObj);</p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.table.CellAddress aAddr = xAddr.getCellAddress();</p>
  <p class="Code">Â  Â  Â  Â  System.out.print(getCellAddressString(aAddr.Column, aAddr.Row) + " ");</p>
  <p class="Code">Â  Â  }</p>
  <p class="Code">Â  Â  System.out.println();</p>
  <p class="Code">}Â </p>
  <p class="Code">Â </p>
  <p class="Code">Â </p>
  <p class="Code">/** Inserts a cell range address into a cell range container and prints a message.Â </p>
  <p class="Code">Â  Â  @param xContainer Â The com.sun.star.sheet.XSheetCellRangeContainer interface of the container.</p>
  <p class="Code">Â  Â  @param nSheet Â Index of sheet of the range.</p>
  <p class="Code">Â  Â  @param nStartCol Â Index of first column of the range.</p>
  <p class="Code">Â  Â  @param nStartRow Â Index of first row of the range.</p>
  <p class="Code">Â  Â  @param nEndCol Â Index of last column of the range.</p>
  <p class="Code">Â  Â  @param nEndRow Â Index of last row of the range.</p>
  <p class="Code">Â  Â  @param bMerge Â Determines whether the new range should be merged with the existing ranges.</p>
  <p class="Code">Â */</p>
  <p class="Code">private void insertRange(Â </p>
  <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSheetCellRangeContainer xContainer,</p>
  <p class="Code">Â  Â  Â  Â  int nSheet, int nStartCol, int nStartRow, int nEndCol, int nEndRow,</p>
  <p class="Code">Â  Â  Â  Â  boolean bMerge) throws RuntimeException, Exception {</p>
  <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress aAddress = new com.sun.star.table.CellRangeAddress();</p>
  <p class="Code">Â  Â  aAddress.Sheet = (short)nSheet;</p>
  <p class="Code">Â  Â  aAddress.StartColumn = nStartCol;</p>
  <p class="Code">Â  Â  aAddress.StartRow = nStartRow;</p>
  <p class="Code">Â  Â  aAddress.EndColumn = nEndCol;</p>
  <p class="Code">Â  Â  aAddress.EndRow = nEndRow;</p>
  <p class="Code">Â  Â  xContainer.addRangeAddress(aAddress, bMerge);</p>
  <p class="Code">Â  Â  System.out.println(</p>
  <p class="Code">Â  Â  Â  Â  "Inserting " + (bMerge ? " Â  with" : "without") + " merge,"</p>
  <p class="Code">Â  Â  Â  Â  + " result list: " + xContainer.getRangeAddressesAsString());</p>
  <p class="Code">}Â </p>
  <h4 class="Head4"><a name="1_3_1_7_Columns_and_Rows" />Columns and Rows</h4>
  <p class="P17">Collection of table columns:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table21"><colgroup><col width="821" /></colgroup><tr class="Table211"><td style="text-align:left;width:17.979cm; " class="Table21A1">
     <div class="Paragraph"><div style="width: 13.03cm; " id="Frame19" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableColumnsUML.png" title="link to the full-sized graphic &quot;./TableColumnsUML.png&quot;"><img border="0" width="592" height="508" alt="UML diagram showing the com.sun.star.table.TableColumnsEnumeration service" src="./9 Spreadsheet Documents_files/TableColumnsUML.png" class="fr8" /></a>Illustration <a name="refIllustration15">9.16</a>: Collection of table columns</div>
      </div></div>
    </td></tr></table></div>
  <p class="P5">Collection of table rows:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table134"><colgroup><col width="821" /></colgroup><tr class="Table1341"><td style="text-align:left;width:17.979cm; " class="Table134A1">
     <div class="Paragraph"><div style="width: 13.018cm; " id="Frame20" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableRowsUML.png" title="link to the full-sized graphic &quot;./TableRowsUML.png&quot;"><img border="0" width="592" height="508" alt="UML diagram showing the com.sun.star.table.TableRowsEnumeration service" src="./9 Spreadsheet Documents_files/TableRowsUML.png" class="fr8" /></a>Illustration <a name="refIllustration16">9.17</a>: Collection of table rows</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The services <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumns.html" title="see type com.sun.star.table.TableColumns">com.sun.star.table.TableColumns</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRows.html" title="see type com.sun.star.table.TableRows">com.sun.star.table.TableRows</a></span> represent collections of all columns and rows of a table. It is possible to access cells of columns and rows, and insert and remove columns and rows using the interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableColumns.html" title="see type com.sun.star.table.XTableColumns">com.sun.star.table.XTableColumns</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableRows.html" title="see type com.sun.star.table.XTableRows">com.sun.star.table.XTableRows</a></span> that are derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span>. The method <span class="Codeintext">createEnumeration()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span> creates an enumeration of all columns or rows. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> accesses columns through their names. The implementation of this interface is optional.</p>
  <p class="Paragraph">A single column or row is represented by the services <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableColumn.html" title="see type com.sun.star.table.TableColumn">com.sun.star.table.TableColumn</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableRow.html" title="see type com.sun.star.table.TableRow">com.sun.star.table.TableRow</a></span>. They implement the interfaces <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span> that provide access to the cells and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> for modifying settings. Additionally, the service TableColumn implements the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span>. It provides the method <span class="Codeintext">getName()</span> that returns the name of a column. Changing the name of a column is not supported.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table135"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table135A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table135B1">
      <p class="TextInTable">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> returns columns and rows relative to the cell range (index 0 is always the first column or row of the cell range). But the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> returns columns with their real names, regardless of the cell range.</p>
     </td></tr></table></div>
  <p class="Paragraph">In the following example, <span class="Codeintext">xColumns</span> is an interface of a collection of columns, <span class="Codeintext">xRows</span> is an interface of a collection of rows, and <span class="Codeintext">xRange</span> is the range formed by the columns and rows. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/GeneralTableSample.java" title="goto source Spreadsheet/GeneralTableSample.java">Spreadsheet/GeneralTableSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table136"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = null;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // *** Modifying COLUMNS and ROWS ***</p>
     <p class="Code">Â  Â  // Get column C by index (interface XIndexAccess).</p>
     <p class="Code">Â  Â  Object aColumnObj = xColumns.getByIndex(2);</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aColumnObj);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("Width", new Integer(5000));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Get the name of the column.</p>
     <p class="Code">Â  Â  com.sun.star.container.XNamed xNamed = (com.sun.star.container.XNamed)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNamed.class, aColumnObj);</p>
     <p class="Code">Â  Â  aText = "The name of this column is " + xNamed.getName() + ".";</p>
     <p class="Code">Â  Â  xRange.getCellByPosition(2, 2).setFormula(aText);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Get column D by name (interface XNameAccess).</p>
     <p class="Code">Â  Â  com.sun.star.container.XNameAccess xColumnsName = (com.sun.star.container.XNameAccess)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNameAccess.class, xColumns);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  aColumnObj = xColumnsName.getByName("D");</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aColumnObj);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("IsVisible", new Boolean(false));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Get row 7 by index (interface XIndexAccess)</p>
     <p class="Code">Â  Â  Object aRowObj = xRows.getByIndex(6);</p>
     <p class="Code">Â  Â  xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aRowObj);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("Height", new Integer(5000));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Create a cell series with the values 1 ... 7.</p>
     <p class="Code">Â  Â  for (int nRow = 8; nRow &lt; 15; ++nRow)</p>
     <p class="Code">Â  Â  Â  Â  xRange.getCellByPosition( 0, nRow ).setValue( nRow - 7 );</p>
     <p class="Code">Â  Â  // Insert a row between 1 and 2</p>
     <p class="Code">Â  Â  xRows.insertByIndex(9, 1);</p>
     <p class="Code">Â  Â  // Delete the rows with the values 3 and 4.</p>
     <p class="Code">Â  Â  xRows.removeByIndex(11, 2);</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_2_Formatting" />9.3.2Â Â Formatting</h3>
  <h4 class="Head4"><a name="1_3_2_1_Cell_Formatting" />Cell Formatting</h4>
  <p class="Paragraph">In cells, cell ranges, table rows, table columns and cell ranges collections, the cells are formatted through the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellProperties.html" title="see type com.sun.star.table.CellProperties">com.sun.star.table.CellProperties</a></span>. These properties are accessible through the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> that is supported by all the objects mentioned above. The service contains all properties that describe the cell formatting of the cell range, such as the cell background color, borders, the number format and the cell alignment. Changing the property values affects all cells of the object being formatted.</p>
  <p class="Paragraph">The cell border style is stored in the struct <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableBorder.html" title="see type com.sun.star.table.TableBorder">com.sun.star.table.TableBorder</a></span>. A cell range contains six different kinds of border lines: upper, lower, left, right, horizontal inner, and vertical inner line. Each line is represented by a struct <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/BorderLine.html" title="see type com.sun.star.table.BorderLine">com.sun.star.table.BorderLine</a></span> that contains the line style and color. The <span class="Codeintext">boolean</span> members <span class="Codeintext">Is...LineValid</span> specifies the validity of the <span class="Codeintext">...Line</span> members containing the line style. If the property contains the value <span class="Codeintext">true</span>, the line style is equal in all cells that include the line. The style is contained in the <span class="Codeintext">...Line</span> struct. The value <span class="Codeintext">false</span> means the cells are formatted differently and the content of the <span class="Codeintext">...Line</span> struct is undefined. When changing the border property, these boolean values determine if the lines are changed to the style contained in the respective <span class="Codeintext">...Line</span> struct.</p>
  <h4 class="Head4"><a name="1_3_2_2_Character_and_Paragraph_Format" />Character and Paragraph Format</h4>
  <p class="Paragraph">The following services of a cell range contain properties for the character style and paragraph format:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P42" style="margin-left:2.5cm;"><p class="P42" style="margin-left:0cm;">Service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/ParagraphProperties.html" title="see type com.sun.star.style.ParagraphProperties">com.sun.star.style.ParagraphProperties</a></span></p></li>
   <li class="P42" style="margin-left:2.5cm;"><p class="P42" style="margin-left:0cm;">Service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/CharacterProperties.html" title="see type com.sun.star.style.CharacterProperties">com.sun.star.style.CharacterProperties</a></span></p></li>
   <li class="P42" style="margin-left:2.5cm;"><p class="P42" style="margin-left:0cm;">Service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/CharacterPropertiesAsian.html" title="see type com.sun.star.style.CharacterPropertiesAsian">com.sun.star.style.CharacterPropertiesAsian</a></span></p></li>
   <li class="P42" style="margin-left:2.5cm;"><p class="P42" style="margin-left:0cm;">Service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/CharacterPropertiesComplex.html" title="see type com.sun.star.style.CharacterPropertiesComplex">com.sun.star.style.CharacterPropertiesComplex</a></span></p></li>
  </ul>
  <p class="Paragraph">The chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml#1_3_2_Formatting" title="see chapter 8.3.2 Text Documents - Working with Text Documents - Formatting">8.3.2 Text Documents - Working with Text Documents - Formatting</a></span> contains a description of these properties.</p>
  <p class="Paragraph">This example formats a given cell range <span class="Codeintext">xCellRange:</span> (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table30"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table30A1">
      <p class="Code">Â  Â  // --- Change cell range properties. ---</p>
      <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = (com.sun.star.beans.XPropertySet)</p>
      <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xCellRange);</p>
      <p class="Code">Â </p>
      <p class="Code">Â  Â  // from com.sun.star.styles.CharacterProperties</p>
      <p class="Code">Â  Â  xPropSet.setPropertyValue("CharColor", new Integer(0x003399));</p>
      <p class="Code">Â  Â  xPropSet.setPropertyValue("CharHeight", new Float(20.0));</p>
      <p class="Code">Â </p>
      <p class="Code">Â  Â  // from com.sun.star.styles.ParagraphProperties</p>
      <p class="Code">Â  Â  xPropSet.setPropertyValue("ParaLeftMargin", new Integer(500));</p>
      <p class="Code">Â </p>
      <p class="Code">Â  Â  // from com.sun.star.table.CellProperties</p>
      <p class="Code">Â  Â  xPropSet.setPropertyValue("IsCellBackgroundTransparent", new Boolean(false));</p>
      <p class="Code">Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(0x99CCFF));</p>
     </td></tr></table></div>
  <p class="Paragraph">The code below changes the character and paragraph formatting of a cell. Assume that <span class="Codeintext">xCell</span> is a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCell.html" title="see type com.sun.star.table.XCell">com.sun.star.table.XCell</a></span> interface of a spreadsheet cell. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table81"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table81A1">
     <p class="Code">Â  Â  // --- Change cell properties. ---</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xCell);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // from styles.CharacterProperties</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CharColor", new Integer(0x003399));</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CharHeight", new Float(20.0));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // from styles.ParagraphProperties</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("ParaLeftMargin", new Integer(500));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // from table.CellProperties</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("IsCellBackgroundTransparent", new Boolean(false));</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(0x99CCFF));</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_2_3_Indentation" />Indentation</h4>
  <p class="Paragraph">The methods of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XIndent.html" title="see type com.sun.star.util.XIndent">com.sun.star.util.XIndent</a></span> change the left indentation of the cell contents. This interface is supported by cells, Â cell ranges and collections of cell ranges. The indentation is incremental and decremental, independent for each cell.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P43" style="margin-left:2.5cm;"><p class="P43" style="margin-left:0cm;">The method <span class="Codeintext">decrementIndent()</span> reduces the indentation of each cell by 1.</p></li>
   <li class="P43" style="margin-left:2.5cm;"><p class="P43" style="margin-left:0cm;">The method <span class="Codeintext">incrementIndent()</span> enlarges the indentation of each cell by 1.</p></li>
  </ul>
  <p class="Paragraph">The following sample shows how to increase the cell indentation by 1. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table34"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Change indentation. ---</p>
     <p class="Code">Â  Â  com.sun.star.util.XIndent xIndent = (com.sun.star.util.XIndent)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.util.XIndent.class, xCellRange);</p>
     <p class="Code">Â  Â  xIndent.incrementIndent();</p>
    </td></tr></table></div>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table35"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table35A1">
      <div class="TableContents"><img width="39" height="39" alt="Pay attention to the following important text section" src="./9 Spreadsheet Documents_files/important.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table35B1">
      <p class="TipInTable">Due to a bug, this interface does not work in the current implementation. Workaround: Use the paragraph property <span class="Codeintext">ParaIndent</span>.</p>
     </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_2_4_Equally_Formatted_Cell_Ranges" />Equally Formatted Cell Ranges</h4>
  <p class="Paragraph">It is possible to get collections of all equally formatted cell ranges contained in a source cell range.Â </p>
  <h5 class="Head5"><a name="1_3_2_4_1_Cell_Format_Ranges" />Cell Format Ranges</h5>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellFormatRanges.html" title="see type com.sun.star.sheet.CellFormatRanges">com.sun.star.sheet.CellFormatRanges</a></span> represents a collection of equally formatted cell ranges. The cells inside of a cell range of the collection have the same formatting attributes. All cells of the source range are contained in one of the ranges. If there is a non-rectangular, equal-formatted range, it is split into several rectangular ranges.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table9"><colgroup><col width="821" /></colgroup><tr class="Table91"><td style="text-align:left;width:17.979cm; " class="Table9A1">
     <div class="Paragraph"><div style="width: 13.132cm; " id="Frame26" class="fr7">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/CellFormatRangesUML1.png" title="link to the full-sized graphic &quot;./CellFormatRangesUML1.png&quot;"><img border="0" width="596" height="557" alt="UML diagram showing the  com.sun.star.sheet.CellFormatRanges service" src="./9 Spreadsheet Documents_files/CellFormatRangesUML1.png" class="fr20" /></a>Illustration <a name="refIllustration17">9.18</a>: Cell Format Ranges</div>
      </div></div>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_2_4_2_Unique_Cell_Format_Ranges" />Unique Cell Format Ranges</h5>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/UniqueCellFormatRanges.html" title="see type com.sun.star.sheet.UniqueCellFormatRanges">com.sun.star.sheet.UniqueCellFormatRanges</a></span> represents, similar to Cell Format Ranges above, a collection of equally formatted cell ranges, but this collection contains cell range container objects (service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span>) that contain the cell ranges. The cells of all ranges inside of a cell range container are equally formatted. The formatting attributes of a range container differ from each other range container. All equally formatted ranges are consolidated into one container.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table10"><colgroup><col width="783" /></colgroup><tr class="Table101"><td style="text-align:left;width:17.145cm; " class="Table10A1">
     <div class="Paragraph"><div style="width: 13.132cm; " id="Frame27" class="fr21">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/CellFormatRangesUML2.png" title="link to the full-sized graphic &quot;./CellFormatRangesUML2.png&quot;"><img border="0" width="596" height="557" alt="UML diagram showing the com.sun.star.sheet.UniqueCellFormatRanges service" src="./9 Spreadsheet Documents_files/CellFormatRangesUML2.png" class="fr22" /></a>Illustration <a name="refIllustration18">9.19</a>: UniqueCellFormatRanges</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">In the following example, the cells have two different background colors. The formatted ranges of the range A1:G3 are queried in both described ways.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table11"><colgroup><col width="67" /><col width="92" /><col width="92" /><col width="91" /><col width="92" /><col width="92" /><col width="92" /><col width="90" /></colgroup><tr><td style="text-align:left;width:1.462cm; " class="Table11A1">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11A1">
     <p class="P30">AÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11A1">
     <p class="P30">BÂ </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table11A1">
     <p class="P30">CÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11A1">
     <p class="P30">DÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11A1">
     <p class="P30">EÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11A1">
     <p class="P30">FÂ </p>
    </td><td style="text-align:left;width:1.976cm; " class="Table11H1">
     <p class="P30">GÂ </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Table11A2">
     <p class="P30">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Table11H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Table11A2">
     <p class="P30">2Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table11B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Table11H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Table11A2">
     <p class="P30">3Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Table11E3">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Table11H4">
     <p class="P29">Â </p>
    </td></tr></table></div>
  <p class="Paragraph">A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellFormatRanges.html" title="see type com.sun.star.sheet.CellFormatRanges">com.sun.star.sheet.CellFormatRanges</a></span> object contains the following ranges: A1:C2, D1:G1, D2:F2, G2:G2, and A3:G3.</p>
  <p class="Paragraph">A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/UniqueCellFormatRanges.html" title="see type com.sun.star.sheet.UniqueCellFormatRanges">com.sun.star.sheet.UniqueCellFormatRanges</a></span> object contains two <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span> range collections. One collection contains the white ranges, that is, A1:C2, D1:G1, G2:G2, and the other collection, the gray ranges, that is, D2:F2, A3:G3.</p>
  <p class="P5">The following code is an example of accessing the formatted ranges in Java. The <span class="Codeintext">getCellRangeAddressString </span>is a helper method that returns the range address as a string. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table12"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">/** All samples regarding formatted cell ranges. */Â </p>
     <p class="Code">public void doFormattedCellRangesSamples(com.sun.star.sheet.XSpreadsheet xSheet)Â </p>
     <p class="Code">Â  Â  Â  Â  throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  // All ranges in one container</p>
     <p class="Code">Â  Â  xCellRange = xSheet.getCellRangeByName("A1:G3");</p>
     <p class="Code">Â  Â  System.out.println("Service CellFormatRanges:");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellFormatRangesSupplier xFormatSupp =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XCellFormatRangesSupplier) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.sheet.XCellFormatRangesSupplier.class, xCellRange);</p>
     <p class="Code">Â  Â  com.sun.star.container.XIndexAccess xRangeIA = xFormatSupp.getCellFormatRanges();</p>
     <p class="Code">Â  Â  System.out.println( getCellRangeListString(xRangeIA));</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Ranges sorted in SheetCellRanges containers</p>
     <p class="Code">Â  Â  System.out.println("\nService UniqueCellFormatRanges:");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XUniqueCellFormatRangesSupplier xUniqueFormatSupp =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XUniqueCellFormatRangesSupplier) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.sheet.XUniqueCellFormatRangesSupplier.class, xCellRange);</p>
     <p class="Code">Â  Â  com.sun.star.container.XIndexAccess xRangesIA = xUniqueFormatSupp.getUniqueCellFormatRanges();</p>
     <p class="Code">Â  Â  int nCount = xRangesIA.getCount();</p>
     <p class="Code">Â  Â  for (int nIndex = 0; nIndex &lt; nCount; ++nIndex) {</p>
     <p class="Code">Â  Â  Â  Â  Object aRangesObj = xRangesIA.getByIndex(nIndex);</p>
     <p class="Code">Â  Â  Â  Â  xRangeIA = (com.sun.star.container.XIndexAccess) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.container.XIndexAccess.class, aRangesObj);</p>
     <p class="Code">Â  Â  Â  Â  System.out.println(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  "Container " + (nIndex + 1) + ": " + getCellRangeListString(xRangeIA));</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">}Â </p>
     <p class="Code">Â </p>
     <p class="Code">Â </p>
     <p class="Code">/** Returns a list of addresses of all cell ranges contained in the collection.Â </p>
     <p class="Code">Â  Â  @param xRangesIA Â The XIndexAccess interface of the collection.</p>
     <p class="Code">Â  Â  @return Â A string containing the cell range address list.</p>
     <p class="Code">Â */</p>
     <p class="Code">private String getCellRangeListString( com.sun.star.container.XIndexAccess xRangesIA )Â </p>
     <p class="Code">Â  Â  Â  Â  throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  String aStr = "";</p>
     <p class="Code">Â  Â  int nCount = xRangesIA.getCount();</p>
     <p class="Code">Â  Â  for (int nIndex = 0; nIndex &lt; nCount; ++nIndex) {</p>
     <p class="Code">Â  Â  Â  Â  if (nIndex &gt; 0)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aStr += " ";</p>
     <p class="Code">Â  Â  Â  Â  Object aRangeObj = xRangesIA.getByIndex(nIndex);</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSheetCellRange xCellRange = (com.sun.star.sheet.XSheetCellRange)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetCellRange.class, aRangeObj);</p>
     <p class="Code">Â  Â  Â  Â  aStr += getCellRangeAddressString(xCellRange, false);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  return aStr;</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h4 class="P13"><a name="1_3_2_5_Table_Auto_Formats" />Table Auto Formats</h4>
  <p class="Paragraph">Table auto formats are used to apply different formats to a cell range. A table auto format is a collection of cell styles used to format all cells of a range. The style applied is dependent on the position of the cell. Â </p>
  <p class="Paragraph">The table auto format contains separate information about four different row types and four different column types:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P44" style="margin-left:2.5cm;"><p class="P44" style="margin-left:0cm;">First row (header), first data area row, second data area row, last row (footer)Â </p></li>
   <li class="P44" style="margin-left:2.5cm;"><p class="P44" style="margin-left:0cm;">First column, first data area column, second data area column, last columnÂ </p></li>
  </ul>
  <p class="Paragraph">The row or column types for the data area (between first and last row/column) are repeated in sequence. Each cell of the formatted range belongs to one of the row types and column types, resulting in 16 different auto-format fields. In the example below, the highlighted cell has the formatting of the first data area row and last column field. Additionally, this example shows the indexes of all the auto format fields. These indexes are used to access the field with the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span>.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table13"><colgroup><col width="147" /><col width="128" /><col width="139" /><col width="140" /><col width="152" /></colgroup><tr><td style="text-align:left;width:3.209cm; " class="Table13A1">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:left;width:2.798cm; " class="Table13B1">
     <p class="P29">First columnÂ </p>
    </td><td style="text-align:left;width:3.043cm; " class="Table13B1">
     <p class="P29">Second data area columnÂ </p>
    </td><td style="text-align:left;width:3.071cm; " class="Table13B1">
     <p class="P29">First data area columnÂ </p>
    </td><td style="text-align:left;width:3.32cm; " class="Table13B1">
     <p class="P29">Last ColumnÂ </p>
    </td></tr><tr><td style="text-align:left;width:3.209cm; " class="Table13B1">
     <p class="TextInTable">First row (header)Â </p>
    </td><td style="text-align:left;width:2.798cm; " class="Table13B2">
     <p class="P29">0Â </p>
    </td><td style="text-align:left;width:3.043cm; " class="Table13B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:3.071cm; " class="Table13B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:3.32cm; " class="Table13E2">
     <p class="P29">3Â </p>
    </td></tr><tr><td style="text-align:left;width:3.209cm; " class="Table13B1">
     <p class="TextInTable">First data area rowÂ </p>
    </td><td style="text-align:left;width:2.798cm; " class="Table13B3">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:3.043cm; " class="Table13B3">
     <p class="P29">6Â </p>
    </td><td style="text-align:left;width:3.071cm; " class="Table13B3">
     <p class="P29">5Â </p>
    </td><td style="text-align:left;width:3.32cm; " class="Table13E3">
     <p class="P30">7Â </p>
    </td></tr><tr><td style="text-align:left;width:3.209cm; " class="Table13B1">
     <p class="TextInTable">Second data area rowÂ </p>
    </td><td style="text-align:left;width:2.798cm; " class="Table13B3">
     <p class="P29">8Â </p>
    </td><td style="text-align:left;width:3.043cm; " class="Table13B3">
     <p class="P29">10Â </p>
    </td><td style="text-align:left;width:3.071cm; " class="Table13B3">
     <p class="P29">9Â </p>
    </td><td style="text-align:left;width:3.32cm; " class="Table13E4">
     <p class="P29">11Â </p>
    </td></tr><tr><td style="text-align:left;width:3.209cm; " class="Table13B1">
     <p class="TextInTable">Last row (footer)Â </p>
    </td><td style="text-align:left;width:2.798cm; " class="Table13B3">
     <p class="P29">12Â </p>
    </td><td style="text-align:left;width:3.043cm; " class="Table13B3">
     <p class="P29">14Â </p>
    </td><td style="text-align:left;width:3.071cm; " class="Table13B3">
     <p class="P29">13Â </p>
    </td><td style="text-align:left;width:3.32cm; " class="Table13E4">
     <p class="P29">15Â </p>
    </td></tr></table></div>
  <p class="Paragraph">Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table14"><colgroup><col width="821" /></colgroup><tr class="Table141"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 13.642cm; " id="Frame28" class="fr15">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableAutoFormatUML2.png" title="link to the full-sized graphic &quot;./TableAutoFormatUML2.png&quot;"><img border="0" width="620" height="821" alt="UML diagram shwoing the com.sun.star.sheet.TableAutoFormat service" src="./9 Spreadsheet Documents_files/TableAutoFormatUML2.png" class="fr8" /></a>Illustration <a name="refIllustration19">9.20</a>: TableAutoFormat</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">A table auto format is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableAutoFormat.html" title="see type com.sun.star.sheet.TableAutoFormat">com.sun.star.sheet.TableAutoFormat</a></span>. It contains exactly 16 auto format fields (service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableAutoFormatField.html" title="see type com.sun.star.sheet.TableAutoFormatField">com.sun.star.sheet.TableAutoFormatField</a></span>). Each auto format field contains all properties of a single cell.</p>
  <p class="Paragraph">The cell range interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XAutoFormattable.html" title="see type com.sun.star.table.XAutoFormattable">com.sun.star.table.XAutoFormattable</a></span> contains the method <span class="Codeintext">autoFormat()</span> that applies a <span class="Emphasis">table auto format</span> to a cell range. The cell range must have a size of at least 3x3 cells. The <span class="Codeintext">boolean</span> properties of the table auto format determine the formatting properties are copied to the cells. The default setting of all the properties is <span class="Codeintext">true</span>.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table15"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table15A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table15B1">
      <p class="TipInTable">In the current implementation it is not possible to modify the cell borders of a table auto format (the property <span class="Codeintext">TableBorder</span> is missing). Nevertheless, the property <span class="Codeintext">IncludeBorder</span> controls whether the borders of default auto formats are applied to the cells.</p>
     </td></tr></table></div>
  <p class="Paragraph">The collection of all table auto formats is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableAutoFormats.html" title="see type com.sun.star.sheet.TableAutoFormats">com.sun.star.sheet.TableAutoFormats</a></span>. There is only one instance of this collection in the whole application. It contains all default and user-defined auto formats that are used in spreadsheets and tables of the word-processing application. It is possible to iterate through all table auto formats with an enumeration, or to access them directly using their index or their name.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table16"><colgroup><col width="821" /></colgroup><tr class="Table161"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 13.293cm; " id="Frame29" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableAutoFormatUML1.png" title="link to the full-sized graphic &quot;./TableAutoFormatUML1.png&quot;"><img border="0" width="605" height="438" alt="UML diagram showing the com.sun.star.sheet.TableAutoFormats service" src="./9 Spreadsheet Documents_files/TableAutoFormatUML1.png" class="fr8" /></a>Illustration <a name="refIllustration20">9.21</a>: TableAutoFormats</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The following example shows how to insert a new table auto format, fill it with properties, apply it to a cell range and remove it from the format collection. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table17"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public void doAutoFormatSample(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.lang.XMultiServiceFactory xServiceManager,</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheetDocument xDocument) throws RuntimeException, Exception { Â  Â  Â  Â </p>
     <p class="Code">Â  Â  // get the global collection of table auto formats, use global service manager</p>
     <p class="Code">Â  Â  Object aAutoFormatsObj = xServiceManager.createInstance("com.sun.star.sheet.TableAutoFormats");</p>
     <p class="Code">Â  Â  com.sun.star.container.XNameContainer xAutoFormatsNA = (com.sun.star.container.XNameContainer)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNameContainer.class, aAutoFormatsObj);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // create a new table auto format and insert into the container</p>
     <p class="Code">Â  Â  String aAutoFormatName = Â "Temp_Example";</p>
     <p class="Code">Â  Â  boolean bExistsAlready = xAutoFormatsNA.hasByName(aAutoFormatName);</p>
     <p class="Code">Â  Â  Object aAutoFormatObj = null;</p>
     <p class="Code">Â  Â  if (bExistsAlready)</p>
     <p class="Code">Â  Â  Â  Â  // auto format already exists -&gt; use it</p>
     <p class="Code">Â  Â  Â  Â  aAutoFormatObj = xAutoFormatsNA.getByName(aAutoFormatName);</p>
     <p class="Code">Â  Â  else {</p>
     <p class="Code">Â  Â  Â  Â  // create a new auto format (with document service manager!)</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.lang.XMultiServiceFactory xDocServiceManager =</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  (com.sun.star.lang.XMultiServiceFactory) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  com.sun.star.lang.XMultiServiceFactory.class, xDocument);</p>
     <p class="Code">Â  Â  Â  Â  aAutoFormatObj = xDocServiceManager.createInstance("com.sun.star.sheet.TableAutoFormat");</p>
     <p class="Code">Â  Â  Â  Â  xAutoFormatsNA.insertByName(aAutoFormatName, aAutoFormatObj);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  // index access to the auto format fields</p>
     <p class="Code">Â  Â  com.sun.star.container.XIndexAccess xAutoFormatIA = (com.sun.star.container.XIndexAccess)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XIndexAccess.class, aAutoFormatObj);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // set properties of all auto format fields</p>
     <p class="Code">Â  Â  for (int nRow = 0; nRow &lt; 4; ++nRow) {</p>
     <p class="Code">Â  Â  Â  Â  int nRowColor = 0;</p>
     <p class="Code">Â  Â  Â  Â  switch (nRow) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  case 0: Â  Â nRowColor = 0x999999; Â  break;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  case 1: Â  Â nRowColor = 0xFFFFCC; Â  break;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  case 2: Â  Â nRowColor = 0xEEEEEE; Â  break;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  case 3: Â  Â nRowColor = 0x999999; Â  break;</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  for (int nColumn = 0; nColumn &lt; 4; ++nColumn) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  int nColor = nRowColor;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  if ((nColumn == 0) || (nColumn == 3))</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  nColor -= 0x333300;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  Â  Â  // get the auto format field and apply properties</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Object aFieldObj = xAutoFormatIA.getByIndex(4 * nRow + nColumn);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.beans.XPropertySet xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aFieldObj);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(nColor));</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // set the auto format to the second spreadsheet</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheets xSheets = xDocument.getSheets();</p>
     <p class="Code">Â  Â  com.sun.star.container.XIndexAccess xSheetsIA = (com.sun.star.container.XIndexAccess)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XIndexAccess.class, xSheets);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSpreadsheet xSheet =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XSpreadsheet) xSheetsIA.getByIndex(1);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCellRange = xSheet.getCellRangeByName("A5:H25");</p>
     <p class="Code">Â  Â  com.sun.star.table.XAutoFormattable xAutoForm = (com.sun.star.table.XAutoFormattable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.table.XAutoFormattable.class, xCellRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  xAutoForm.autoFormat(aAutoFormatName);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // remove the auto format</p>
     <p class="Code">Â  Â  if (!bExistsAlready)</p>
     <p class="Code">Â  Â  Â  Â  xAutoFormatsNA.removeByName(aAutoFormatName);</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h4 class="P13"><a name="1_3_2_6_Conditional_Formats" />Conditional Formats</h4>
  <p class="Paragraph">A cell can be formatted automatically with a conditional format, depending on its contents or the result of a formula. A conditional format consists of several condition entries that contain the condition and name of a cell style. The style of the first met condition, <span class="Codeintext">true</span> or ânot zeroâ, is applied to the cell.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table18"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 11.783cm; " id="Frame30" class="fr15">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCondFormatUML.png" title="link to the full-sized graphic &quot;./SheetCondFormatUML.png&quot;"><img border="0" width="533" height="466" alt="UML diagram showing the com.sun.star.sheet.TableConditionalFormat service" src="./9 Spreadsheet Documents_files/SheetCondFormatUML.png" class="fr23" /></a>Illustration <a name="refIllustration21">9.22</a>: TableConditionalFormats</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">A cell or cell range object contains the properties <span class="Codeintext">ConditionalFormat</span> and <span class="Codeintext">ConditionalFormatLocal</span>. These properties return the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetConditionalEntries.html" title="see type com.sun.star.sheet.XSheetConditionalEntries">com.sun.star.sheet.XSheetConditionalEntries</a></span> of the conditional format container <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableConditionalFormat.html" title="see type com.sun.star.sheet.TableConditionalFormat">com.sun.star.sheet.TableConditionalFormat</a></span>. The objects of both properties are equal, except for the representation of formulas. The Â <span class="Codeintext">ConditionalFormatLocal </span>property uses function names in the current language.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table19"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table19A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table19B1">
      <p class="TipInTable">After a conditional format is changed, it has to be reinserted into the property set of the cell or cell range.Â </p>
     </td></tr></table></div>
  <p class="P45">A condition entry of a conditional format is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableConditionalEntry.html" title="see type com.sun.star.sheet.TableConditionalEntry">com.sun.star.sheet.TableConditionalEntry</a></span>. It implements two interfaces:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P46" style="margin-left:2.5cm;"><p class="P46" style="margin-left:0cm;">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCondition.html" title="see type com.sun.star.sheet.XSheetCondition">com.sun.star.sheet.XSheetCondition</a></span> gets and sets the operator, the first and second formula and the base address for relative references. </p></li>
   <li class="P46" style="margin-left:2.5cm;"><p class="P46" style="margin-left:0cm;">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetConditionalEntry.html" title="see type com.sun.star.sheet.XSheetConditionalEntry">com.sun.star.sheet.XSheetConditionalEntry</a></span> gets and sets the cell style name.</p></li>
  </ul>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableConditionalFormat.html" title="see type com.sun.star.sheet.TableConditionalFormat">com.sun.star.sheet.TableConditionalFormat</a></span> contains all format conditions and returns <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableConditionalEntry.html" title="see type com.sun.star.sheet.TableConditionalEntry">com.sun.star.sheet.TableConditionalEntry</a></span> objects. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetConditionalEntries.html" title="see type com.sun.star.sheet.XSheetConditionalEntries">com.sun.star.sheet.XSheetConditionalEntries</a></span> inserts new conditions and removes them.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P47" style="margin-left:2.5cm;"><p class="P47" style="margin-left:0cm;">The method <span class="Codeintext">addNew()</span> inserts a new condition. It expects a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/PropertyValue.html" title="see type com.sun.star.beans.PropertyValue">com.sun.star.beans.PropertyValue</a></span> objects. The following properties are supported:</p></li>
   <li class="P48" style="margin-left:3.75cm;"><p class="P48" style="margin-left:0cm;"><span class="Codeintext">Operator</span>: A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/ConditionOperator.html" title="see type com.sun.star.sheet.ConditionOperator">com.sun.star.sheet.ConditionOperator</a></span> constant describing the operation to perform.</p></li>
   <li class="P48" style="margin-left:3.75cm;"><p class="P48" style="margin-left:0cm;"><span class="Codeintext">Formula1</span> and <span class="Codeintext">Formula2</span>: Strings that contain the values or formulas to evaluate. <span class="Codeintext">Formula2</span> is used only if the property <span class="Codeintext">Operator</span> contains <span class="Codeintext">BETWEEN</span> or <span class="Codeintext">NOT_BETWEEN</span>.</p></li>
   <li class="P48" style="margin-left:3.75cm;"><p class="P48" style="margin-left:0cm;"><span class="Codeintext">SourcePosition</span>: A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellAddress.html" title="see type com.sun.star.table.CellAddress">com.sun.star.table.CellAddress</a></span> struct that contains the base address for relative cell references in formulas.</p></li>
   <li class="P48" style="margin-left:3.75cm;"><p class="P48" style="margin-left:0cm;"><span class="Codeintext">StyleName</span>: The name of the cell style to apply.</p></li>
   <li class="P49" style="margin-left:2.5cm;"><p class="P49" style="margin-left:0cm;">The methods <span class="Codeintext">removeByIndex()</span> removes the condition entry at the specified position.</p></li>
   <li class="P49" style="margin-left:2.5cm;"><p class="P49" style="margin-left:0cm;">The method <span class="Codeintext">clear()</span> removes all condition entries.</p></li>
  </ul>
  <p class="P45">The following example applies a conditional format to a cell range. It uses the cell style âMyNewCellStyleâ that is applied to each cell containing a value greater than 1. The <span class="Codeintext">xSheet</span> is the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> interface of a spreadsheet. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table20"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // get the conditional format object of the cell range</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCellRange = xSheet.getCellRangeByName("A1:B10");</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xCellRange);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetConditionalEntries xEntries =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.sheet.XSheetConditionalEntries) xPropSet.getPropertyValue("ConditionalFormat");</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // create a condition and apply it to the range</p>
     <p class="Code">Â  Â  com.sun.star.beans.PropertyValue[] aCondition = new com.sun.star.beans.PropertyValue[3];</p>
     <p class="Code">Â  Â  aCondition[0] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aCondition[0].Name Â = "Operator";</p>
     <p class="Code">Â  Â  aCondition[0].Value = com.sun.star.sheet.ConditionOperator.GREATER;</p>
     <p class="Code">Â  Â  aCondition[1] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aCondition[1].Name Â = "Formula1";</p>
     <p class="Code">Â  Â  aCondition[1].Value = "1";</p>
     <p class="Code">Â  Â  aCondition[2] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aCondition[2].Name Â = "StyleName";</p>
     <p class="Code">Â  Â  aCondition[2].Value = "MyNewCellStyle";</p>
     <p class="Code">Â  Â  xEntries.addNew(aCondition);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("ConditionalFormat", xEntries);</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_3_Navigating" />9.3.3Â Â Navigating</h3>
  <p class="Paragraph">Unlike other document models that provide access to their content by content suppliers, the spreadsheet document contains properties that allow direct access to various containers.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle1"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Tabelle1A1">
      <div class="TableContents"><img width="39" height="39" alt="Pay attention to the following important text section" src="./9 Spreadsheet Documents_files/important.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Tabelle1B1">
      <p class="TipInTable">This design inconsistency may be changed in future versions. The properties remain for compatibility.Â </p>
     </td></tr></table></div>
  <p class="Paragraph">The properties allow access to various containers:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P50" style="margin-left:2.5cm;"><p class="P50" style="margin-left:0cm;"><span class="Codeintext">NamedRanges</span>: The container with all the named ranges. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_3_3_Named_Ranges" title="see chapter 9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating - Named Ranges">9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating - Named Ranges</a></span>.</p></li>
   <li class="P50" style="margin-left:2.5cm;"><p class="P50" style="margin-left:0cm;"><span class="Codeintext">ColumnLabelRanges</span> and <span class="Codeintext">RowLabelRanges</span>: Containers with row labels and column labels. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_3_4_Label_Ranges" title="see chapter 9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating - Label Ranges">9.3.3 Spreadsheet Documents - Working with Spreadsheets - Navigating - Label Ranges</a></span>.</p></li>
   <li class="P50" style="margin-left:2.5cm;"><p class="P50" style="margin-left:0cm;"><span class="Codeintext">DatabaseRanges</span>: The container with all database ranges. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_5_4_Database_Ranges" title="see chapter 9.3.5 Spreadsheet Documents - Working with Spreadsheets - Database Operations - Database Ranges">9.3.5 Spreadsheet Documents - Working with Spreadsheets - Database Operations - Database Ranges</a></span>.</p></li>
   <li class="P50" style="margin-left:2.5cm;"><p class="P50" style="margin-left:0cm;"><span class="Codeintext">SheetLinks</span>, <span class="Codeintext">AreaLinks</span> and <span class="Codeintext">DDELinks</span>: Containers with external links. See <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_6_1_Sheet_Links" title="see chapter 9.3.6 Spreadsheet Documents - Working with Spreadsheets - Linking External Data - Sheet Links">9.3.6 Spreadsheet Documents - Working with Spreadsheets - Linking External Data - Sheet Links</a></span>.</p></li>
  </ul>
  <h4 class="P13"><a name="1_3_3_1_Cell_Cursor" />Cell Cursor</h4>
  <p class="Paragraph">A <span class="Emphasis">cell cursor</span> is a cell range with extended functionality and is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellCursor.html" title="see type com.sun.star.sheet.SheetCellCursor">com.sun.star.sheet.SheetCellCursor</a></span>. With a cell cursor it is possible to move through a cell range. Each table can contain only one cell cursor.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle2"><colgroup><col width="821" /></colgroup><tr class="Tabelle21"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 13.596cm; " id="Rahmen3" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellCursorUML.png" title="link to the full-sized graphic &quot;./SheetCellCursorUML.png&quot;"><img border="0" width="618" height="326" alt="UML diagram showing the com.sun.star.sheet.SheetCellCursor service" src="./9 Spreadsheet Documents_files/SheetCellCursorUML.png" class="fr8" /></a>Illustration <a name="refIllustration22">9.23</a>: Cell cursor</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">It implements all interfaces described in <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_4_Cell_Ranges" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges</a></span> and the basic cursor interfaces of the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellCursor.html" title="see type com.sun.star.table.CellCursor">com.sun.star.table.CellCursor</a></span> that represents the cell or cell range cursor of a table.</p>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> of a spreadsheet creates the cell cursors. The methods return the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellCursor.html" title="see type com.sun.star.sheet.XSheetCellCursor">com.sun.star.sheet.XSheetCellCursor</a></span> of the cursor. It is derived from the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRange.html" title="see type com.sun.star.sheet.XSheetCellRange">com.sun.star.sheet.XSheetCellRange</a></span> that provides access to cells and cell ranges. Refer to <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_4_Cell_Ranges" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges</a></span> for additional information.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P51" style="margin-left:2.5cm;"><p class="P51" style="margin-left:0cm;">The method <span class="Codeintext">createCursor()</span> creates a cursor that spans over the whole spreadsheet.</p></li>
   <li class="P51" style="margin-left:2.5cm;"><p class="P51" style="margin-left:0cm;">The method <span class="Codeintext">createCursorByRange()</span> creates a cursor that spans over the given cell range.</p></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext">SheetCellCursor </span>includes the <span class="Codeintext">CellCursor</span> service from the table module:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle3"><colgroup><col width="821" /></colgroup><tr class="Tabelle31"><td style="text-align:left;width:17.979cm; " class="Tabelle3A1">
     <div class="Paragraph"><div style="width: 10.474cm; " id="Rahmen31" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/CellCursorUML.png" title="link to the full-sized graphic &quot;./CellCursorUML.png&quot;"><img border="0" width="476" height="103" alt="UML diagram showing the com.sun.star.table.CellCursor service" src="./9 Spreadsheet Documents_files/CellCursorUML.png" class="fr8" /></a>Illustration <a name="refIllustration23">9.24</a>: Table cell cursor</div>
      </div></div>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_3_1_1_Cursor_Movement" />Cursor Movement</h5>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellCursor.html" title="see type com.sun.star.table.CellCursor">com.sun.star.table.CellCursor</a></span> implements the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html" title="see type com.sun.star.table.XCellCursor">com.sun.star.table.XCellCursor</a></span> that provides methods to move to specific cells of a cell range. This interface is derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellRange.html" title="see type com.sun.star.table.XCellRange">com.sun.star.table.XCellRange</a></span> so all methods that access single cells can be used.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle4"><colgroup><col width="227" /><col width="478" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.971cm; " class="Tabelle4A1">
      <p class="TableHead">Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html" title="see type com.sun.star.table.XCellCursor">com.sun.star.table.XCellCursor</a></span></p>
     </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Tabelle4A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html#gotoStart" title="see gotoStart of type com.sun.star.table.XCellCursor">gotoStart</a>()</span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Tabelle4B2">
     <p class="TextInTable">Moves to the first filled cell. This cell may be outside of the current range of the cursor.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Tabelle4A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html#gotoEnd" title="see gotoEnd of type com.sun.star.table.XCellCursor">gotoEnd</a>()</span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Tabelle4B2">
     <p class="TextInTable">Moves to the last filled cell. This cell may be outside of the current range of the cursor.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Tabelle4A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html#gotoOffset" title="see gotoOffset of type com.sun.star.table.XCellCursor">gotoOffset</a>()</span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Tabelle4B2">
     <p class="TextInTable">Moves the cursor relative to the current position, even if the cursor is a range.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Tabelle4A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html#gotoPrevious" title="see gotoPrevious of type com.sun.star.table.XCellCursor">gotoPrevious</a>()</span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Tabelle4B2">
     <p class="TextInTable">Moves the cursor to the latest available unprotected cell. In most cases,this is the cell to the left of the current cell.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.971cm; " class="Tabelle4A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html#gotoNext" title="see gotoNext of type com.sun.star.table.XCellCursor">gotoNext</a>()</span></p>
    </td><td style="text-align:left;width:10.469cm; " class="Tabelle4B2">
     <p class="TextInTable">Moves the cursor to the next available unprotected cell. In most cases,this is the cell to the right of the current cell.Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The following example shows how to modify a cell beyond a filled area.The <span class="Codeintext">xCursor</span> may be an initialized cell cursor. Â (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/GeneralTableSample.java" title="goto source Spreadsheet/GeneralTableSample.java">Spreadsheet/GeneralTableSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle5"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // *** Use the cell cursor to add some data below of the filled area ***</p>
     <p class="Code">Â  Â  // Move to the last filled cell.</p>
     <p class="Code">Â  Â  xCursor.gotoEnd();</p>
     <p class="Code">Â  Â  // Move one row down.</p>
     <p class="Code">Â  Â  xCursor.gotoOffset(0, 1);</p>
     <p class="Code">Â  Â  xCursor.getCellByPosition(0, 0).setFormula("Beyond of the last filled cell.");</p>
    </td></tr></table></div>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellCursor.html" title="see type com.sun.star.sheet.XSheetCellCursor">com.sun.star.sheet.XSheetCellCursor</a></span> sets the cursor to specific ranges in the sheet.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P52" style="margin-left:2.5cm;"><p class="P52" style="margin-left:0cm;">The method <span class="Codeintext">collapseToCurrentRegion()</span> expands the cursor to the shortest cell range filled with any data. A few examples from the spreadsheet below are: the cursor C2:C2 expands to B2:D3, cursor C1:C2 expands to B1:D3 and cursor A1:D4 is unchanged.</p></li>
  </ul>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle6"><colgroup><col width="42" /><col width="92" /><col width="92" /><col width="92" /><col width="91" /><col width="92" /><col width="92" /><col width="90" /></colgroup><tr><td style="text-align:left;width:0.926cm; " class="Tabelle6A1">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6A1">
     <p class="P30">AÂ </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6A1">
     <p class="P30">BÂ </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6A1">
     <p class="P30">CÂ </p>
    </td><td style="text-align:left;width:1.991cm; " class="Tabelle6A1">
     <p class="P30">DÂ </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6A1">
     <p class="P30">EÂ </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6A1">
     <p class="P30">FÂ </p>
    </td><td style="text-align:left;width:1.981cm; " class="Tabelle6H1">
     <p class="P30">GÂ </p>
    </td></tr><tr><td style="text-align:left;width:0.926cm; " class="Tabelle6A2">
     <p class="P30">1Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.991cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.981cm; " class="Tabelle6H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:0.926cm; " class="Tabelle6A2">
     <p class="P30">2Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:1.991cm; " class="Tabelle6B2">
     <p class="P29">3Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">{=C2:D3}Â </p>
    </td><td style="text-align:left;width:1.981cm; " class="Tabelle6H2">
     <p class="P29">{=C2:D3}Â </p>
    </td></tr><tr><td style="text-align:left;width:0.926cm; " class="Tabelle6A2">
     <p class="P30">3Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">TextÂ </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:1.991cm; " class="Tabelle6B2">
     <p class="P29">4Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">{=C2:D3}Â </p>
    </td><td style="text-align:left;width:1.981cm; " class="Tabelle6H2">
     <p class="P29">{=C2:D3}Â </p>
    </td></tr><tr><td style="text-align:left;width:0.926cm; " class="Tabelle6A2">
     <p class="P30">4Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.991cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.009cm; " class="Tabelle6B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.981cm; " class="Tabelle6H2">
     <p class="P29">Â </p>
    </td></tr></table></div>
  <ul style="margin-left:0.5cm;">
   <li class="P53" style="margin-left:2.5cm;"><p class="P53" style="margin-left:0cm;">The method <span class="Codeintext">collapseToCurrentArray()</span> expands or shortens the cursor range to an array formula range. This works only if the top-left cell of the current cursor contains an array formula. An example using the spreadsheet above: All the cursors with a top-left cell located in the range F2:G3 are modified to this array formula range, F2:F2 or G2:G4.</p></li>
   <li class="P54" style="margin-left:2.5cm;"><p class="P54" style="margin-left:0cm;">The method <span class="Codeintext">collapseToMergedArea()</span> expands the current cursor range so that all merged cell ranges intersecting the current range fit completely.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P54" style="margin-left:2.5cm;"><p class="P54" style="margin-left:0cm;">The methods <span class="Codeintext">expandToEntireColumns()</span> and <span class="Codeintext">expandToEntireRows()</span> expand the cursor range so that it contains all cells of the columns or rows of the current range.</p></li>
   <li class="P54" style="margin-left:2.5cm;"><p class="P54" style="margin-left:0cm;">The method <span class="Codeintext">collapseToSize()</span> resizes the cursor range to the given dimensions. The start address of the range is left unmodified. To move the cursor range without changing the current size, use the method <span class="Codeintext">gotoOffset()</span> from the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XCellCursor.html" title="see type com.sun.star.table.XCellCursor">com.sun.star.table.XCellCursor</a></span>.</p></li>
  </ul>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle8"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Tabelle8A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Tabelle8B1">
      <p class="TipInTable">Some of the methods above have misleading names: <span class="Codeintext">collapseToCurrentRegion()</span> and <span class="Codeintext">collapseToMergedArea()</span> expand the cursor range,but never shorten it and <span class="Codeintext">collapseToCurrentArray()</span>may expand or shorten the cursor range.</p>
     </td></tr></table></div>
  <p class="P17">The following example tries to find the range of the array formula in cell F22.The <span class="Codeintext">xSheet</span> is a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> interface of a spreadsheet and <span class="Codeintext">getCellRangeAddressString()</span> is a helper method that returns the range address as a string. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle9"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- find the array formula using a cell cursor ---</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xRange = xSheet.getCellRangeByName("F22");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetCellRange xCellRange = (com.sun.star.sheet.XSheetCellRange)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetCellRange.class, xRange);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetCellCursor xCursor = xSheet.createCursorByRange(xCellRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  xCursor.collapseToCurrentArray();</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XArrayFormulaRange xArray = (com.sun.star.sheet.XArrayFormulaRange)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XArrayFormulaRange.class, xCursor);</p>
     <p class="Code">Â  Â  System.out.println(</p>
     <p class="Code">Â  Â  Â  Â  "Array formula in " + getCellRangeAddressString(xCursor, false)</p>
     <p class="Code">Â  Â  Â  Â  + " contains formula " + xArray.getArrayFormula());</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_3_1_2_Used_Area" />Used Area</h5>
  <p class="P17">The cursor interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XUsedAreaCursor.html" title="see type com.sun.star.sheet.XUsedAreaCursor">com.sun.star.sheet.XUsedAreaCursor</a></span> contains methods to locate the used area of the entire sheet. The used area is the smallest cell range that contains all cells of the spreadsheet with any contents, such as values, text, and formulas, or visible formatting, such as borders and background color. In the following example, <span class="Codeintext">xSheet</span> is a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> interface of a spreadsheet. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle10"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Find the used area ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetCellCursor xCursor = xSheet.createCursor();</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XUsedAreaCursor xUsedCursor = (com.sun.star.sheet.XUsedAreaCursor)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XUsedAreaCursor.class, xCursor);</p>
     <p class="Code">Â  Â  xUsedCursor.gotoStartOfUsedArea(false);</p>
     <p class="Code">Â  Â  xUsedCursor.gotoEndOfUsedArea(true);</p>
     <p class="Code">Â  Â  System.out.println("The used area is: " + getCellRangeAddressString(xCursor, true));</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_3_2_Referencing_Ranges_by_Name" />Referencing Ranges by Name</h4>
  <p class="Paragraph">Cell ranges can be assigned a name that they may be addressed by in formulas. This is done with <span class="Emphasis">named ranges</span>. Another way to use names for cell references in formulas is the automatic label lookup which is controlled using <span class="Emphasis">label ranges</span>.</p>
  <h4 class="Head4"><a name="1_3_3_3_Named_Ranges" />Named Ranges</h4>
  <p class="Paragraph">A named range is a named formula expression, where a cell range is just one possible content. Thus, the content of a named range is always set as a string.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle11"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Tabelle11A1">
     <div class="Paragraph"><div style="width: 11.111cm; " id="Rahmen4" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/NamedRangesUML1.png" title="link to the full-sized graphic &quot;./NamedRangesUML1.png&quot;"><img border="0" width="505" height="448" alt="UML diagram showing the com.sun.star.sheet.NamedRange service" src="./9 Spreadsheet Documents_files/NamedRangesUML1.png" class="fr8" /></a>Illustration <a name="refIllustration24">9.25</a>: Named ranges</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The collection of named ranges is accessed using the document's <span class="Codeintext">NamedRanges</span> property. A new named range is added by calling the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XNamedRanges.html" title="see type com.sun.star.sheet.XNamedRanges">com.sun.star.sheet.XNamedRanges</a></span> interface's <span class="Codeintext">addNewByName()</span> method. The method's parameters are:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P55" style="margin-left:2.5cm;"><p class="P55" style="margin-left:0cm;">The name for the new named range.Â </p></li>
   <li class="P55" style="margin-left:2.5cm;"><p class="P55" style="margin-left:0cm;">The content. This must be a string containing a valid formula expression. A commonly used type of expression is an absolute cell range reference like â$Sheet1.$A1:$C3â.Â </p></li>
   <li class="P55" style="margin-left:2.5cm;"><p class="P55" style="margin-left:0cm;">A reference position for relative references. If the content contains relative cell references, and the named range is used in a formula, the references are adjusted for the formula's position. The reference position states which cell the references are relative to.Â </p></li>
   <li class="P55" style="margin-left:2.5cm;"><p class="P55" style="margin-left:0cm;">The type of the named range that controls if the named range is included in some dialogs. The type must be a combination of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/NamedRangeFlag.html" title="see type com.sun.star.sheet.NamedRangeFlag">com.sun.star.sheet.NamedRangeFlag</a></span> constants:</p><ul style="margin-left:-2cm;">
     <li class="P55" style="margin-left:2.5cm;"><p class="P55" style="margin-left:0cm;">If the <span class="Codeintext">FILTER_CRITERIA</span> bit is set, the named range is offered as a criteria range in the âAdvanced Filterâ dialog.</p></li>
     <li class="P55" style="margin-left:2.5cm;"><p class="P55" style="margin-left:0cm;">If the <span class="Codeintext">PRINT_AREA</span>, <span class="Codeintext">COLUMN_HEADER</span> or <span class="Codeintext">ROW_HEADER</span> bit is set, the named range is selected as âPrint rangeâ, âColumns to repeatâ or âRows to repeatâ in the <span class="ButtonsMenus">Edit Print Ranges</span> dialog.</p></li>
    </ul></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext">addNewFromTitles()</span> method creates named ranges from header columns or rows in a cell range. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Border.html" title="see type com.sun.star.sheet.Border">com.sun.star.sheet.Border</a></span> enum parameter selects which named ranges are created:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P56" style="margin-left:2.5cm;"><p class="P56" style="margin-left:0cm;">If the value is <span class="Codeintext">TOP</span>, a named range is created for each column of the cell range with the name taken from the range's first row, and the other cells of that column within the cell range as content.</p></li>
   <li class="P56" style="margin-left:2.5cm;"><p class="P56" style="margin-left:0cm;">For <span class="Codeintext">BOTTOM</span>, the names are taken from the range's last row.</p></li>
   <li class="P56" style="margin-left:2.5cm;"><p class="P56" style="margin-left:0cm;">If the value is <span class="Codeintext">LEFT</span>, a named range is created for each row of the cell range with the name taken from the range's first column, and the other cells of that row within the cell range as content.</p></li>
   <li class="P56" style="margin-left:2.5cm;"><p class="P56" style="margin-left:0cm;">For <span class="Codeintext">RIGHT</span>, the names are taken from the range's last column.</p></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext">removeByName()</span> method is used to remove a named range. The <span class="Codeintext">outputList()</span> method writes a list of all the named ranges into the document, starting at the specified cell position.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/NamedRange.html" title="see type com.sun.star.sheet.NamedRange">com.sun.star.sheet.NamedRange</a></span> service accesses an existing named range. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span> interface changes the name, and the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XNamedRange.html" title="see type com.sun.star.sheet.XNamedRange">com.sun.star.sheet.XNamedRange</a></span> interface changes the other settings. See the <span class="Codeintext">addNewByName</span> description above for the meaning of the individual values.</p>
  <p class="Paragraph">If the content of the name is a single cell range reference, the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeReferrer.html" title="see type com.sun.star.sheet.XCellRangeReferrer">com.sun.star.sheet.XCellRangeReferrer</a></span> interface is used to access that cell range.</p>
  <p class="Paragraph">The following example creates a named range that calculates the sum of the two cells above the position where it is used. This is done by using the relative reference âG43:G44â with the reference position G45. Then, the example uses the named range in two formulas. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle14"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // insert a named range</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xDocProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xDocument);</p>
     <p class="Code">Â  Â  Object aRangesObj = xDocProp.getPropertyValue("NamedRanges");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XNamedRanges xNamedRanges = (com.sun.star.sheet.XNamedRanges)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XNamedRanges.class, aRangesObj);</p>
     <p class="Code">Â  Â  com.sun.star.table.CellAddress aRefPos = new com.sun.star.table.CellAddress();</p>
     <p class="Code">Â  Â  aRefPos.Sheet Â = 0;</p>
     <p class="Code">Â  Â  aRefPos.Column = 6;</p>
     <p class="Code">Â  Â  aRefPos.Row Â  Â = 44;</p>
     <p class="Code">Â  Â  xNamedRanges.addNewByName("ExampleName", "SUM(G43:G44)", aRefPos, 0);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // use the named range in formulas</p>
     <p class="Code">Â  Â  xSheet.getCellByPosition(6, 44).setFormula("=ExampleName");</p>
     <p class="Code">Â  Â  xSheet.getCellByPosition(7, 44).setFormula("=ExampleName");</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_3_4_Label_Ranges" />Label Ranges</h4>
  <p class="P19">A label range consists of a label area containing the labels, and a data area containing the data that the labels address. There are label ranges for columns and rows of data, which are kept in two separate collections in the document.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle15"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Tabelle15A1">
     <div class="Paragraph"><div style="width: 10.911cm; " id="Rahmen5" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/NamedRangesUML2.png" title="link to the full-sized graphic &quot;./NamedRangesUML2.png&quot;"><img border="0" width="496" height="419" alt="UML diagram showing the com.sun.star.sheet.LabelRange service" src="./9 Spreadsheet Documents_files/NamedRangesUML2.png" class="fr8" /></a>Illustration <a name="refIllustration25">9.26</a>: Label Ranges</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/LabelRanges.html" title="see type com.sun.star.sheet.LabelRanges">com.sun.star.sheet.LabelRanges</a></span> service contains the document's column label ranges or row label ranges, depending if the <span class="Codeintext">ColumnLabelRanges</span> or <span class="Codeintext">RowLabelRanges</span> property was used to get it. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XLabelRanges.html" title="see type com.sun.star.sheet.XLabelRanges">com.sun.star.sheet.XLabelRanges</a></span> interface's <span class="Codeintext">addNew()</span> method is used to add a new label range, specifying the label area and data area. The <span class="Codeintext">removeByIndex()</span> method removes a label range.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/LabelRange.html" title="see type com.sun.star.sheet.LabelRange">com.sun.star.sheet.LabelRange</a></span> service represents a single label range and contains the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XLabelRange.html" title="see type com.sun.star.sheet.XLabelRange">com.sun.star.sheet.XLabelRange</a></span> interface to modify the label area and data area.</p>
  <p class="Paragraph">Â </p>
  <p class="P5">The following example inserts a column label range with the label area G48:H48 and the data area G49:H50, that is, the content of G48 is used as a label for G49:G50 and the content of H48 is used as a label for H49:H50, as shown in the two formulas the example inserts. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle16"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xRange = xSheet.getCellRangeByPosition(6, 47, 7, 49);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeData xData = (com.sun.star.sheet.XCellRangeData)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeData.class, xRange);</p>
     <p class="Code">Â  Â  Object[][] aValues =</p>
     <p class="Code">Â  Â  {</p>
     <p class="Code">Â  Â  Â  Â  {"Apples", "Oranges"},</p>
     <p class="Code">Â  Â  Â  Â  {new Double(5), new Double(7)},</p>
     <p class="Code">Â  Â  Â  Â  {new Double(6), new Double(8)}</p>
     <p class="Code">Â  Â  };</p>
     <p class="Code">Â  Â  xData.setDataArray(aValues);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // insert a column label range</p>
     <p class="Code">Â  Â  Object aLabelsObj = xDocProp.getPropertyValue("ColumnLabelRanges");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XLabelRanges xLabelRanges = (com.sun.star.sheet.XLabelRanges)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XLabelRanges.class, aLabelsObj);</p>
     <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress aLabelArea = new com.sun.star.table.CellRangeAddress();</p>
     <p class="Code">Â  Â  aLabelArea.Sheet Â  Â  Â  = 0;</p>
     <p class="Code">Â  Â  aLabelArea.StartColumn = 6;</p>
     <p class="Code">Â  Â  aLabelArea.StartRow Â  Â = 47;</p>
     <p class="Code">Â  Â  aLabelArea.EndColumn Â  = 7;</p>
     <p class="Code">Â  Â  aLabelArea.EndRow Â  Â  Â = 47;</p>
     <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress aDataArea = new com.sun.star.table.CellRangeAddress();</p>
     <p class="Code">Â  Â  aDataArea.Sheet Â  Â  Â  = 0;</p>
     <p class="Code">Â  Â  aDataArea.StartColumn = 6;</p>
     <p class="Code">Â  Â  aDataArea.StartRow Â  Â = 48;</p>
     <p class="Code">Â  Â  aDataArea.EndColumn Â  = 7;</p>
     <p class="Code">Â  Â  aDataArea.EndRow Â  Â  Â = 49;</p>
     <p class="Code">Â  Â  xLabelRanges.addNew(aLabelArea, aDataArea);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // use the label range in formulas</p>
     <p class="Code">Â  Â  xSheet.getCellByPosition(8, 48).setFormula("=Apples+Oranges");</p>
     <p class="Code">Â  Â  xSheet.getCellByPosition(8, 49).setFormula("=Apples+Oranges");</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_3_5_Querying_for_Cells_with_Specific_Properties" />Querying for Cells with Specific Properties</h4>
  <p class="Paragraph">Cells, cell ranges and collections of cell ranges are queried for certain cell contents through the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetRangesQuery.html" title="see type com.sun.star.sheet.SheetRangesQuery">com.sun.star.sheet.SheetRangesQuery</a></span>. It implements interfaces to query cells and cell ranges with specific properties. </p>
  <p class="Paragraph">The methods of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html" title="see type com.sun.star.sheet.XCellRangesQuery">com.sun.star.sheet.XCellRangesQuery</a></span> search for cells with specific contents or properties inside of the given cell range. The methods of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XFormulaQuery.html" title="see type com.sun.star.sheet.XFormulaQuery">com.sun.star.sheet.XFormulaQuery</a></span> search for cells in the entire spreadsheet that are reference to or are referenced from formula cells in the given range.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle17"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Tabelle17A1">
      <div class="Paragraph"><div style="width: 11.712cm; " id="Rahmen6" class="fr17">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellRangeUML3.png" title="link to the full-sized graphic &quot;./SheetCellRangeUML3.png&quot;"><img border="0" width="533" height="354" alt="UML diagram showing the com.sun.star.sheet.SheetRangesQuery service" src="./9 Spreadsheet Documents_files/SheetCellRangeUML3.png" class="fr8" /></a>Illustration <a name="refIllustration26">9.27</a>: Query sheet ranges</div>
       </div></div>
     </td></tr></table></div>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle18"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Tabelle18A1">
      <div class="TableContents"><img width="39" height="39" alt="Pay attention to the following important text section" src="./9 Spreadsheet Documents_files/important.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Tabelle18B1">
      <p class="TipInTable">Due to a bug in the current implementation, both methods <span class="Codeintext">queryPrecedents()</span> and <span class="Codeintext">queryDependents()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XFormulaQuery.html" title="see type com.sun.star.sheet.XFormulaQuery">com.sun.star.sheet.XFormulaQuery</a></span> cause an endless loop in recursive mode, if parameter <span class="Codeintext">bRecursive</span> is <span class="Codeintext">true</span>. </p>
     </td></tr></table></div>
  <p class="Paragraph">All methods return the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCellRanges.html" title="see type com.sun.star.sheet.XSheetCellRanges">com.sun.star.sheet.XSheetCellRanges</a></span> of a cell range collection. Cell range collections are described in the chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_1_6_Cell_Ranges_and_Cells_Container" title="see chapter 9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges and Cells Container">9.3.1 Spreadsheet Documents - Working with Spreadsheets - Document Structure - Cell Ranges and Cells Container</a></span>.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle19"><colgroup><col width="227" /><col width="478" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.972cm; " class="Tabelle19A1">
      <p class="TableHead">Â Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html" title="see type com.sun.star.sheet.XCellRangesQuery">com.sun.star.sheet.XCellRangesQuery</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryVisibleCells" title="see queryVisibleCells of type com.sun.star.sheet.XCellRangesQuery">queryVisibleCells</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all cells that are not hidden.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryEmptyCells" title="see queryEmptyCells of type com.sun.star.sheet.XCellRangesQuery">queryEmptyCells</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all cells that do not have any content.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryContentCells" title="see queryContentCells of type com.sun.star.sheet.XCellRangesQuery">queryContentCells</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all cells that have the contents described by the passed parameter. The flags are defined in <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellFlags.html" title="see type com.sun.star.sheet.CellFlags">com.sun.star.sheet.CellFlags</a></span>.</p>
    </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryFormulaCells" title="see queryFormulaCells of type com.sun.star.sheet.XCellRangesQuery">queryFormulaCells</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all formula cells whose results have a specific type described by the passed parameter. The result flags are defined in <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FormulaResult.html" title="see type com.sun.star.sheet.FormulaResult">com.sun.star.sheet.FormulaResult</a></span>.</p>
    </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryColumnDifferences" title="see queryColumnDifferences of type com.sun.star.sheet.XCellRangesQuery">queryColumnDifferences</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all cells of the range that have different contents than the cell in the same column of the specified row. See Â the example below.</p>
    </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryRowDifferences" title="see queryRowDifferences of type com.sun.star.sheet.XCellRangesQuery">queryRowDifferences</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all cells of the range that have different contents than the cell in the same row of the specified column. See the example below.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.972cm; " class="Tabelle19A2">
     <p class="TableCode"><span class="T10"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangesQuery.html#queryIntersection" title="see queryIntersection of type com.sun.star.sheet.XCellRangesQuery">queryIntersection</a></span><span class="T11">()</span></p>
    </td><td style="text-align:left;width:10.467cm; " class="Tabelle19B2">
     <p class="P57">Returns all cells of the range that are contained in the passed range address.Â </p>
    </td></tr></table></div>
  <p class="Paragraph">Example:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle20"><colgroup><col width="67" /><col width="92" /><col width="92" /><col width="91" /><col width="92" /><col width="92" /><col width="92" /><col width="90" /></colgroup><tr><td style="text-align:left;width:1.462cm; " class="Tabelle20A1">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20A1">
     <p class="P30">AÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20A1">
     <p class="P30">BÂ </p>
    </td><td style="text-align:left;width:1.986cm; " class="Tabelle20A1">
     <p class="P30">CÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20A1">
     <p class="P30">DÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20A1">
     <p class="P30">EÂ </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20A1">
     <p class="P30">FÂ </p>
    </td><td style="text-align:left;width:1.976cm; " class="Tabelle20H1">
     <p class="P30">GÂ </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Tabelle20A2">
     <p class="P30">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Tabelle20B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Tabelle20H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Tabelle20A2">
     <p class="P30">2Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Tabelle20B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Tabelle20H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Tabelle20A2">
     <p class="P30">3Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">2Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Tabelle20H2">
     <p class="P29">Â </p>
    </td></tr><tr><td style="text-align:left;width:1.462cm; " class="Tabelle20A2">
     <p class="P30">4Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:1.986cm; " class="Tabelle20B2">
     <p class="P29">1Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:2.004cm; " class="Tabelle20B2">
     <p class="P29">Â </p>
    </td><td style="text-align:left;width:1.976cm; " class="Tabelle20H2">
     <p class="P29">Â </p>
    </td></tr></table></div>
  <p class="P58">The queried range is A1:C4 and the passed cell address is B2.Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P59" style="margin-left:2.5cm;"><p class="P59" style="margin-left:0cm;"><span class="Codeintext">queryColumnDifferences()</span>: (the row number is of interest) The cells of column A are compared with cell A2, the cells of column B with B2 and so on. The function returns the cell range list B1:B1, B4:B4, C3:C4.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P60" style="margin-left:2.5cm;"><p class="P60" style="margin-left:0cm;"><span class="Codeintext">queryRowDifferences()</span>: (the column index is of interest) The function compares row 1 with cell B1, row 2 with cell B2 and so on. It returns the cell range list C1:C1, A2:A2, A3:A3, C3:C3.</p></li>
  </ul>
  <p class="Paragraph">The following code queries all cells with text content: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle21"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Cell Ranges Query ---</p>
     <p class="Code">Â  Â  // query addresses of all cells containing text</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangesQuery xRangesQuery = (com.sun.star.sheet.XCellRangesQuery)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangesQuery.class, xCellRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetCellRanges xCellRanges =</p>
     <p class="Code">Â  Â  Â  Â  xRangesQuery.<span class="CODEEmphasis">queryContentCells</span>((short)com.sun.star.sheet.CellFlags.STRING);</p>
     <p class="Code">Â  Â  System.out.println("Cells containing text: " + xCellRanges.getRangeAddressesAsString());</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_3_6_Search_and_Replace" />Search and Replace</h4>
  <p class="Paragraph">The cell range interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XReplaceable.html" title="see type com.sun.star.util.XReplaceable">com.sun.star.util.XReplaceable</a></span> is derived from <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XSearchable.html" title="see type com.sun.star.util.XSearchable">com.sun.star.util.XSearchable</a></span> providing search and replacement of text.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P61" style="margin-left:2.5cm;"><p class="P61" style="margin-left:0cm;">The method <span class="Codeintext">createReplaceDescriptor()</span> creates a new descriptor that contains all data for the replace action. It returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XReplaceDescriptor.html" title="see type com.sun.star.util.XReplaceDescriptor">com.sun.star.util.XReplaceDescriptor</a></span> of this descriptor.</p></li>
   <li class="P61" style="margin-left:2.5cm;"><p class="P61" style="margin-left:0cm;">The method <span class="Codeintext">replaceAll()</span> performs a replacement in all cells according to the passed replace descriptor. </p></li>
  </ul>
  <p class="Paragraph">The following example replaces all occurrences of âcellâ with âtextâ: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle22"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Replace text in all cells. ---</p>
     <p class="Code">Â  Â  com.sun.star.util.XReplaceable xReplace = (com.sun.star.util.XReplaceable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.util.XReplaceable.class, xCellRange);</p>
     <p class="Code">Â  Â  com.sun.star.util.XReplaceDescriptor xReplaceDesc = xReplace.<span class="CODEEmphasis">createReplaceDescriptor</span>();</p>
     <p class="Code">Â  Â  xReplaceDesc.setSearchString("cell");</p>
     <p class="Code">Â  Â  xReplaceDesc.setReplaceString("text");</p>
     <p class="Code">Â  Â  // property SearchWords searches for whole cells!</p>
     <p class="Code">Â  Â  xReplaceDesc.setPropertyValue("SearchWords", new Boolean(false));</p>
     <p class="Code">Â  Â  int nCount = xReplace.<span class="CODEEmphasis">replaceAll</span>(xReplaceDesc);</p>
     <p class="Code">Â  Â  System.out.println("Search text replaced " + nCount + " times."); </p>
    </td></tr></table></div>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle23"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Tabelle23A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Tabelle23B1">
      <p class="TipInTable">The property <span class="Codeintext">SearchWords</span> has a different meaning in spreadsheets: If <span class="Codeintext">true,</span> only cells containing the whole search text and nothing else is found. If <span class="Codeintext">false,</span> cells containing the search string as a substring is found.</p>
     </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_4_Sorting" />9.3.4Â Â Sorting</h3>
  <h4 class="Head4"><a name="1_3_4_1_Table_Sort_Descriptor" />Table Sort Descriptor</h4>
  <p class="Paragraph">A <span class="Emphasis">sort descriptor</span> describes all properties of a sort operation. The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableSortDescriptor2.html" title="see type com.sun.star.table.TableSortDescriptor2">com.sun.star.table.TableSortDescriptor2</a></span> extends the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/SortDescriptor2.html" title="see type com.sun.star.util.SortDescriptor2">com.sun.star.util.SortDescriptor2</a></span> with table specific sorting properties, such as:</p>
  <p class="Paragraph">The sorting orientation using the <span class="Codeintext">boolean IsSortColumns.</span></p>
  <p class="Paragraph">A sequence of sorting fields using the <span class="Codeintext">SortFields</span> property that contains a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableSortField.html" title="see type com.sun.star.table.TableSortField">com.sun.star.table.TableSortField</a></span> structs.</p>
  <p class="Paragraph">The size of the sequence using the <span class="Codeintext">MaxSortFieldsCount</span> property.</p>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetSortDescriptor2.html" title="see type com.sun.star.sheet.SheetSortDescriptor2">com.sun.star.sheet.SheetSortDescriptor2</a></span> extends the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableSortDescriptor2.html" title="see type com.sun.star.table.TableSortDescriptor2">com.sun.star.table.TableSortDescriptor2</a></span>with spreadsheet specific sorting properties, such as:</p>
  <p class="Paragraph">Moving cell formats with the cells they belong to using the boolean property <span class="Codeintext">BindFormatsToContent</span>.The existence of column or row headers using the boolean property <span class="Codeintext">ContainsHeader</span>.</p>
  <p class="Paragraph">Copying the sorted data to another position in the document using the boolean property <span class="Codeintext">CopyOutputData</span>.</p>
  <p class="Paragraph">Position where sorted data are to be copied using the property <span class="Codeintext">OutputPosition</span>.</p>
  <p class="Paragraph">If the <span class="Codeintext">IsUserListEnabled</span> property is <span class="Codeintext">true</span>, a user-defined sort list is used that specifies an order for the strings it contains. The <span class="Codeintext">UserListIndex</span> property selects an entry from the <span class="Codeintext">UserLists</span> property of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/GlobalSheetSettings.html" title="see type com.sun.star.sheet.GlobalSheetSettings">com.sun.star.sheet.GlobalSheetSettings</a></span> service to find the sort list that is used.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table27"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table27A1">
      <div class="Paragraph"><div style="width: 12.474cm; " id="Frame31" class="fr15">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DatabaseOperationsUML3.png" title="link to the full-sized graphic &quot;./DatabaseOperationsUML3.png&quot;"><img border="0" width="567" height="615" alt="UML diagram showing the com.sun.star.sheet.SheetSortDescriptor service" src="./9 Spreadsheet Documents_files/DatabaseOperationsUML3.png" class="fr8" /></a>Illustration <a name="refIllustration27">9.28</a>: SheetSortDescriptor2</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">To sort the contents of a cell range, the <span class="Codeintext">sort()</span> method from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XSortable.html" title="see type com.sun.star.util.XSortable">com.sun.star.util.XSortable</a></span> interface is called, passing a sequence of property values with properties from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetSortDescriptor2.html" title="see type com.sun.star.sheet.SheetSortDescriptor2">com.sun.star.sheet.SheetSortDescriptor2</a></span> service. The sequence can be constructed from scratch containing the properties that should be set, or the return value of the <span class="Codeintext">createSortDescriptor()</span> method can be used and modified. If the cell range is a database range that has a stored sort operation, <span class="Codeintext">createSortDescriptor()</span> returns a sequence with the options of this sort operation.</p>
  <p class="Paragraph">The fields that the cell range is sorted by are specified in the <span class="Codeintext">SortFields</span> property as a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableSortField.html" title="see type com.sun.star.table.TableSortField">com.sun.star.table.TableSortField</a></span> elements. In the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableSortField.html" title="see type com.sun.star.table.TableSortField">com.sun.star.table.TableSortField</a></span> struct, the <span class="Codeintext">Field</span> member specifies the field number by which to sort, and the boolean <span class="Codeintext">IsAscending</span> member switches between ascending and descending sorting for that field. The boolean <span class="Codeintext">IsCaseSensitive</span> specifies whether the case of letters is important when comparing entries. The <span class="Codeintext">CollatorLocale</span> is used to sort according to the sorting rules of a given locale. For some locales, several different sorting rules exist. In this case, the <span class="Codeintext">CollatorAlgorithm</span> Â is used to select one of the sorting rules. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/i18n/Collator.html" title="see type com.sun.star.i18n.Collator">com.sun.star.i18n.Collator</a></span> service is used to find the possible <span class="Codeintext">CollatorAlgorithm</span> values for a locale. Currently, it is not possible to have different locales, algorithms and case sensitivity on the different fields. </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table58"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table58A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table58B1">
      <p class="TipInTable">The <span class="Codeintext">FieldType</span> member, that is used to select textual or numeric sorting in text documents is ignored in the spreadsheet application. In a spreadsheet, a cell always has a known type of text or value, which is used for sorting, with numbers sorted before text cells.</p>
     </td></tr></table></div>
  <p class="Paragraph">The following example sorts the cell range by the second column in ascending order: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table88"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- sort by second column, ascending ---</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // define the fields to sort</p>
     <p class="Code">Â  Â  com.sun.star.util.SortField[] aSortFields = new com.sun.star.table.TableSortField[1];</p>
     <p class="Code">Â  Â  aSortFields[0] = new com.sun.star.table.TableSortField();</p>
     <p class="Code">Â  Â  aSortFields[0].Field Â  Â  Â  Â  = 1;</p>
     <p class="Code">Â  Â  aSortFields[0].IsAscending = true;</p>
     <p class="Code">Â  Â  aSortFields[0].IsCaseSensitive = false;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // define the sort descriptor</p>
     <p class="Code">Â  Â  com.sun.star.beans.PropertyValue[] aSortDesc = new com.sun.star.beans.PropertyValue[2];</p>
     <p class="Code">Â  Â  aSortDesc[0] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aSortDesc[0].Name Â = "SortFields";</p>
     <p class="Code">Â  Â  aSortDesc[0].Value = aSortFields;</p>
     <p class="Code">Â  Â  aSortDesc[1] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aSortDesc[1].Name Â = "ContainsHeader";</p>
     <p class="Code">Â  Â  aSortDesc[1].Value = new Boolean(true);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // perform the sorting</p>
     <p class="Code">Â  Â  com.sun.star.util.XSortable xSort = (com.sun.star.util.XSortable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.util.XSortable.class, xRange);</p>
     <p class="Code">Â  Â  xSort.sort(aSortDesc);</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_5_Database_Operations" />9.3.5Â Â Database Operations</h3>
  <p class="Paragraph">This section discusses the operations that treat the contents of a cell range as database data, organized in rows and columns like a database table. These operations are filtering, sorting, adding of subtotals and importing from an external database. Each of the operations is controlled using a descriptor service. The descriptors can be used in two ways:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P62" style="margin-left:2.5cm;"><p class="P62" style="margin-left:0cm;">Performing an operation on a cell range. This is described in the following sections about the individual descriptors.Â </p></li>
   <li class="P62" style="margin-left:2.5cm;"><p class="P62" style="margin-left:0cm;">Accessing the settings that are stored with a database range. This is described in the section about database ranges.Â </p></li>
  </ul>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table83"><colgroup><col width="821" /></colgroup><tr class="Table831"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 13.755cm; " id="Frame32" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DatabaseOperationsUML1.png" title="link to the full-sized graphic &quot;./DatabaseOperationsUML1.png&quot;"><img border="0" width="625" height="904" alt="UML diagram shwing the com.sun.star.sheet.DatabaseRange service" src="./9 Spreadsheet Documents_files/DatabaseOperationsUML1.png" class="fr8" /></a>Illustration <a name="refIllustration28">9.29</a>: DatabaseRange</div>
      </div></div>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_5_1_Filtering" />Filtering</h4>
  <p class="Paragraph">A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetFilterDescriptor.html" title="see type com.sun.star.sheet.SheetFilterDescriptor">com.sun.star.sheet.SheetFilterDescriptor</a></span> object is created using the <span class="Codeintext">createFilterDescriptor()</span> method from the range's <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterable.html" title="see type com.sun.star.sheet.XSheetFilterable">com.sun.star.sheet.XSheetFilterable</a></span> interface to filter data in a cell range. After applying the settings to the descriptor, it is passed to the <span class="Codeintext">filter()</span> method.</p>
  <p class="Paragraph">If <span class="Codeintext">true</span> is passed as a <span class="Codeintext">bEmpty</span> parameter to <span class="Codeintext">createFilterDescriptor()</span>, the returned descriptor contains default values for all settings. If <span class="Codeintext">false</span> is passed and the cell range is a database range that has a stored filter operation, the settings for that filter are used.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table84"><colgroup><col width="821" /></colgroup><tr class="Table841"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 12.495cm; " id="Frame33" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DatabaseOperationsUML2.png" title="link to the full-sized graphic &quot;./DatabaseOperationsUML2.png&quot;"><img border="0" width="567" height="237" alt="UML diagram showing the com.sun.star.sheet.SheetFilterDescriptor service" src="./9 Spreadsheet Documents_files/DatabaseOperationsUML2.png" class="fr8" /></a>Illustration <a name="refIllustration29">9.30</a>: SheetFilterDescriptor</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterDescriptor.html" title="see type com.sun.star.sheet.XSheetFilterDescriptor">com.sun.star.sheet.XSheetFilterDescriptor</a></span> interface is used to set the filter criteria as a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableFilterField.html" title="see type com.sun.star.sheet.TableFilterField">com.sun.star.sheet.TableFilterField</a></span> elements. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableFilterField.html" title="see type com.sun.star.sheet.TableFilterField">com.sun.star.sheet.TableFilterField</a></span> struct describes a single condition and contains the following members:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P63" style="margin-left:2.5cm;"><p class="P63" style="margin-left:0cm;"><span class="Codeintext">Connection</span> has the values <span class="Codeintext">AND</span> or <span class="Codeintext">OR,</span> and specifies how the condition is connected to the previous condition in the sequence. For the first entry, <span class="Codeintext">Connection</span> is ignored.</p></li>
   <li class="P63" style="margin-left:2.5cm;"><p class="P63" style="margin-left:0cm;"><span class="Codeintext">Field</span> is the number of the field that the condition is applied to.</p></li>
   <li class="P63" style="margin-left:2.5cm;"><p class="P63" style="margin-left:0cm;"><span class="Codeintext">Operator</span> is the type of the condition, such as <span class="Codeintext">EQUAL</span> or <span class="Codeintext">GREATER</span></p></li>
   <li class="P63" style="margin-left:2.5cm;"><p class="P63" style="margin-left:0cm;"><span class="Codeintext">IsNumeric</span> selects a numeric or textual condition.</p></li>
   <li class="P63" style="margin-left:2.5cm;"><p class="P63" style="margin-left:0cm;"><span class="Codeintext">NumericValue</span> contains the value that is used in the condition if <span class="Codeintext">IsNumeric</span> is <span class="Codeintext">true</span>.</p></li>
   <li class="P63" style="margin-left:2.5cm;"><p class="P63" style="margin-left:0cm;"><span class="Codeintext">StringValue</span> contains the text that is used in the condition if <span class="Codeintext">IsNumeric</span> is <span class="Codeintext">false</span>.</p></li>
  </ul>
  <p class="Paragraph">Additionally, the filter descriptor contains a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface for settings that affect the whole filter operation.</p>
  <p class="Paragraph">If the property <span class="Codeintext">CopyOutputData</span> is <span class="Codeintext">true</span>, the data that matches the filter criteria is copied to a cell range in the document that starts at the position specified by the <span class="Codeintext">OutputPosition</span> property. Otherwise, the rows that do not match the filter criteria are filtered (hidden) in the original cell range.</p>
  <p class="Paragraph">The following example filters the range that is in the variable <span class="Codeintext">xRange</span> for values greater or equal to 1998 in the second column: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table85"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- filter for second column &gt;= 1998 ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetFilterable xFilter = (com.sun.star.sheet.XSheetFilterable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetFilterable.class, xRange);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetFilterDescriptor xFilterDesc =</p>
     <p class="Code">Â  Â  Â  Â  xFilter.createFilterDescriptor(true);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.TableFilterField[] aFilterFields =</p>
     <p class="Code">Â  Â  Â  Â  new com.sun.star.sheet.TableFilterField[1];</p>
     <p class="Code">Â  Â  aFilterFields[0] = new com.sun.star.sheet.TableFilterField();</p>
     <p class="Code">Â  Â  aFilterFields[0].Field Â  Â  Â  Â = 1;</p>
     <p class="Code">Â  Â  aFilterFields[0].IsNumeric Â  Â = true;</p>
     <p class="Code">Â  Â  aFilterFields[0].Operator Â  Â  = com.sun.star.sheet.FilterOperator.GREATER_EQUAL;</p>
     <p class="Code">Â  Â  aFilterFields[0].NumericValue = 1998;</p>
     <p class="Code">Â  Â  xFilterDesc.setFilterFields(aFilterFields);</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xFilterProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xFilterDesc);</p>
     <p class="Code">Â  Â  xFilterProp.setPropertyValue("ContainsHeader", new Boolean(true));</p>
     <p class="Code">Â  Â  xFilter.filter(xFilterDesc);</p>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterableEx.html" title="see type com.sun.star.sheet.XSheetFilterableEx">com.sun.star.sheet.XSheetFilterableEx</a></span> interface is used to create a filter descriptor from criteria in a cell range in the same manner as the âAdvanced Filterâ dialog. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterableEx.html" title="see type com.sun.star.sheet.XSheetFilterableEx">com.sun.star.sheet.XSheetFilterableEx</a></span> interface must be queried from the range that contains the conditions, and the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetFilterable.html" title="see type com.sun.star.sheet.XSheetFilterable">com.sun.star.sheet.XSheetFilterable</a></span> interface of the range to be filtered must be passed to the <span class="Codeintext">createFilterDescriptorByObject()</span> call.</p>
  <p class="Paragraph">The following example performs the same filter operation as the example before, but reads the filter criteria from a cell range:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table86"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- do the same filter as above, using criteria from a cell range ---</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCritRange = xSheet.getCellRangeByName("B27:B28");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeData xCritData = (com.sun.star.sheet.XCellRangeData)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeData.class, xCritRange);</p>
     <p class="Code">Â  Â  Object[][] aCritValues = {{"Year"}, {"&gt;= 1998"}};</p>
     <p class="Code">Â  Â  xCritData.setDataArray(aCritValues);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetFilterableEx xCriteria = (com.sun.star.sheet.XSheetFilterableEx)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetFilterableEx.class, xCritRange);</p>
     <p class="Code">Â  Â  xFilterDesc = xCriteria.createFilterDescriptorByObject(xFilter);</p>
     <p class="Code">Â  Â  if (xFilterDesc != null)</p>
     <p class="Code">Â  Â  Â  Â  xFilter.filter(xFilterDesc);</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_5_2_Subtotals" />Subtotals</h4>
  <p class="Paragraph">A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SubTotalDescriptor.html" title="see type com.sun.star.sheet.SubTotalDescriptor">com.sun.star.sheet.SubTotalDescriptor</a></span> object is created using the <span class="Codeintext">createSubTotalDescriptor()</span> method from the range's <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSubTotalCalculatable.html" title="see type com.sun.star.sheet.XSubTotalCalculatable">com.sun.star.sheet.XSubTotalCalculatable</a></span> interface to create subtotals for a cell range. After applying the settings to the descriptor, it is passed to the <span class="Codeintext">applySubTotals()</span> method.</p>
  <p class="Paragraph">The <span class="Codeintext">bEmpty</span> parameter to the <span class="Codeintext">createSubTotalDescriptor()</span> method works in the same manner as the parameter to the <span class="Codeintext">createFilterDescriptor()</span> method described in the filtering section. If the <span class="Codeintext">bReplace</span> parameter to the <span class="Codeintext">applySubTotals()</span> method is <span class="Codeintext">true</span>, existing subtotal rows are deleted before inserting new ones.</p>
  <p class="Paragraph">The <span class="Codeintext">removeSubTotals()</span> method removes the subtotal rows from the cell range without modifying the stored subtotal settings, so that the same subtotals can later be restored.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table89"><colgroup><col width="821" /></colgroup><tr class="Table891"><td style="text-align:left;">
     <div class="Paragraph"><div style="height: 7.84cm; width: 12.626cm; " id="Frame34" class="fr2">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DatabaseOperationsUML4.png" title="link to the full-sized graphic &quot;./DatabaseOperationsUML4.png&quot;"><img border="0" width="574" height="332" alt="UML diagram showing the com.sun.star.sheet.SubTotalDescriptor descriptor" src="./9 Spreadsheet Documents_files/DatabaseOperationsUML4.png" class="fr8" /></a>Illustration <a name="refIllustration30">9.31</a>: SubtotalDescriptor</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">New fields are added to the subtotal descriptor using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSubTotalDescriptor.html" title="see type com.sun.star.sheet.XSubTotalDescriptor">com.sun.star.sheet.XSubTotalDescriptor</a></span> interface's <span class="Codeintext">addNew()</span> method. The <span class="Codeintext">nGroupColumn</span> parameter selects the column by which values are grouped. The subtotals are inserted at changes of the column's values. The <span class="Codeintext">aSubTotalColumns</span> parameter specifies which column subtotal values are calculated. It is a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SubTotalColumn.html" title="see type com.sun.star.sheet.SubTotalColumn">com.sun.star.sheet.SubTotalColumn</a></span> entries where each entry contains the column number and the function to be calculated.</p>
  <p class="Paragraph">To query or modify the fields in a subtotal descriptor, the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> interface is used to access the fields. Each field's <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSubTotalField.html" title="see type com.sun.star.sheet.XSubTotalField">com.sun.star.sheet.XSubTotalField</a></span> interface gets and sets the group and subtotal columns.</p>
  <p class="Paragraph">The example below creates subtotals, grouping by the first column and calculating the sum of the third column: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table90"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- insert subtotals ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSubTotalCalculatable xSub = (com.sun.star.sheet.XSubTotalCalculatable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSubTotalCalculatable.class, xRange);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSubTotalDescriptor xSubDesc = xSub.createSubTotalDescriptor(true);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.SubTotalColumn[] aColumns = new com.sun.star.sheet.SubTotalColumn[1];</p>
     <p class="Code">Â  Â  // calculate sum of third column</p>
     <p class="Code">Â  Â  aColumns[0] = new com.sun.star.sheet.SubTotalColumn();</p>
     <p class="Code">Â  Â  aColumns[0].Column Â  = 2;</p>
     <p class="Code">Â  Â  aColumns[0].Function = com.sun.star.sheet.GeneralFunction.SUM;</p>
     <p class="Code">Â  Â  // group by first column</p>
     <p class="Code">Â  Â  xSubDesc.addNew(aColumns, 0);</p>
     <p class="Code">Â  Â  xSub.applySubTotals(xSubDesc, true);</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_5_3_Database_Import" />Database Import</h4>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XImportable.html" title="see type com.sun.star.util.XImportable">com.sun.star.util.XImportable</a></span> interface imports data from an external data source (database) into spreadsheet cells. The database has to be registered in <span class="T2">OpenOffice.org</span> API, so that it can be selected using its name. The <span class="Codeintext">doImport</span> call takes a sequence of property values that select the data to import.</p>
  <p class="Paragraph">Similar to the sort descriptor, the import descriptor's sequence of property values can be constructed from scratch, or the return value of the <span class="Codeintext">createImportDescriptor()</span> method can be used and modified. The <span class="Codeintext">createImportDescriptor()</span> method returns a description of the previously imported data if the cell range is a database range with stored import settings and the <span class="Codeintext">bEmpty</span> parameter is <span class="Codeintext">false</span>.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table91"><colgroup><col width="821" /></colgroup><tr class="Table911"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 6.145cm; " id="Frame35" class="fr24">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DatabaseOperationsUML5.png" title="link to the full-sized graphic &quot;./DatabaseOperationsUML5.png&quot;"><img border="0" width="278" height="131" alt="UML diagram showing the com.sun.star.sheet.DatabaseImportDescriptor service" src="./9 Spreadsheet Documents_files/DatabaseOperationsUML5.png" class="fr8" /></a>Illustration <a name="refIllustration31">9.32</a>: DatabaseImportDescriptor</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext">DatabaseName</span> property selects a database. The <span class="Codeintext">SourceType</span> selects the kind of object from the database that is imported. It can have the following values:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P64" style="margin-left:2.5cm;"><p class="P64" style="margin-left:0cm;">If <span class="Codeintext">SourceType</span> is <span class="Codeintext">TABLE</span>, the whole table that is named by <span class="Codeintext">SourceObject</span> is imported.</p></li>
   <li class="P64" style="margin-left:2.5cm;"><p class="P64" style="margin-left:0cm;">If <span class="Codeintext">SourceType</span> is <span class="Codeintext">QUERY</span>, the <span class="Codeintext">SourceObject</span> must be the name of a named query.</p></li>
   <li class="P64" style="margin-left:2.5cm;"><p class="P64" style="margin-left:0cm;">If <span class="Codeintext">SourceType</span> is <span class="Codeintext">SQL</span>, the <span class="Codeintext">SourceObject</span> is used as a literal SQL command string.</p></li>
  </ul>
  <p class="Paragraph">If a database name is in the <span class="Codeintext">aDatabase</span> variable and a table name in <span class="Codeintext">aTableName</span>, the following code imports that table from the database: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table92"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- import from database ---</p>
     <p class="Code">Â  Â  com.sun.star.beans.PropertyValue[] aImportDesc = new com.sun.star.beans.PropertyValue[3];</p>
     <p class="Code">Â  Â  aImportDesc[0] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aImportDesc[0].Name Â = "DatabaseName";</p>
     <p class="Code">Â  Â  aImportDesc[0].Value = aDatabase;</p>
     <p class="Code">Â  Â  aImportDesc[1] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aImportDesc[1].Name Â = "SourceType";</p>
     <p class="Code">Â  Â  aImportDesc[1].Value = com.sun.star.sheet.DataImportMode.TABLE;</p>
     <p class="Code">Â  Â  aImportDesc[2] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aImportDesc[2].Name Â = "SourceObject";</p>
     <p class="Code">Â  Â  aImportDesc[2].Value = aTableName;</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xImportRange = xSheet.getCellRangeByName("B33:B33");</p>
     <p class="Code">Â  Â  com.sun.star.util.XImportable xImport = ( com.sun.star.util.XImportable )</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.util.XImportable.class, xImportRange);</p>
     <p class="Code">Â  Â  xImport.doImport(aImportDesc);</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_5_4_Database_Ranges" />Database Ranges</h4>
  <p class="Paragraph">A database range is a name for a cell range that also stores filtering, sorting, subtotal and import settings, as well as some options.Â </p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetDocument.html" title="see type com.sun.star.sheet.SpreadsheetDocument">com.sun.star.sheet.SpreadsheetDocument</a></span> service has a property <span class="Codeintext">DatabaseRanges</span> that is used to get the document's collection of database ranges. A new database range is added using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDatabaseRanges.html" title="see type com.sun.star.sheet.XDatabaseRanges">com.sun.star.sheet.XDatabaseRanges</a></span> interface's <span class="Codeintext">addNewByName()</span> method that requires the name of the new database range, and a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> with the address of the cell range as arguments. The <span class="Codeintext">removeByName()</span> method removes a database range.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> interface is used to get a single <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DatabaseRange.html" title="see type com.sun.star.sheet.DatabaseRange">com.sun.star.sheet.DatabaseRange</a></span> object. Its <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeReferrer.html" title="see type com.sun.star.sheet.XCellRangeReferrer">com.sun.star.sheet.XCellRangeReferrer</a></span> interface is used to access the cell range that it is pointed to. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDatabaseRange.html" title="see type com.sun.star.sheet.XDatabaseRange">com.sun.star.sheet.XDatabaseRange</a></span> interface retrieves or changes the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> that is named, and gets the stored descriptors.</p>
  <p class="Paragraph">All descriptors of a database range are updated when a database operation is carried out on the cell range that the database range points to. The stored filter descriptor and subtotal descriptor can also be modified by changing the objects that are returned by the <span class="Codeintext">getFilterDescriptor()</span> and <span class="Codeintext">getSubTotalDescriptor()</span> methods. Calling the <span class="Codeintext">refresh()</span> method carries out the stored operations again.</p>
  <p class="Paragraph">Whenever a database operation is carried out on a cell range where a database range is not defined, a temporary database range is used to hold the settings. This temporary database range has its <span class="Codeintext">IsUserDefined</span> property set to <span class="Codeintext">false</span> and is valid until another database operation is performed on a different cell range. In this case, the temporary database range is modified to refer to the new cell range.</p>
  <p class="Paragraph">The following example uses the <span class="Codeintext">IsUserDefined</span> property to find the temporary database range, and applies a background color to the corresponding cell range. If run directly after the database import example above, this marks the imported data. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table93"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // use the temporary database range to find the imported data's size</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xDocProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, getDocument());</p>
     <p class="Code">Â  Â  Object aRangesObj = xDocProp.getPropertyValue("DatabaseRanges");</p>
     <p class="Code">Â  Â  com.sun.star.container.XNameAccess xRanges = (com.sun.star.container.XNameAccess)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNameAccess.class, aRangesObj);</p>
     <p class="Code">Â  Â  String[] aNames = xRanges.getElementNames();</p>
     <p class="Code">Â  Â  for (int i=0; i&lt;aNames.length; i++) {</p>
     <p class="Code">Â  Â  Â  Â  Object aRangeObj = xRanges.getByName(aNames[i] );</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.beans.XPropertySet xRangeProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aRangeObj);</p>
     <p class="Code">Â  Â  Â  Â  boolean bUser = ((Boolean) xRangeProp.getPropertyValue("IsUserDefined")).booleanValue();</p>
     <p class="Code">Â  Â  Â  Â  if (!bUser) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  // this is the temporary database range - get the cell range and format it</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.sheet.XCellRangeReferrer xRef = (com.sun.star.sheet.XCellRangeReferrer)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeReferrer.class, aRangeObj);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.table.XCellRange xResultRange = xRef.getReferredCells();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.beans.XPropertySet xResultProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xResultRange);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  xResultProp.setPropertyValue("IsCellBackgroundTransparent", new Boolean(false));</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  xResultProp.setPropertyValue("CellBackColor", new Integer(0xFFFFCC));</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_6_Linking_External_Data" />9.3.6Â Â Linking External Data</h3>
  <p class="Paragraph">This section explains different ways to link data from external sources into a spreadsheet document. Refer to the <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_3_5_3_Database_Import" title="see chapter 9.3.5 Spreadsheet Documents - Working with Spreadsheets - Database Operations - Database Import">9.3.5 Spreadsheet Documents - Working with Spreadsheets - Database Operations - Database Import</a></span> chapter for linking data from a database.</p>
  <h4 class="Head4"><a name="1_3_6_1_Sheet_Links" />Sheet Links</h4>
  <p class="Paragraph">Each sheet in a spreadsheet document can be linked to a sheet from a different document. The spreadsheet document has a collection of all the sheet links to different source documents.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table48"><colgroup><col width="820" /></colgroup><tr><td style="text-align:left;width:17.96cm; " class="Table48A1">
      <div class="Paragraph"><div style="width: 11.134cm; " id="Frame36" class="fr25">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/ExternalLinksUML1.png" title="link to the full-sized graphic &quot;./ExternalLinksUML1.png&quot;"><img border="0" width="505" height="615" alt="UML diagram showing the com.sun.star.sheet.SheetLink service" src="./9 Spreadsheet Documents_files/ExternalLinksUML1.png" class="fr8" /></a>Illustration <a name="refIllustration32">9.33</a>: SheetLinks</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetLinkable.html" title="see type com.sun.star.sheet.XSheetLinkable">com.sun.star.sheet.XSheetLinkable</a></span> is relevant if the current sheet is used as buffer for an external sheet link. The interfaces provides access to the data of the link. A link is established using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetLinkable.html" title="see type com.sun.star.sheet.XSheetLinkable">com.sun.star.sheet.XSheetLinkable</a></span> interface's <span class="Codeintext">link()</span> method. The method's parameters are:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">The source document's URL. When a sheet link is inserted or updated, the source document is loaded from its URL. Unsaved changes in a source document that is open in memory are not included. All URL types that can be used to load files can also be used in links, including HTTP to link to data from a web server.Â </p></li>
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">The name of the sheet in the source document from the contents are copied from. If this string is empty, the source document's first sheet is used, regardless of its name.Â </p></li>
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">The filter name and options that are used to load the source document. Refer to the <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_1_5_Handling_Documents" title="see chapter 7.1.5 Office Development - OpenOffice.org Application Environment - Handling Documents">7.1.5 Office Development - OpenOffice.org Application Environment - Handling Documents</a></span> chapter. All spreadsheet file filters can be used, so it is possible, for Â example, to link to a CSV text file.</p></li>
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetLinkMode.html" title="see type com.sun.star.sheet.SheetLinkMode">com.sun.star.sheet.SheetLinkMode</a></span> enum value that controls how the contents are copied:</p><ul style="margin-left:-2cm;">
     <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">If the mode is <span class="Codeintext">NORMAL</span>, all cells from the source sheet are copied, including formulas.</p></li>
     <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">If the mode is <span class="Codeintext">VALUE</span>, formulas are replaced by their results in the copy.</p></li>
    </ul></li>
  </ul>
  <p class="Paragraph">The link mode, source URL and source sheet name can also be queried and changed using the <span class="Codeintext">getLinkMode()</span>, <span class="Codeintext">setLinkMode()</span>, <span class="Codeintext">getLinkUrl()</span>, <span class="Codeintext">setLinkUrl()</span>, <span class="Codeintext">getLinkSheetName()</span> and <span class="Codeintext">setLinkSheetName()</span> methods. Setting the mode to <span class="Codeintext">NONE</span> removes the link.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetLinks.html" title="see type com.sun.star.sheet.SheetLinks">com.sun.star.sheet.SheetLinks</a></span> collection contains an entry for every source document that is used in sheet links. If several sheets are linked to different sheets from the same source document, there is only one entry for them. The name that is used for the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> interface is the source document's URL.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetLink.html" title="see type com.sun.star.sheet.SheetLink">com.sun.star.sheet.SheetLink</a></span> service changes a link's source URL, filter or filter options through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XRefreshable.html" title="see type com.sun.star.util.XRefreshable">com.sun.star.util.XRefreshable</a></span> interface is used to update the link. This affects all sheets that are linked to any sheet from the link's source document.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table130"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table130A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table130B1">
      <p class="TipInTable">External references in cell formulas are implemented using hidden linked sheets that show as sheet link objects.Â </p>
     </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_6_2_Cell_Area_Links" />Cell Area Links</h4>
  <p class="Paragraph">A cell area link is a cell area (range) in a spreadsheet that is linked to a cell area from a different document.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table56"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table56A1">
     <div class="Paragraph"><div style="width: 11.077cm; " id="Frame37" class="fr19">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/ExternalLinksUML2.png" title="link to the full-sized graphic &quot;./ExternalLinksUML2.png&quot;"><img border="0" width="503" height="480" alt="UML diagram showing the com.sun.star.sheet.CellAreaLink service" src="./9 Spreadsheet Documents_files/ExternalLinksUML2.png" class="fr26" /></a>Illustration <a name="refIllustration33">9.34</a>: CellAreaLinks</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">To insert an area link, the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XAreaLinks.html" title="see type com.sun.star.sheet.XAreaLinks">com.sun.star.sheet.XAreaLinks</a></span> interface's <span class="Codeintext">insertAtPosition()</span> method is used with the following parameters:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P66" style="margin-left:2.5cm;"><p class="P66" style="margin-left:0cm;">The position where the link is placed in the document as a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellAddress.html" title="see type com.sun.star.table.CellAddress">com.sun.star.table.CellAddress</a></span> struct.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">The source document's URL is used in the same manner as sheet links.Â </p></li>
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">A string describing the source range in the source document. This can be the name of a named range or database range, or a direct cell reference, such as âsheet1.a1:c5â. Note that the WebQuery import filter creates a named range for each HTML table. These names can be used also.Â </p></li>
   <li class="P65" style="margin-left:2.5cm;"><p class="P65" style="margin-left:0cm;">The filter name and filter options are used in the same manner as sheet links.Â </p></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext">removeByIndex()</span> method is used to remove a link.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/CellAreaLink.html" title="see type com.sun.star.sheet.CellAreaLink">com.sun.star.sheet.CellAreaLink</a></span> service is used to modify or refresh an area link. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XAreaLink.html" title="see type com.sun.star.sheet.XAreaLink">com.sun.star.sheet.XAreaLink</a></span> interface queries and modifies the link's source range and its output range in the document. Note that the output range changes in size after updating if the size of the source range changes.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface changes the link's source URL, filter name and filter options. Unlike sheet links, these changes affect only one linked area. Additionally, the <span class="Codeintext">RefreshDelay</span> property is used to set an interval in seconds to periodically update the link. If the value is 0, no automatic updates occur.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XRefreshable.html" title="see type com.sun.star.util.XRefreshable">com.sun.star.util.XRefreshable</a></span> interface is used to update the link.</p>
  <h4 class="Head4"><a name="1_3_6_3_DDE_Links" />DDE Links</h4>
  <p class="Paragraph">A DDE link is created whenever the DDE spreadsheet function is used in a cell formula.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table61"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table61A1">
     <div class="Paragraph"><div style="width: 10.299cm; " id="Frame38" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/ExternalLinksUML3.png" title="link to the full-sized graphic &quot;./ExternalLinksUML3.png&quot;"><img border="0" width="505" height="448" alt="UML diagram showing the com.sun.star.sheet.DDELink service" src="./9 Spreadsheet Documents_files/ExternalLinksUML3.png" class="fr8" /></a>Illustration <a name="refIllustration34">9.35</a>: DDELink</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DDELink.html" title="see type com.sun.star.sheet.DDELink">com.sun.star.sheet.DDELink</a></span> service is only used to query the link's parameters using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDDELink.html" title="see type com.sun.star.sheet.XDDELink">com.sun.star.sheet.XDDELink</a></span> interface, and refresh it using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XRefreshable.html" title="see type com.sun.star.util.XRefreshable">com.sun.star.util.XRefreshable</a></span> interface. The DDE link's parameters, <span class="Emphasis">Application</span>, <span class="Emphasis">Topic</span> and <span class="Emphasis">Item</span> are determined by the formula that contains the DDE function, therefore it is not possible to change these parameters in the link object.</p>
  <p class="Paragraph">The link's name used for the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> interface consists of the three parameter strings concatenated.</p>
  <h3 class="Head3"><a name="1_3_7_DataPilot" />9.3.7Â Â DataPilot</h3>
  <h4 class="Head4"><a name="1_3_7_1_DataPilot_Tables" />DataPilot Tables</h4>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotTables.html" title="see type com.sun.star.sheet.DataPilotTables">com.sun.star.sheet.DataPilotTables</a></span> and related services create and modify DataPilot tables in a spreadsheet.</p>
  <p class="Paragraph">The method <span class="Codeintext">getDataPilotTables()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTablesSupplier.html" title="see type com.sun.star.sheet.XDataPilotTablesSupplier">com.sun.star.sheet.XDataPilotTablesSupplier</a></span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTables.html" title="see type com.sun.star.sheet.XDataPilotTables">com.sun.star.sheet.XDataPilotTables</a></span> of the collection of all data pilot tables contained in the spreadsheet. </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table101"><colgroup><col width="821" /></colgroup><tr class="Table1011"><td style="text-align:left;width:17.979cm; " class="Table101A1">
     <div class="Paragraph"><div style="width: 15.083cm; " id="Frame7" class="fr15">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DataPilotUML.png" title="link to the full-sized graphic &quot;./DataPilotUML.png&quot;"><img border="0" width="684" height="809" alt="UML diagram showing the com.sun.star.sheet.DataPilotTables service" src="./9 Spreadsheet Documents_files/DataPilotUML.png" class="fr8" /></a>Illustration <a name="refIllustration35">9.36</a>: DataPilotTables</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotTables.html" title="see type com.sun.star.sheet.DataPilotTables">com.sun.star.sheet.DataPilotTables</a></span> service is accessed by getting the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTablesSupplier.html" title="see type com.sun.star.sheet.XDataPilotTablesSupplier">com.sun.star.sheet.XDataPilotTablesSupplier</a></span> interface from a spreadsheet object and calling the <span class="Codeintext">getDataPilotTables()</span> method.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table102"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table102A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table102B1">
      <p class="TipInTable">Only DataPilot tables that are based on cell data are supported by these services. DataPilot tables created directly from external data sources or using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSource.html" title="see type com.sun.star.sheet.DataPilotSource">com.sun.star.sheet.DataPilotSource</a></span> service cannot be created or modified this way.</p>
     </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_7_1_1_Creating_a_New_DataPilot_Table" />Creating a New DataPilot Table</h5>
  <p class="Paragraph">The first step to creating a new DataPilot table is to create a new <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotDescriptor.html" title="see type com.sun.star.sheet.DataPilotDescriptor">com.sun.star.sheet.DataPilotDescriptor</a></span> object by calling the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTables.html" title="see type com.sun.star.sheet.XDataPilotTables">com.sun.star.sheet.XDataPilotTables</a></span> interface's <span class="Codeintext">createDataPilotDescriptor()</span> method. The descriptor is then used to describe the DataPilot table's layout and options, and passed to the <span class="Codeintext">insertNewByName()</span> method of <span class="Codeintext">XDataPilotTables</span>. The other parameters for <span class="Codeintext">insertNewByName()</span> are the name for the new table, and the position where the table is to be placed on the spreadsheet.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotDescriptor.html" title="see type com.sun.star.sheet.XDataPilotDescriptor">com.sun.star.sheet.XDataPilotDescriptor</a></span> interface offers methods to change the DataPilot table settings:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P67" style="margin-left:2.5cm;"><p class="P67" style="margin-left:0cm;">The cell range that contains the source data is set with the <span class="Codeintext">setSourceRange()</span> method. It is a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> struct.</p></li>
   <li class="P67" style="margin-left:2.5cm;"><p class="P67" style="margin-left:0cm;">The individual fields are handled using the <span class="Codeintext">getDataPilotFields()</span>, <span class="Codeintext">getColumnFields()</span>, <span class="Codeintext">getRowFields()</span>, <span class="Codeintext">getPageFields()</span>, <span class="Codeintext">getDataFields()</span> and <span class="Codeintext">getHiddenFields()</span> methods. The details are discussed below.</p></li>
   <li class="P67" style="margin-left:2.5cm;"><p class="P67" style="margin-left:0cm;">The <span class="Codeintext">setTag()</span> method sets an additional string that is stored with the DataPilot table, but does not influence its results.</p></li>
   <li class="P67" style="margin-left:2.5cm;"><p class="P67" style="margin-left:0cm;">The <span class="Codeintext">getFilterDescriptor()</span> method returns a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetFilterDescriptor.html" title="see type com.sun.star.sheet.SheetFilterDescriptor">com.sun.star.sheet.SheetFilterDescriptor</a></span> object that can be used to apply filter criteria to the source data. Refer to the section on data operations for details on how to use a filter descriptor.</p></li>
  </ul>
  <p class="Paragraph">The layout of the DataPilot table is controlled using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotFields.html" title="see type com.sun.star.sheet.DataPilotFields">com.sun.star.sheet.DataPilotFields</a></span> service. Each <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotField.html" title="see type com.sun.star.sheet.DataPilotField">com.sun.star.sheet.DataPilotField</a></span> object has a property <span class="Codeintext">Orientation</span> that controls where in the DataPilot table the field is used. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotFieldOrientation.html" title="see type com.sun.star.sheet.DataPilotFieldOrientation">com.sun.star.sheet.DataPilotFieldOrientation</a></span> enum contains the possible orientations:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P68" style="margin-left:2.5cm;"><p class="P68" style="margin-left:0cm;"><span class="Codeintext">HIDDEN</span>: The field is not used in the table.</p></li>
   <li class="P68" style="margin-left:2.5cm;"><p class="P68" style="margin-left:0cm;"><span class="Codeintext">COLUMN</span>: Values from this field are used to determine the columns of the table.</p></li>
   <li class="P68" style="margin-left:2.5cm;"><p class="P68" style="margin-left:0cm;"><span class="Codeintext">ROW</span>: Values from this field are used to determine the rows of the table.</p></li>
   <li class="P68" style="margin-left:2.5cm;"><p class="P68" style="margin-left:0cm;"><span class="Codeintext">PAGE</span>: The field is used in the table's âpageâ area, where single values from the field can be selected.</p></li>
   <li class="P68" style="margin-left:2.5cm;"><p class="P68" style="margin-left:0cm;"><span class="Codeintext">DATA</span>: The values from this field are used to calculate the table's data area.</p></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext">Function</span> property is used to assign a function to the field. For instance, if the field has a <span class="Codeintext">DATA</span> orientation, this is the function that is used for calculation of the results. If the field has <span class="Codeintext">COLUMN</span> or <span class="Codeintext">ROW</span> orientation, it is the function that is used to calculate subtotals for the values from this field.</p>
  <p class="Paragraph">The <span class="Codeintext">getDataPilotFields()</span> method returns a collection containing one <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotField.html" title="see type com.sun.star.sheet.DataPilotField">com.sun.star.sheet.DataPilotField</a></span> entry for each column of source data, and one additional entry for the âDataâ column that becomes visible when two or more fields get the <span class="Codeintext">DATA</span> orientation. Each source column appears only once, even if it is used with several orientations or functions.</p>
  <p class="Paragraph">The <span class="Codeintext">getColumnFields()</span>, <span class="Codeintext">getRowFields()</span>, <span class="Codeintext">getPageFields()</span> and <span class="Codeintext">getDataFields()</span> methods each return a collection of the fields with the respective orientation. In the case of <span class="Codeintext">getDataFields()</span>, a single source column can appear several times if it is used with different functions. The <span class="Codeintext">getHiddenFields()</span> method returns a collection of those fields from the <span class="Codeintext">getDataPilotFields()</span> collection that are not in any of the other collections.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table103"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table103A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table103B1">
      <p class="TipInTable">Note: Page fields and the <span class="Codeintext">PAGE</span> orientation are not supported by the current implementation. Setting a field's orientation to <span class="Codeintext">PAGE</span> has the same effect as using <span class="Codeintext">HIDDEN.</span> The <span class="Codeintext">getPageFields()</span> method always returns an empty collection.</p>
     </td></tr></table></div>
  <p class="Paragraph">The exact effect of changing a field orientation depends on which field collection the field object was taken from. If the object is from the <span class="Codeintext">getDataPilotFields()</span> collection, the field is added to the collection that corresponds to the new <span class="Codeintext">Orientation</span> value. If the object is from any of the other collections, the field is removed from the old orientation and added to the new orientation.</p>
  <p class="Paragraph">The following example creates a simple DataPilot table with one column, row and data field. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table104"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Create a new DataPilot table ---</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XDataPilotTablesSupplier xDPSupp = (com.sun.star.sheet.XDataPilotTablesSupplier)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XDataPilotTablesSupplier.class, xSheet);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XDataPilotTables xDPTables = xDPSupp.getDataPilotTables();</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XDataPilotDescriptor xDPDesc = xDPTables.createDataPilotDescriptor();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // set source range (use data range from CellRange test)</p>
     <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress aSourceAddress = createCellRangeAddress(xSheet, "A10:C30");</p>
     <p class="Code">Â  Â  xDPDesc.setSourceRange(aSourceAddress);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // settings for fields</p>
     <p class="Code">Â  Â  com.sun.star.container.XIndexAccess xFields = xDPDesc.getDataPilotFields();</p>
     <p class="Code">Â  Â  Object aFieldObj;</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xFieldProp;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // use first column as column field</p>
     <p class="Code">Â  Â  aFieldObj = xFields.getByIndex(0);</p>
     <p class="Code">Â  Â  xFieldProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aFieldObj);</p>
     <p class="Code">Â  Â  xFieldProp.setPropertyValue("Orientation", com.sun.star.sheet.DataPilotFieldOrientation.COLUMN);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // use second column as row field</p>
     <p class="Code">Â  Â  aFieldObj = xFields.getByIndex(1);</p>
     <p class="Code">Â  Â  xFieldProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aFieldObj);</p>
     <p class="Code">Â  Â  xFieldProp.setPropertyValue("Orientation", com.sun.star.sheet.DataPilotFieldOrientation.ROW);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // use third column as data field, calculating the sum</p>
     <p class="Code">Â  Â  aFieldObj = xFields.getByIndex(2);</p>
     <p class="Code">Â  Â  xFieldProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aFieldObj);</p>
     <p class="Code">Â  Â  xFieldProp.setPropertyValue("Orientation", com.sun.star.sheet.DataPilotFieldOrientation.DATA);</p>
     <p class="Code">Â  Â  xFieldProp.setPropertyValue("Function", com.sun.star.sheet.GeneralFunction.SUM);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // select output position</p>
     <p class="Code">Â  Â  com.sun.star.table.CellAddress aDestAddress = createCellAddress(xSheet, "A40");</p>
     <p class="Code">Â  Â  xDPTables.insertNewByName("DataPilotExample", aDestAddress, xDPDesc);</p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_7_1_2_Modifying_a_DataPilot_Table" />Modifying a DataPilot Table</h5>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotTable.html" title="see type com.sun.star.sheet.DataPilotTable">com.sun.star.sheet.DataPilotTable</a></span> service is used to modify an existing DataPilot table. The object for an existing table is available through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> interface of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotTables.html" title="see type com.sun.star.sheet.DataPilotTables">com.sun.star.sheet.DataPilotTables</a></span> service. It implements the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotDescriptor.html" title="see type com.sun.star.sheet.XDataPilotDescriptor">com.sun.star.sheet.XDataPilotDescriptor</a></span> interface, so that the DataPilot table can be modified in the same manner as the descriptor for a new table in the preceding section. After any change to a DataPilot table's settings, the table is automatically recalculated.</p>
  <p class="Paragraph">Additionally, the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTable.html" title="see type com.sun.star.sheet.XDataPilotTable">com.sun.star.sheet.XDataPilotTable</a></span> interface offers a <span class="Codeintext">getOutputRange()</span> method that is used to find which range on the spreadsheet the table occupies, and a <span class="Codeintext">refresh()</span> method that recalculates the table without changing any settings.</p>
  <p class="Paragraph">The following example modifies the table from the previous example to contain a second data field using the same source column as the existing data field, but using the âaverageâ function instead. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table105"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Modify the DataPilot table ---</p>
     <p class="Code">Â  Â  Object aDPTableObj = xDPTables.getByName("DataPilotExample");</p>
     <p class="Code">Â  Â  xDPDesc = (com.sun.star.sheet.XDataPilotDescriptor)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XDataPilotDescriptor.class, aDPTableObj);</p>
     <p class="Code">Â  Â  xFields = xDPDesc.getDataPilotFields();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // add a second data field from the third column, calculating the average</p>
     <p class="Code">Â  Â  aFieldObj = xFields.getByIndex(2);</p>
     <p class="Code">Â  Â  xFieldProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aFieldObj);</p>
     <p class="Code">Â  Â  xFieldProp.setPropertyValue("Orientation", com.sun.star.sheet.DataPilotFieldOrientation.DATA);</p>
     <p class="Code">Â  Â  xFieldProp.setPropertyValue("Function", com.sun.star.sheet.GeneralFunction.AVERAGE);</p>
    </td></tr></table></div>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table121"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table121A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table121B1">
      <p class="TipInTable">Note how the field object for the third column is taken from the collection returned by <span class="Codeintext">getDataPilotFields()</span> to create a second data field. If the field object was taken from the collection returned by <span class="Codeintext">getDataFields()</span>, only the existing data field's function would be changed by the <span class="Codeintext">setPropertyValue()</span> calls to that object.</p>
     </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_7_1_3_Removing_a_DataPilot_Table" />Removing a DataPilot Table</h5>
  <p class="Paragraph">To remove a DataPilot table from a spreadsheet, call the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotTables.html" title="see type com.sun.star.sheet.XDataPilotTables">com.sun.star.sheet.XDataPilotTables</a></span> interface's <span class="Codeintext">removeByName()</span> method, passing the DataPilot table's name.</p>
  <h4 class="Head4"><a name="1_3_7_2_DataPilot_Sources" />DataPilot Sources</h4>
  <p class="Paragraph">The DataPilot feature in <span class="T2">OpenOffice.org</span> API Calc makes use of an external component that provides the tabular results in the DataPilot table using the field orientations and other settings that are made in the DataPilot dialog or interactively by dragging the fields in the spreadsheet.</p>
  <p class="Paragraph">Such a component might, for example, connect to an OLAP server, allowing the use of a DataPilot table to interactively display results from that server.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table106"><colgroup><col width="821" /></colgroup><tr class="Table1061"><td style="text-align:left;">
     <div class="Paragraph"><div style="height: 21.033cm; width: 13.077cm; " id="Frame39" class="fr2">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/DataPilotSourceUML.png" title="link to the full-sized graphic &quot;./DataPilotSourceUML.png&quot;"><img border="0" width="594" height="938" alt="UML diagram showing the com.sun.star.sheet.DataPilotSource service" src="./9 Spreadsheet Documents_files/DataPilotSourceUML.png" class="fr8" /></a>Illustration <a name="refIllustration36">9.37</a>: DataPilotSource</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The example that is used here provides four dimensions with the same number of members each, and one data dimension that uses these members as digits to form integer numbers. A resulting DataPilot table look similar to the following:Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table107"><colgroup><col width="142" /><col width="140" /><col width="140" /><col width="140" /><col width="142" /></colgroup><tr class="Table1071"><td style="text-align:left;width:3.106cm; " class="Table107A1">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:left;width:3.073cm; " class="Table107B1">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:left;width:3.073cm; " class="Table107C1">
     <p class="TextInTable">hundredsÂ </p>
    </td><td style="text-align:left;width:3.073cm; " class="Table107B1">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:left;width:3.113cm; " class="Table107E1">
     <p class="TextInTable">Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:left;width:3.106cm; " class="Table107A2">
     <p class="TextInTable">onesÂ </p>
    </td><td style="text-align:left;width:3.073cm; " class="Table107B2">
     <p class="TextInTable">tensÂ </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107C2">
     <p class="TextInTable">0Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="TextInTable">1Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E2">
     <p class="TextInTable">2Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107A3">
     <p class="TextInTable">0Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="TextInTable">0Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107A3">
     <p class="P69">0Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="P69">100Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E3">
     <p class="P69">200Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107A3">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="TextInTable">1Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107A3">
     <p class="P69">10Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="P69">110Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E3">
     <p class="P69">210Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107C2">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="TextInTable">2Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107C2">
     <p class="P69">20Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="P69">120Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E2">
     <p class="P69">220Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107A3">
     <p class="TextInTable">1Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="TextInTable">0Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107A3">
     <p class="P69">1Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="P69">101Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E3">
     <p class="P69">201Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107A3">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="TextInTable">1Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107A3">
     <p class="P69">11Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="P69">111Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E3">
     <p class="P69">211Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107C2">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="TextInTable">2Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107C2">
     <p class="P69">21Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="P69">121Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E2">
     <p class="P69">221Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107A3">
     <p class="TextInTable">2Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="TextInTable">0Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107A3">
     <p class="P69">2Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="P69">102Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E3">
     <p class="P69">202Â </p>
    </td></tr><tr class="Table1072"><td style="text-align:right; width:3.106cm; " class="Table107A3">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="TextInTable">1Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107A3">
     <p class="P69">12Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107B3">
     <p class="P69">112Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E3">
     <p class="P69">212Â </p>
    </td></tr><tr class="Table1071"><td style="text-align:right; width:3.106cm; " class="Table107C2">
     <p class="TextInTable">Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="TextInTable">2Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107C2">
     <p class="P69">22Â </p>
    </td><td style="text-align:right; width:3.073cm; " class="Table107D2">
     <p class="P69">122Â </p>
    </td><td style="text-align:right; width:3.113cm; " class="Table107E2">
     <p class="P69">222Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The example uses the following class to hold the settings that are applied to the DataPilot source: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table108"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">class ExampleSettingsÂ </p>
     <p class="Code">{Â </p>
     <p class="Code">Â  Â  static public final int nDimensionCount = 6;</p>
     <p class="Code">Â  Â  static public final int nValueDimension = 4;</p>
     <p class="Code">Â  Â  static public final int nDataDimension = 5;</p>
     <p class="Code">Â  Â  static public final String [] aDimensionNames = {</p>
     <p class="Code">Â  Â  Â  Â  "ones", "tens", "hundreds", "thousands", "value", "" };</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  static public final String getMemberName(int nMember) {</p>
     <p class="Code">Â  Â  Â  Â  return String.valueOf(nMember);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public int nMemberCount = 3;</p>
     <p class="Code">Â  Â  public java.util.List aColDimensions = new java.util.ArrayList();</p>
     <p class="Code">Â  Â  public java.util.List aRowDimensions = new java.util.ArrayList();</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">To create a DataPilot table using a DataPilot source component, three steps are carried out:Â </p>
  <ol style="margin-left:0.5cm;list-style-type:decimal; ">
   <li class="P70" style="margin-left:2.5cm;"><p class="P70" style="margin-left:0cm;">The application gets the list of available dimensions (fields) from the component.Â </p></li>
   <li class="P70" style="margin-left:2.5cm;"><p class="P70" style="margin-left:0cm;">The application applies the user-specified settings to the component.Â </p></li>
   <li class="P70" style="margin-left:2.5cm;"><p class="P70" style="margin-left:0cm;">The application gets the results from the component.Â </p></li>
  </ol>
  <p class="Paragraph">The same set of objects are used for all three steps. The root object from which the other objects are accessed is the implementation of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSource.html" title="see type com.sun.star.sheet.DataPilotSource">com.sun.star.sheet.DataPilotSource</a></span> service.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceDimensions.html" title="see type com.sun.star.sheet.DataPilotSourceDimensions">com.sun.star.sheet.DataPilotSourceDimensions</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceHierarchies.html" title="see type com.sun.star.sheet.DataPilotSourceHierarchies">com.sun.star.sheet.DataPilotSourceHierarchies</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceLevels.html" title="see type com.sun.star.sheet.DataPilotSourceLevels">com.sun.star.sheet.DataPilotSourceLevels</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceMembers.html" title="see type com.sun.star.sheet.DataPilotSourceMembers">com.sun.star.sheet.DataPilotSourceMembers</a></span> services are accessed using their parent object interfaces. That is: </p>
  <ul style="margin-left:0.5cm;">
   <li class="P71" style="margin-left:2.5cm;"><p class="P71" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceDimensions.html" title="see type com.sun.star.sheet.DataPilotSourceDimensions">com.sun.star.sheet.DataPilotSourceDimensions</a></span> is the parent object of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDimensionsSupplier.html" title="see type com.sun.star.sheet.XDimensionsSupplier">com.sun.star.sheet.XDimensionsSupplier</a></span> </p></li>
   <li class="P71" style="margin-left:2.5cm;"><p class="P71" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceHierarchies.html" title="see type com.sun.star.sheet.DataPilotSourceHierarchies">com.sun.star.sheet.DataPilotSourceHierarchies</a></span> is the parent object of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XHierarchiesSupplier.html" title="see type com.sun.star.sheet.XHierarchiesSupplier">com.sun.star.sheet.XHierarchiesSupplier</a></span> </p></li>
   <li class="P71" style="margin-left:2.5cm;"><p class="P71" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceLevels.html" title="see type com.sun.star.sheet.DataPilotSourceLevels">com.sun.star.sheet.DataPilotSourceLevels</a></span> is the parent object of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XLevelsSupplier.html" title="see type com.sun.star.sheet.XLevelsSupplier">com.sun.star.sheet.XLevelsSupplier</a></span> </p></li>
   <li class="P71" style="margin-left:2.5cm;"><p class="P71" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceMembers.html" title="see type com.sun.star.sheet.DataPilotSourceMembers">com.sun.star.sheet.DataPilotSourceMembers</a></span> is the parent object of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XMembersSupplier.html" title="see type com.sun.star.sheet.XMembersSupplier">com.sun.star.sheet.XMembersSupplier</a></span> </p></li>
  </ul>
  <p class="Paragraph">All contain the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> interface to access their children.</p>
  <h5 class="Head5"><a name="1_3_7_2_1_Source_Object" />Source Object</h5>
  <p class="Paragraph">An implementation of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSource.html" title="see type com.sun.star.sheet.DataPilotSource">com.sun.star.sheet.DataPilotSource</a></span> service must be registered, so that a component can be used as a DataPilot source. If any implementations for the service are present, the <span class="ButtonsMenus">External source/interface</span> option in the DataPilot <span class="ButtonsMenus">Select Source</span> dialog is enabled. Any of the implementations can then be selected by its implementation name in the <span class="ButtonsMenus">External Source </span>dialog, along with four option strings labeled âSourceâ, âNameâ, âUserâ and âPasswordâ. The four options are passed to the component unchanged.</p>
  <p class="Paragraph">The option strings are passed to the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/lang/XInitialization.html" title="see type com.sun.star.lang.XInitialization">com.sun.star.lang.XInitialization</a></span> interface's <span class="Codeintext">initialize()</span> method if that interface is present. The sequence that is passed to the call contains four strings with the values from the dialog. Note that the âPasswordâ string is only saved in <span class="T2">OpenOffice.org</span> API's old binary file format, but not in the XML-based format. If the component needs a password, for example, to connect to a database, it must be able to prompt for that password.</p>
  <p class="Paragraph">The example below uses the first of the strings to determine how many members each dimension should have: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table109"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">private ExampleSettings aSettings = new ExampleSettings();Â </p>
     <p class="Code">Â </p>
     <p class="Code">public void initialize(Object[] aArguments) {Â </p>
     <p class="Code">Â  Â  // Â If the first argument (Source) is a number between 2 and 10,</p>
     <p class="Code">Â  Â  // Â use it as member count, otherwise keep the default value.</p>
     <p class="Code">Â  Â  if (aArguments.length &gt;= 1) {</p>
     <p class="Code">Â  Â  Â  Â  String aSource = (String) aArguments[0];</p>
     <p class="Code">Â  Â  Â  Â  if (aSource != null) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  try {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  int nValue = Integer.parseInt(aSource);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  if (nValue &gt;= 2 &amp;&amp; nValue &lt;= 10)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aSettings.nMemberCount = nValue;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  } catch (NumberFormatException e) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The source object's <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface is used to apply two settings: The <span class="Codeintext">ColumnGrand</span> and <span class="Codeintext">RowGrand</span> properties control if grand totals for columns or rows should be added. The settings are taken from the <span class="ButtonsMenus">DataPilot</span> dialog. The example does not use them.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotResults.html" title="see type com.sun.star.sheet.XDataPilotResults">com.sun.star.sheet.XDataPilotResults</a></span> interface is used to query the results from the component. This includes only the numeric âdataâ part of the table. In the example table above, it would be the 9x3 area of cells that are right-aligned. The <span class="Codeintext">getResults()</span> call returns a sequence of rows, where each row is a sequence of the results for that row. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataResult.html" title="see type com.sun.star.sheet.DataResult">com.sun.star.sheet.DataResult</a></span> struct contains the numeric value in the <span class="Codeintext">Value</span> member, and a <span class="Codeintext">Flags</span> member contains a combination of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataResultFlags.html" title="see type com.sun.star.sheet.DataResultFlags">com.sun.star.sheet.DataResultFlags</a></span> constants:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P72" style="margin-left:2.5cm;"><p class="P72" style="margin-left:0cm;"><span class="Codeintext">HASDATA</span> is set if there is a valid result at the entry's position. A result value of zero is different from no result, so this must be set only if the result is not empty.</p></li>
   <li class="P72" style="margin-left:2.5cm;"><p class="P72" style="margin-left:0cm;"><span class="Codeintext">SUBTOTAL</span> marks a subtotal value that is formatted differently in the DataPilot table output.</p></li>
   <li class="P72" style="margin-left:2.5cm;"><p class="P72" style="margin-left:0cm;"><span class="Codeintext">ERROR</span> is set if the result at the entry's position is an error.</p></li>
  </ul>
  <p class="Paragraph">In the example table above, all entries have different <span class="Codeintext">Value</span> numbers, and a <span class="Codeintext">Flags</span> value of <span class="Codeintext">HASDATA</span>. The implementation for the example looks like this: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table110"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public com.sun.star.sheet.DataResult[][] getResults() {Â </p>
     <p class="Code">Â  Â  int[] nDigits = new int[ExampleSettings.nDimensionCount];</p>
     <p class="Code">Â  Â  int nValue = 1;</p>
     <p class="Code">Â  Â  for (int i=0; i&lt;ExampleSettings.nDimensionCount; i++) {</p>
     <p class="Code">Â  Â  Â  Â  nDigits[i] = nValue;</p>
     <p class="Code">Â  Â  Â  Â  nValue *= 10;</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  int nMemberCount = aSettings.nMemberCount;</p>
     <p class="Code">Â  Â  int nRowDimCount = aSettings.aRowDimensions.size();</p>
     <p class="Code">Â  Â  int nColDimCount = aSettings.aColDimensions.size();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  int nRows = 1;</p>
     <p class="Code">Â  Â  for (int i=0; i&lt;nRowDimCount; i++)</p>
     <p class="Code">Â  Â  Â  Â  nRows *= nMemberCount;</p>
     <p class="Code">Â  Â  int nColumns = 1;</p>
     <p class="Code">Â  Â  for (int i=0; i&lt;nColDimCount; i++)</p>
     <p class="Code">Â  Â  Â  Â  nColumns *= nMemberCount;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.sheet.DataResult[][] aResults = new com.sun.star.sheet.DataResult[nRows][];</p>
     <p class="Code">Â  Â  for (int nRow=0; nRow&lt;nRows; nRow++) {</p>
     <p class="Code">Â  Â  Â  Â  int nRowVal = nRow;</p>
     <p class="Code">Â  Â  Â  Â  int nRowResult = 0;</p>
     <p class="Code">Â  Â  Â  Â  for (int nRowDim=0; nRowDim&lt;nRowDimCount; nRowDim++) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  int nDim = ((Integer)aSettings.aRowDimensions.get(nRowDimCount-nRowDim-1)).intValue();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nRowResult += ( nRowVal % nMemberCount ) * nDigits[nDim];</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nRowVal /= nMemberCount;</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  aResults[nRow] = new com.sun.star.sheet.DataResult[nColumns];</p>
     <p class="Code">Â  Â  Â  Â  for (int nCol=0; nCol&lt;nColumns; nCol++) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  int nColVal = nCol;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  int nResult = nRowResult;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  for (int nColDim=0; nColDim&lt;nColDimCount; nColDim++) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  int nDim = ((Integer)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  aSettings.aColDimensions.get(nColDimCount-nColDim-1)).intValue();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  nResult += (nColVal % nMemberCount) * nDigits[nDim];</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  nColVal /= nMemberCount;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nRow][nCol] = new com.sun.star.sheet.DataResult();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nRow][nCol].Flags = com.sun.star.sheet.DataResultFlags.HASDATA;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nRow][nCol].Value = nResult;</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  return aResults;</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XRefreshable.html" title="see type com.sun.star.util.XRefreshable">com.sun.star.util.XRefreshable</a></span> interface contains a <span class="Codeintext">refresh()</span> method that tells the component to discard cached results and recalculate the results the next time they are needed. The <span class="Codeintext">addRefreshListener()</span> and <span class="Codeintext">removeRefreshListener()</span> methods are not used by <span class="T2">OpenOffice.org</span> API Calc. The <span class="Codeintext">refresh()</span> implementation in the example is empty, because the results are always calculated dynamically.</p>
  <h5 class="Head5"><a name="1_3_7_2_2_Dimensions" />Dimensions</h5>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceDimensions.html" title="see type com.sun.star.sheet.DataPilotSourceDimensions">com.sun.star.sheet.DataPilotSourceDimensions</a></span> service contains an entry for each dimension that can be used as column, row or page dimension, for each possible data (measure) dimension, and one for the âdata layoutâ dimension that contains the names of the data dimensions.</p>
  <p class="Paragraph">The example below initializes a dimension's orientation as DATA for the data dimension, and is otherwise HIDDEN. Thus, when the user creates a new DataPilot table using the example component, the data dimension is already present in the âDataâ area of the DataPilot dialog. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table111"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">private ExampleSettings aSettings;Â </p>
     <p class="Code">private int nDimension;Â </p>
     <p class="Code">private com.sun.star.sheet.DataPilotFieldOrientation eOrientation;Â </p>
     <p class="Code">Â </p>
     <p class="Code">public ExampleDimension(ExampleSettings aSet, int nDim) {Â </p>
     <p class="Code">Â  Â  aSettings = aSet;</p>
     <p class="Code">Â  Â  nDimension = nDim;</p>
     <p class="Code">Â  Â  eOrientation = (nDim == ExampleSettings.nValueDimension) ?</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.DataPilotFieldOrientation.DATA :</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.DataPilotFieldOrientation.HIDDEN;</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceDimension.html" title="see type com.sun.star.sheet.DataPilotSourceDimension">com.sun.star.sheet.DataPilotSourceDimension</a></span> service contains a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface that is used for the following properties of a dimension:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">Original</span> (read-only) contains the dimension object from which a dimension was cloned, or <span class="Codeintext">null</span> if it was not cloned. A description of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XCloneable.html" title="see type com.sun.star.util.XCloneable">com.sun.star.util.XCloneable</a></span> interface is described below.</p></li>
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">IsDataLayoutDimension</span> (read-only) must contain <span class="Codeintext">true</span> if the dimension is the âdata layoutâ dimension, otherwise <span class="Codeintext">false</span>.</p></li>
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">Orientation</span> controls how a dimension is used in the DataPilot table. If it contains the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotFieldOrientation.html" title="see type com.sun.star.sheet.DataPilotFieldOrientation">com.sun.star.sheet.DataPilotFieldOrientation</a></span> enum values <span class="Codeintext">COLUMN</span> or <span class="Codeintext">ROW</span>, the dimension is used as a column or row dimension, respectively. If the value is <span class="Codeintext">DATA</span>, the dimension is used as data (measure) dimension. The <span class="Codeintext">PAGE</span> designates a page dimension, but is not currently used in <span class="T2">OpenOffice.org</span> API Calc. If the value is <span class="Codeintext">HIDDEN</span>, the dimension is not used.</p></li>
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">Position</span> contains the position of the dimension within the orientation. This controls the order of the dimensions. If a dimension's orientation is changed, it is added at the end of the dimensions for that orientation, and the <span class="Codeintext">Position</span> property reflects that position.</p></li>
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">Function</span> specifies the function that is used to aggregate data for a data dimension.</p></li>
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">UsedHierarchy</span> selects which of the dimension's hierarchies is used in the DataPilot table. See the section on hierarchies below.</p></li>
   <li class="P73" style="margin-left:2.5cm;"><p class="P73" style="margin-left:0cm;"><span class="Codeintext">Filter</span> specifies a list of filter criteria to be applied to the source data before processing. It is currently not used by <span class="T2">OpenOffice.org</span> API Calc.</p></li>
  </ul>
  <p class="Paragraph">In the following example, the <span class="Codeintext">setPropertyValue()</span> method for the dimension only implements the modification of <span class="Codeintext">Orientation</span> and <span class="Codeintext">Position</span>, using two lists to store the order of column and row dimensions. Page dimensions are not supported in the example. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table112"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public void setPropertyValue(String aPropertyName, Object aValue)Â </p>
     <p class="Code">Â  Â  Â  Â  throws com.sun.star.beans.UnknownPropertyException {</p>
     <p class="Code">Â  Â  if (aPropertyName.equals("Orientation")) {</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.DataPilotFieldOrientation eNewOrient =</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  (com.sun.star.sheet.DataPilotFieldOrientation) aValue;</p>
     <p class="Code">Â  Â  Â  Â  if (nDimension != ExampleSettings.nValueDimension &amp;&amp;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  nDimension != ExampleSettings.nDataDimension &amp;&amp;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  eNewOrient != com.sun.star.sheet.DataPilotFieldOrientation.DATA) {</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  Â  Â  // remove from list for old orientation and add for new one</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Integer aDimInt = new Integer(nDimension);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  if (eOrientation == com.sun.star.sheet.DataPilotFieldOrientation.COLUMN)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  aSettings.aColDimensions.remove(aDimInt);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  else if (eOrientation == com.sun.star.sheet.DataPilotFieldOrientation.ROW)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  aSettings.aRowDimensions.remove(aDimInt);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  if (eNewOrient == com.sun.star.sheet.DataPilotFieldOrientation.COLUMN)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  aSettings.aColDimensions.add(aDimInt);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  else if (eNewOrient == com.sun.star.sheet.DataPilotFieldOrientation.ROW)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  aSettings.aRowDimensions.add(aDimInt);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  Â  Â  // change orientation</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  eOrientation = eNewOrient;</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  } else if (aPropertyName.equals("Position")) {</p>
     <p class="Code">Â  Â  Â  Â  int nNewPos = ((Integer) aValue).intValue();</p>
     <p class="Code">Â  Â  Â  Â  Integer aDimInt = new Integer(nDimension);</p>
     <p class="Code">Â  Â  Â  Â  if (eOrientation == com.sun.star.sheet.DataPilotFieldOrientation.COLUMN) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aSettings.aColDimensions.remove(aDimInt);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aSettings.aColDimensions.add( nNewPos, aDimInt );</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  Â  Â  else if (eOrientation == com.sun.star.sheet.DataPilotFieldOrientation.ROW) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aSettings.aRowDimensions.remove(aDimInt);</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aSettings.aRowDimensions.add(nNewPos, aDimInt);</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  } else if (aPropertyName.equals("Function") || aPropertyName.equals("UsedHierarchy") ||</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aPropertyName.equals("Filter")) {</p>
     <p class="Code">Â  Â  Â  Â  // ignored</p>
     <p class="Code">Â  Â  } else</p>
     <p class="Code">Â  Â  Â  Â  throw new com.sun.star.beans.UnknownPropertyException();</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The associated <span class="Codeintext">getPropertyValue()</span> method returns the stored values for <span class="Codeintext">Orientation</span> and <span class="Codeintext">Position.</span> If it is the data layout dimension, then <span class="Codeintext">IsDataLayoutDimension </span>is <span class="Codeintext">true</span>, and the values default for the remaining properties. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table113"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">public Object getPropertyValue(String aPropertyName)Â </p>
     <p class="Code">Â  Â  Â  Â  throws com.sun.star.beans.UnknownPropertyException {</p>
     <p class="Code">Â  Â  if (aPropertyName.equals("Original"))</p>
     <p class="Code">Â  Â  Â  Â  return null;</p>
     <p class="Code">Â  Â  else if (aPropertyName.equals( "IsDataLayoutDimension"))</p>
     <p class="Code">Â  Â  Â  Â  return new Boolean(nDimension == ExampleSettings.nDataDimension);</p>
     <p class="Code">Â  Â  else if (aPropertyName.equals("Orientation"))</p>
     <p class="Code">Â  Â  Â  Â  return eOrientation;</p>
     <p class="Code">Â  Â  else if (aPropertyName.equals("Position")) {</p>
     <p class="Code">Â  Â  Â  Â  int nPosition;</p>
     <p class="Code">Â  Â  Â  Â  if (eOrientation == com.sun.star.sheet.DataPilotFieldOrientation.COLUMN)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nPosition = aSettings.aColDimensions.indexOf(new Integer(nDimension));</p>
     <p class="Code">Â  Â  Â  Â  else if (eOrientation == com.sun.star.sheet.DataPilotFieldOrientation.ROW)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nPosition = aSettings.aRowDimensions.indexOf(new Integer(nDimension));</p>
     <p class="Code">Â  Â  Â  Â  else</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nPosition = nDimension;</p>
     <p class="Code">Â  Â  Â  Â  return new Integer(nPosition);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  else if (aPropertyName.equals("Function"))</p>
     <p class="Code">Â  Â  Â  Â  return com.sun.star.sheet.GeneralFunction.SUM;</p>
     <p class="Code">Â  Â  else if (aPropertyName.equals("UsedHierarchy"))</p>
     <p class="Code">Â  Â  Â  Â  return new Integer(0);</p>
     <p class="Code">Â  Â  else if (aPropertyName.equals("Filter"))</p>
     <p class="Code">Â  Â  Â  Â  return new com.sun.star.sheet.TableFilterField[0];</p>
     <p class="Code">Â  Â  else</p>
     <p class="Code">Â  Â  Â  Â  throw new com.sun.star.beans.UnknownPropertyException();</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The dimension's <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XCloneable.html" title="see type com.sun.star.util.XCloneable">com.sun.star.util.XCloneable</a></span> interface is required when a dimension is used in multiple positions. The DataPilot dialog allows the use of a column or row dimension additionally as data dimension, and it also allows multiple use of a data dimension by assigning several functions to it. In both cases, additional dimension objects are created from the original one by calling the <span class="Codeintext">createClone()</span> method. Each clone is given a new name using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span> interface's <span class="Codeintext">setName()</span> method, then the different settings are applied to the objects. A dimension object that was created using the <span class="Codeintext">createClone()</span> method must return the original object that it was created from in the <span class="Codeintext">Original</span> property.</p>
  <p class="Paragraph">The example does not support multiple uses of a dimension, so it always returns <span class="Codeintext">null</span> from the <span class="Codeintext">createClone()</span> method, and the <span class="Codeintext">Original</span> property is also always <span class="Codeintext">null</span>.</p>
  <h5 class="Head5"><a name="1_3_7_2_3_Hierarchies" />Hierarchies</h5>
  <p class="Paragraph">A single dimension can have several hierarchies, that is, several ways of grouping the elements of the dimension. For example, date values may be grouped:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P74" style="margin-left:2.5cm;"><p class="P74" style="margin-left:0cm;">in a hierarchy with the levels âyearâ, âmonthâ and âday of monthâ.Â </p></li>
   <li class="P74" style="margin-left:2.5cm;"><p class="P74" style="margin-left:0cm;">in a hierarchy with the levels âyearâ, âweekâ and âday of weekâ.Â </p></li>
  </ul>
  <p class="Paragraph">The property <span class="Codeintext">UsedHierarchy</span> of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceDimension.html" title="see type com.sun.star.sheet.DataPilotSourceDimension">com.sun.star.sheet.DataPilotSourceDimension</a></span> service selects which hierarchy of a dimension is used. The property contains an index into the sequence of names that is returned by the dimension's <span class="Codeintext">getElementNames()</span> method. OpenOffice.org API Calc currently has no user interface to select a hierarchy, so it uses the hierarchy that the initial value of the <span class="Codeintext">UsedHierarchy</span> property selects.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceHierarchy.html" title="see type com.sun.star.sheet.DataPilotSourceHierarchy">com.sun.star.sheet.DataPilotSourceHierarchy</a></span> service serves as a container to access the levels object.</p>
  <p class="Paragraph">In the example, each dimension has only one hierarchy, which in turn has one level.Â </p>
  <h5 class="Head5"><a name="1_3_7_2_4_Levels" />Levels</h5>
  <p class="Paragraph">Each level of a hierarchy that is used in a DataPilot table corresponds to a column or row showing its members in the left or upper part of the table. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceLevel.html" title="see type com.sun.star.sheet.DataPilotSourceLevel">com.sun.star.sheet.DataPilotSourceLevel</a></span> service contains a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface that is used to apply the following settings to a level:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P75" style="margin-left:2.5cm;"><p class="P75" style="margin-left:0cm;">The <span class="Codeintext">SubTotals</span> property defines a list of functions that are used to calculate subtotals for each member. If the sequence is empty, no subtotal columns or rows are generated. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/GeneralFunction.html" title="see type com.sun.star.sheet.GeneralFunction">com.sun.star.sheet.GeneralFunction</a></span> enum value <span class="Codeintext">AUTO</span> is used to select âautomaticâ subtotals, determined by the type of the data.</p></li>
   <li class="P75" style="margin-left:2.5cm;"><p class="P75" style="margin-left:0cm;">The <span class="Codeintext">ShowEmpty</span> property controls if result columns or rows are generated for members that have no data.</p></li>
  </ul>
  <p class="Paragraph">Both of these settings can be modified by the user in the âData Fieldâ dialog. The example does not use them.Â </p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XDataPilotMemberResults.html" title="see type com.sun.star.sheet.XDataPilotMemberResults">com.sun.star.sheet.XDataPilotMemberResults</a></span> interface is used to get the result header column that is displayed below the level's name for a row dimension, or the header row for a column dimension. The sequence returned from the <span class="Codeintext">getResults()</span> call must have the same size as the data result's columns or rows respectively, or be empty. If the sequence is empty, or none of the entries contains the <span class="Codeintext">HASMEMBER</span> flag, the level is not shown.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/MemberResult.html" title="see type com.sun.star.sheet.MemberResult">com.sun.star.sheet.MemberResult</a></span> struct contains the following members:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P76" style="margin-left:2.5cm;"><p class="P76" style="margin-left:0cm;"><span class="Codeintext">Name</span> is the name of the member that is represented by the entry, exactly as returned by the member object's <span class="Codeintext">getName()</span> method. It is used to find the member object, for example when the user double-clicks on the cell.</p></li>
   <li class="P76" style="margin-left:2.5cm;"><p class="P76" style="margin-left:0cm;"><span class="Codeintext">Caption</span> is the string that will be displayed in the cell. It may or may not be the same as <span class="Codeintext">Name</span>.</p></li>
  </ul>
  <ul style="margin-left:0.5cm;">
   <li class="P76" style="margin-left:2.5cm;"><p class="P76" style="margin-left:0cm;"><span class="Codeintext">Flags</span> indicates the kind of result the entry represents. It can be a combination of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/MemberResultFlags.html" title="see type com.sun.star.sheet.MemberResultFlags">com.sun.star.sheet.MemberResultFlags</a></span> constants:</p><ul style="margin-left:-2cm;">
     <li class="P76" style="margin-left:2.5cm;"><p class="P76" style="margin-left:0cm;"><span class="Codeintext">HASMEMBER</span> indicates there is a member that belongs to this entry.</p></li>
     <li class="P76" style="margin-left:2.5cm;"><p class="P76" style="margin-left:0cm;"><span class="Codeintext">SUBTOTAL</span> marks an entry that corresponds to a subtotal column or row. The <span class="Codeintext">HASMEMBER</span> Â should be set.</p></li>
     <li class="P76" style="margin-left:2.5cm;"><p class="P76" style="margin-left:0cm;"><span class="Codeintext">CONTINUE</span> marks an entry that is a continuation of the previous entry. In this case, none of the others are set, and the <span class="Codeintext">Name</span> and <span class="Codeintext">Caption</span> members are both empty.</p></li>
    </ul></li>
  </ul>
  <p class="Paragraph">In the example table shown above, the resulting sequence for the âonesâ level would consist of:Â </p>
  <ul style="margin-left:0.5cm;">
   <li class="P77" style="margin-left:2.5cm;"><p class="P77" style="margin-left:0cm;">an entry containing the name and caption â1â and the <span class="Codeintext">HASMEMBER</span> flag</p></li>
   <li class="P77" style="margin-left:2.5cm;"><p class="P77" style="margin-left:0cm;">two entries containing only the <span class="Codeintext">CONTINUE</span> flag</p></li>
   <li class="P77" style="margin-left:2.5cm;"><p class="P77" style="margin-left:0cm;">the same repeated for member names â2â and â3â.Â </p></li>
  </ul>
  <p class="Paragraph">The implementation for the example looks similar to this: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleDataPiloSource.java" title="goto source Spreadsheet/ExampleDataPiloSource.java">Spreadsheet/ExampleDataPiloSource.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table114"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">private ExampleSettings aSettings;Â </p>
     <p class="Code">private int nDimension;Â </p>
     <p class="Code">Â </p>
     <p class="Code">public com.sun.star.sheet.MemberResult[] getResults() {Â </p>
     <p class="Code">Â  Â  int nDimensions = 0;</p>
     <p class="Code">Â  Â  int nPosition = aSettings.aColDimensions.indexOf(new Integer(nDimension));</p>
     <p class="Code">Â  Â  if (nPosition &gt;= 0)</p>
     <p class="Code">Â  Â  Â  Â  nDimensions = aSettings.aColDimensions.size();</p>
     <p class="Code">Â  Â  else {</p>
     <p class="Code">Â  Â  Â  Â  nPosition = aSettings.aRowDimensions.indexOf(new Integer(nDimension));</p>
     <p class="Code">Â  Â  Â  Â  if (nPosition &gt;= 0)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nDimensions = aSettings.aRowDimensions.size();</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  if (nPosition &lt; 0)</p>
     <p class="Code">Â  Â  Â  Â  return new com.sun.star.sheet.MemberResult[0];</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  int nMembers = aSettings.nMemberCount;</p>
     <p class="Code">Â  Â  int nRepeat = 1;</p>
     <p class="Code">Â  Â  int nFill = 1;</p>
     <p class="Code">Â  Â  for (int i=0; i&lt;nDimensions; i++) {</p>
     <p class="Code">Â  Â  Â  Â  if (i &lt; nPosition)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nRepeat *= nMembers;</p>
     <p class="Code">Â  Â  Â  Â  else if (i &gt; nPosition)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  nFill *= nMembers;</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  int nSize = nRepeat * nMembers * nFill;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.sheet.MemberResult[] aResults = new com.sun.star.sheet.MemberResult[nSize];</p>
     <p class="Code">Â  Â  int nResultPos = 0;</p>
     <p class="Code">Â  Â  for (int nOuter=0; nOuter&lt;nRepeat; nOuter++) {</p>
     <p class="Code">Â  Â  Â  Â  for (int nMember=0; nMember&lt;nMembers; nMember++) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nResultPos] = new com.sun.star.sheet.MemberResult();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nResultPos].Name = ExampleSettings.getMemberName( nMember );</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nResultPos].Caption = aResults[nResultPos].Name;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  aResults[nResultPos].Flags = com.sun.star.sheet.MemberResultFlags.HASMEMBER;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  ++nResultPos;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  Â  Â  for (int nInner=1; nInner&lt;nFill; nInner++) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  aResults[nResultPos] = new com.sun.star.sheet.MemberResult();</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  aResults[nResultPos].Flags = com.sun.star.sheet.MemberResultFlags.CONTINUE;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  ++nResultPos;</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  return aResults;</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h5 class="Head5"><a name="1_3_7_2_5_Members" />Members</h5>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/DataPilotSourceMember.html" title="see type com.sun.star.sheet.DataPilotSourceMember">com.sun.star.sheet.DataPilotSourceMember</a></span> service contains two settings that are accessed through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P78" style="margin-left:2.5cm;"><p class="P78" style="margin-left:0cm;">If the boolean <span class="Codeintext">IsVisible</span> property is <span class="Codeintext">false</span>, the member and its data are hidden. There is currently no user interface to change this property.</p></li>
   <li class="P78" style="margin-left:2.5cm;"><p class="P78" style="margin-left:0cm;">The boolean <span class="Codeintext">ShowDetails</span> property controls if the results for a member should be detailed in the following level. If a member has this property set to <span class="Codeintext">false</span>, only a single result column or row is generated for each data dimension. The property can be changed by the user by double-clicking on a result header cell for the member.</p></li>
  </ul>
  <p class="Paragraph">These properties are not used in the example.Â </p>
  <h3 class="Head3"><a name="1_3_8_Protecting_Spreadsheets" />9.3.8Â Â Protecting Spreadsheets</h3>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/document/XActionLockable.html" title="see type com.sun.star.document.XActionLockable">com.sun.star.document.XActionLockable</a></span> protects this cell from painting or updating during changes. The interface can be used to optimize the performance of complex changes, for instance, inserting or deleting formatted text.</p>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/util/XProtectable.html" title="see type com.sun.star.util.XProtectable">com.sun.star.util.XProtectable</a></span> contains methods to protect and unprotect the spreadsheet with a password. Protecting the spreadsheet protects the locked cells only.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P79" style="margin-left:2.5cm;"><p class="P79" style="margin-left:0cm;">The methods <span class="Codeintext">protect()</span> and <span class="Codeintext">unprotect()</span> to switch the protection on and off. If a wrong password is used to unprotect the spreadsheet, it leads to an exception.</p></li>
   <li class="P79" style="margin-left:2.5cm;"><p class="P79" style="margin-left:0cm;">The method <span class="Codeintext">isProtected()</span> returns the protection state of the spreadsheet as a <span class="Codeintext">boolean</span> value.</p></li>
  </ul>
  <h3 class="Head3"><a name="1_3_9_Sheet_Outline" />9.3.9Â Â Sheet Outline</h3>
  <p class="Paragraph">The spreadsheet interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html" title="see type com.sun.star.sheet.XSheetOutline">com.sun.star.sheet.XSheetOutline</a></span> contains all the methods to control the row and column outlines of a spreadsheet:</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table148"><colgroup><col width="228" /><col width="477" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.997cm; " class="Table148A1">
      <p class="TableHead">Â Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html" title="see type com.sun.star.sheet.XSheetOutline">com.sun.star.sheet.XSheetOutline</a></span> </p>
     </td></tr><tr><td style="text-align:left;width:4.997cm; " class="Table148A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html#group" title="see group of type com.sun.star.sheet.XSheetOutline">group</a>()</span></p>
    </td><td style="text-align:left;width:10.442cm; " class="Table148B2">
     <p class="TextInTable">Creates a new outline group and the method <span class="Codeintext">ungroup()</span> removes the innermost outline group for a cell range. The parameter <span class="Codeintext">nOrientation</span> (type <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableOrientation.html" title="see type com.sun.star.table.TableOrientation">com.sun.star.table.TableOrientation</a></span>) selects the orientation of the outline (columns or rows).</p>
    </td></tr><tr><td style="text-align:left;width:4.997cm; " class="Table148A2">
     <p class="TextInTable"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html#autoOutline" title="see autoOutline of type com.sun.star.sheet.XSheetOutline">autoOutline</a>()</span></p>
    </td><td style="text-align:left;width:10.442cm; " class="Table148B2">
     <p class="TextInTable">Inserts outline groups for a cell range depending on formula references.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.997cm; " class="Table148A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html#clearOutline" title="see clearOutline of type com.sun.star.sheet.XSheetOutline">clearOutline</a>()</span></p>
    </td><td style="text-align:left;width:10.442cm; " class="Table148B2">
     <p class="TextInTable">Removes all outline groups from the sheet.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.997cm; " class="Table148A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html#hideDetail" title="see hideDetail of type com.sun.star.sheet.XSheetOutline">hideDetail</a>()</span></p>
    </td><td style="text-align:left;width:10.442cm; " class="Table148B2">
     <p class="TextInTable">Collapses an outline group.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.997cm; " class="Table148A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html#showDetail" title="see showDetail of type com.sun.star.sheet.XSheetOutline">showDetail</a>()</span></p>
    </td><td style="text-align:left;width:10.442cm; " class="Table148B2">
     <p class="TextInTable">Reopens an outline group.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.997cm; " class="Table148A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetOutline.html#showLevel" title="see showLevel of type com.sun.star.sheet.XSheetOutline">showLevel</a>()</span></p>
    </td><td style="text-align:left;width:10.442cm; " class="Table148B2">
     <p class="TextInTable">Shows the specified number of outline group levels and hides the others.Â </p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_10_Detective" />9.3.10Â Â Detective</h3>
  <p class="Paragraph">The spreadsheet interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html" title="see type com.sun.star.sheet.XSheetAuditing">com.sun.star.sheet.XSheetAuditing</a></span> supports the detective functionality of the spreadsheet.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table149"><colgroup><col width="228" /><col width="477" /></colgroup><tr><td colspan="2" style="text-align:left;width:4.992cm; " class="Table149A1">
      <p class="TableHead">Methods of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html" title="see type com.sun.star.sheet.XSheetAuditing">com.sun.star.sheet.XSheetAuditing</a></span></p>
     </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table149A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#hideDependents" title="see hideDependents of type com.sun.star.sheet.XSheetAuditing">hideDependents</a>()</span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#hidePrecedents" title="see hidePrecedents of type com.sun.star.sheet.XSheetAuditing">hidePrecedents</a>()</span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table149B2">
     <p class="TextInTable">Hides the last arrows to dependent or precedent cells of a formula cell. Repeated calls of the methods shrink the chains of arrows.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table149A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#showDependents" title="see showDependents of type com.sun.star.sheet.XSheetAuditing">showDependents</a>()</span></p>
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#showPrecedents" title="see showPrecedents of type com.sun.star.sheet.XSheetAuditing">showPrecedents</a>()</span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table149B2">
     <p class="TextInTable">Adds arrows to the next dependent or precedent cells of a formula cell. Repeated calls of the methods extend the chains of arrows.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table149A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#showErrors" title="see showErrors of type com.sun.star.sheet.XSheetAuditing">showErrors</a>()</span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table149B2">
     <p class="TextInTable">Inserts arrows to all cells that cause an error in the specified cell.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table149A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#showInvalid" title="see showInvalid of type com.sun.star.sheet.XSheetAuditing">showInvalid</a>()</span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table149B2">
     <p class="TextInTable">Marks all cells that contain invalid values.Â </p>
    </td></tr><tr><td style="text-align:left;width:4.992cm; " class="Table149A2">
     <p class="TableCode"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetAuditing.html#clearArrows" title="see clearArrows of type com.sun.star.sheet.XSheetAuditing">clearArrows</a>()</span></p>
    </td><td style="text-align:left;width:10.448cm; " class="Table149B2">
     <p class="TextInTable">Removes all auditing arrows from the spreadsheet.Â </p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_3_11_Other_Table_Operations" />9.3.11Â Â Other Table Operations</h3>
  <h4 class="Head4"><a name="1_3_11_1_Data_Validation" />Data Validation</h4>
  <p class="Paragraph">Data validation checks if a user entered valid entries.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table94"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 12.499cm; " id="Frame40" class="fr15">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetValidation.png" title="link to the full-sized graphic &quot;./SheetValidation.png&quot;"><img border="0" width="567" height="459" alt="UML diagram showing the  com.sun.star.sheet.TableValidation service" src="./9 Spreadsheet Documents_files/SheetValidation.png" class="fr8" /></a>Illustration <a name="refIllustration37">9.38</a>: TableValidation</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">A cell or cell range object contains the properties <span class="Codeintext">Validation</span> and <span class="Codeintext">ValidationLocal</span>. They return the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> of the validation object <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableValidation.html" title="see type com.sun.star.sheet.TableValidation">com.sun.star.sheet.TableValidation</a></span>. The objects of both properties are equal, except the representation of formulas. The <span class="Codeintext">ValidationLocal</span> property uses function names in the current language).</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table95"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table95A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table95B1">
      <p class="TipInTable">After the validation settings are changed, the validation object is reinserted into the property set of the cell or cell range.Â </p>
     </td></tr></table></div>
  <ul style="margin-left:0.5cm;">
   <li class="P80" style="margin-left:2.5cm;"><p class="P80" style="margin-left:0cm;"><span class="Codeintext">Type</span> (type <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/ValidationType.html" title="see type com.sun.star.sheet.ValidationType">com.sun.star.sheet.ValidationType</a></span>): Describes the type of data the cells Â contain. In text cells, it is possible to check the length of the text.</p></li>
   <li class="P80" style="margin-left:2.5cm;"><p class="P80" style="margin-left:0cm;"><span class="Codeintext">IgnoreBlankCells</span>: Determines if blank cells are valid.</p></li>
   <li class="P80" style="margin-left:2.5cm;"><p class="P80" style="margin-left:0cm;"><span class="Codeintext">ShowInputMessage</span>, <span class="Codeintext">InputTitle</span> and <span class="Codeintext">InputMessage</span>: These properties describe the message that appears if a cell of the validation area is selected.</p></li>
   <li class="P80" style="margin-left:2.5cm;"><p class="P80" style="margin-left:0cm;"><span class="Codeintext">ShowErrorMessage</span>, <span class="Codeintext">ErrorTitle</span>, <span class="Codeintext">ErrorMessage</span> and <span class="Codeintext">ErrorAlertStyle</span> (type <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/ValidationAlertStyle.html" title="see type com.sun.star.sheet.ValidationAlertStyle">com.sun.star.sheet.ValidationAlertStyle</a></span>): These properties describe the error message that appear if an invalid value has been entered. If the alert style is STOP, all invalid values are rejected. With the alerts WARNING and INFO, it is possible to keep invalid values. The alert MACRO starts a macro on invalid values. The property <span class="Codeintext">ErrorTitle</span> has to contain the name of the macro.</p></li>
  </ul>
  <p class="P45">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSheetCondition.html" title="see type com.sun.star.sheet.XSheetCondition">com.sun.star.sheet.XSheetCondition</a></span> sets the conditions for valid values. The comparison operator, the first and second formula and the base address for relative references in formulas.</p>
  <p class="P81">The following example enters values between 0.0 and 5.0 in a cell range. The <span class="Codeintext">xSheet</span> is the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheet.html" title="see type com.sun.star.sheet.XSpreadsheet">com.sun.star.sheet.XSpreadsheet</a></span> of a spreadsheet. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table96"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Data validation ---</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCellRange = xSheet.getCellRangeByName("A7:C7");</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xCellPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xCellRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // validation properties</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xValidPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  xCellPropSet.getPropertyValue("Validation");</p>
     <p class="Code">Â  Â  xValidPropSet.setPropertyValue("Type", com.sun.star.sheet.ValidationType.DECIMAL);</p>
     <p class="Code">Â  Â  xValidPropSet.setPropertyValue("ShowErrorMessage", new Boolean(true));</p>
     <p class="Code">Â  Â  xValidPropSet.setPropertyValue("ErrorMessage", "This is an invalid value!");</p>
     <p class="Code">Â  Â  xValidPropSet.setPropertyValue("ErrorAlertStyle", com.sun.star.sheet.ValidationAlertStyle.STOP);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // condition</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XSheetCondition xCondition = (com.sun.star.sheet.XSheetCondition)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSheetCondition.class, xValidPropSet);</p>
     <p class="Code">Â  Â  xCondition.setOperator(com.sun.star.sheet.ConditionOperator.BETWEEN);</p>
     <p class="Code">Â  Â  xCondition.setFormula1("0.0");</p>
     <p class="Code">Â  Â  xCondition.setFormula2("5.0");</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // apply on cell range</p>
     <p class="Code">Â  Â  xCellPropSet.setPropertyValue("Validation", xValidPropSet);</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_11_2_Data_Consolidation" />Data Consolidation</h4>
  <p class="Paragraph">The data consolidation feature calculates results based on several cell ranges.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table97"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 11.523cm; " id="Frame41" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetConsolidationUML.png" title="link to the full-sized graphic &quot;./SheetConsolidationUML.png&quot;"><img border="0" width="523" height="232" alt="UML diagram showing the com.sun.star.sheet.ConsolidationDescriptor service" src="./9 Spreadsheet Documents_files/SheetConsolidationUML.png" class="fr8" /></a>Illustration <a name="refIllustration38">9.39</a>: ConsolidationDescriptor</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XConsolidatable.html" title="see type com.sun.star.sheet.XConsolidatable">com.sun.star.sheet.XConsolidatable</a></span>'s method <span class="Codeintext">createConsolidationDescriptor()</span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XConsolidationDescriptor.html" title="see type com.sun.star.sheet.XConsolidationDescriptor">com.sun.star.sheet.XConsolidationDescriptor</a></span> of a consolidation descriptor (service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/ConsolidationDescriptor.html" title="see type com.sun.star.sheet.ConsolidationDescriptor">com.sun.star.sheet.ConsolidationDescriptor</a></span>). This descriptor contains all data needed for a consolidation. It is possible to get and set all properties:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P82" style="margin-left:2.5cm;"><p class="P82" style="margin-left:0cm;"><span class="Codeintext">getFunction()</span> and <span class="Codeintext">setFunction()</span>: The function for calculation, type <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/GeneralFunction.html" title="see type com.sun.star.sheet.GeneralFunction">com.sun.star.sheet.GeneralFunction</a></span>.</p></li>
   <li class="P82" style="margin-left:2.5cm;"><p class="P82" style="margin-left:0cm;"><span class="Codeintext">getSources()</span> and <span class="Codeintext">setSources()</span>: A sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> structs with all cell ranges containing the source data.</p></li>
   <li class="P82" style="margin-left:2.5cm;"><p class="P82" style="margin-left:0cm;"><span class="Codeintext">getStartOutputPosition()</span> and <span class="Codeintext">setStartOutputPosition()</span>: A <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellAddress.html" title="see type com.sun.star.table.CellAddress">com.sun.star.table.CellAddress</a></span> containing the first cell of the result cell range.</p></li>
   <li class="P82" style="margin-left:2.5cm;"><p class="P82" style="margin-left:0cm;"><span class="Codeintext">getUseColumnHeaders()</span>, <span class="Codeintext">setUseColumnHeaders()</span>, <span class="Codeintext">getUseRowHeaders()</span> and <span class="Codeintext">setUseRowHeaders()</span>: Determine if the first column or row of each cell range is used to find matching data.</p></li>
   <li class="P82" style="margin-left:2.5cm;"><p class="P82" style="margin-left:0cm;"><span class="Codeintext">getInsertLinks()</span> and <span class="Codeintext">setInsertLinks()</span>: Determine if the results are linked to the source data (formulas are inserted) or not (only results are inserted).</p></li>
  </ul>
  <p class="Paragraph">The method <span class="Codeintext">consolidate()</span> of the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XConsolidatable.html" title="see type com.sun.star.sheet.XConsolidatable">com.sun.star.sheet.XConsolidatable</a></span> performs a consolidation with the passed descriptor.</p>
  <h4 class="Head4"><a name="1_3_11_3_Charts" />Charts</h4>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle12"><colgroup><col width="821" /></colgroup><tr class="Tabelle121"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 13.033cm; " id="Frame42" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/TableChartsUML.png" title="link to the full-sized graphic &quot;./TableChartsUML.png&quot;"><img border="0" width="593" height="474" alt="UML diagram showing the com.sun.star.table.Charts service" src="./9 Spreadsheet Documents_files/TableChartsUML.png" class="fr8" /></a>Illustration <a name="refIllustration39">9.40</a>: TableCharts</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableChart.html" title="see type com.sun.star.table.TableChart">com.sun.star.table.TableChart</a></span> represents a chart object. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableChart.html" title="see type com.sun.star.table.XTableChart">com.sun.star.table.XTableChart</a></span> provides access to the cell range of the source data and controls the existence of column and row headers.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table153"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table153A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table153B1">
      <p class="TipInTable">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableChart.html" title="see type com.sun.star.table.TableChart">com.sun.star.table.TableChart</a></span> does not represent the chart document, but the object in the table that contains the chart document. The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/document/XEmbeddedObjectSupplier.html" title="see type com.sun.star.document.XEmbeddedObjectSupplier">com.sun.star.document.XEmbeddedObjectSupplier</a></span> provides access to that chart document. For further information, see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Charts/Charts.xhtml#1_Charts" title="see chapter 11 Charts">11 Charts</a></span>.</p>
     </td></tr></table></div>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span> retrieves and changes the name of the chart object.</p>
  <p class="Paragraph">For further information about charts, see <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Charts/Charts.xhtml#1_Charts" title="see chapter 11 Charts">11 Charts</a></span>.</p>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/TableCharts.html" title="see type com.sun.star.table.TableCharts">com.sun.star.table.TableCharts</a></span> represents the collection of all chart objects contained in the table. It implements the interfaces:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P83" style="margin-left:2.5cm;"><p class="P83" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableCharts.html" title="see type com.sun.star.table.XTableCharts">com.sun.star.table.XTableCharts</a></span> to create new charts and accessing them by their names.</p></li>
   <li class="P83" style="margin-left:2.5cm;"><p class="P83" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> to access the charts by the insertion index.</p></li>
   <li class="P83" style="margin-left:2.5cm;"><p class="P83" style="margin-left:0cm;"><span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XEnumerationAccess.html" title="see type com.sun.star.container.XEnumerationAccess">com.sun.star.container.XEnumerationAccess</a></span> to create an enumeration of all charts.</p></li>
  </ul>
  <p class="P5">The following example shows how <span class="Codeintext">xCharts</span> can be a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/XTableCharts.html" title="see type com.sun.star.table.XTableCharts">com.sun.star.table.XTableCharts</a></span> interface of a collection of charts. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/GeneralTableSample.java" title="goto source Spreadsheet/GeneralTableSample.java">Spreadsheet/GeneralTableSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Tabelle13"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // *** Inserting CHARTS ***</p>
     <p class="Code">Â  Â  String aName = "newChart";</p>
     <p class="Code">Â  Â  com.sun.star.awt.Rectangle aRect = new com.sun.star.awt.Rectangle();</p>
     <p class="Code">Â  Â  aRect.X = 10000;</p>
     <p class="Code">Â  Â  aRect.Y = 3000;</p>
     <p class="Code">Â  Â  aRect.Width = aRect.Height = 5000;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress[] aRanges = new com.sun.star.table.CellRangeAddress[1];</p>
     <p class="Code">Â  Â  aRanges[0] = new com.sun.star.table.CellRangeAddress();</p>
     <p class="Code">Â  Â  aRanges[0].Sheet = aRanges[0].StartColumn = aRanges[0].EndColumn = 0;</p>
     <p class="Code">Â  Â  aRanges[0].StartRow = 0; aRanges[0].EndRow = 9;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Create the chart.</p>
     <p class="Code">Â  Â  xCharts.addNewByName(aName, aRect, aRanges, false, false);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Get the chart by name.</p>
     <p class="Code">Â  Â  Object aChartObj = xCharts.getByName(aName);</p>
     <p class="Code">Â  Â  com.sun.star.table.XTableChart xChart = (com.sun.star.table.XTableChart)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.table.XTableChart.class, aChartObj);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // Query the state of row and column headers.</p>
     <p class="Code">Â  Â  aText = "Chart has column headers: ";</p>
     <p class="Code">Â  Â  aText += xChart.getHasColumnHeaders() ? "yes" : "no";</p>
     <p class="Code">Â  Â  System.out.println(aText);</p>
     <p class="Code">Â  Â  aText = "Chart has row headers: ";</p>
     <p class="Code">Â  Â  aText += xChart.getHasRowHeaders() ? "yes" : "no";</p>
     <p class="Code">Â  Â  System.out.println(aText);</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_3_11_4_Scenarios" />Scenarios</h4>
  <p class="Paragraph">A set of scenarios contains different selectable cell contents for one or more cell ranges in a spreadsheet. The data of each scenario in this set is stored in a hidden sheet following the scenario sheet. To change the scenario's data, its hidden sheet has to be modified.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table98"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 12.524cm; " id="Frame43" class="fr2">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetScenariosUML.png" title="link to the full-sized graphic &quot;./SheetScenariosUML.png&quot;"><img border="0" width="568" height="565" alt="UML diagram showing the com.sun.star.sheet.Scenarios service" src="./9 Spreadsheet Documents_files/SheetScenariosUML.png" class="fr27" /></a>Illustration <a name="refIllustration40">9.41</a>: Scenarios</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XScenariosSupplier.html" title="see type com.sun.star.sheet.XScenariosSupplier">com.sun.star.sheet.XScenariosSupplier</a></span>'s method <span class="Codeintext">getScenarios()</span> returns the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XScenarios.html" title="see type com.sun.star.sheet.XScenarios">com.sun.star.sheet.XScenarios</a></span> of the scenario set of the spreadsheet. This scenario set is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Scenarios.html" title="see type com.sun.star.sheet.Scenarios">com.sun.star.sheet.Scenarios</a></span> containing spreadsheet objects. It is possible to access the scenarios through their names that is equal to the name of the corresponding spreadsheet, their index, or using an enumeration (represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/ScenariosEnumeration.html" title="see type com.sun.star.sheet.ScenariosEnumeration">com.sun.star.sheet.ScenariosEnumeration</a></span>).</p>
  <p class="Paragraph">The interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XScenarios.html" title="see type com.sun.star.sheet.XScenarios">com.sun.star.sheet.XScenarios</a></span> inserts and removes scenarios:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P84" style="margin-left:2.5cm;"><p class="P84" style="margin-left:0cm;">The method <span class="Codeintext">addNewByName()</span> adds a scenario with the given name that contains the specified cell ranges.</p></li>
   <li class="P84" style="margin-left:2.5cm;"><p class="P84" style="margin-left:0cm;">The method <span class="Codeintext">removeByName()</span> removes the scenario (the spreadsheet) with the given name.</p></li>
  </ul>
  <p class="P5">The following method shows how to create a scenario: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table87"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">/** Inserts a scenario containing one cell range into a sheet and applies the value array.Â </p>
     <p class="Code">Â  Â  @param xSheet Â  Â  Â  Â  Â  The XSpreadsheet interface of the spreadsheet.</p>
     <p class="Code">Â  Â  @param aRange Â  Â  Â  Â  Â  The range address for the scenario.</p>
     <p class="Code">Â  Â  @param aValueArray Â  Â  Â The array of cell contents.</p>
     <p class="Code">Â  Â  @param aScenarioName Â  Â The name of the new scenario.</p>
     <p class="Code">Â  Â  @param aScenarioComment The user comment for the scenario.</p>
     <p class="Code">Â */</p>
     <p class="Code">public void insertScenario(Â </p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheet xSheet,</p>
     <p class="Code">Â  Â  Â  Â  String aRange,</p>
     <p class="Code">Â  Â  Â  Â  Object[][] aValueArray,</p>
     <p class="Code">Â  Â  Â  Â  String aScenarioName,</p>
     <p class="Code">Â  Â  Â  Â  String aScenarioComment ) throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  // get the cell range with the given address</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xCellRange = xSheet.getCellRangeByName(aRange);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // create the range address sequence</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeAddressable xAddr = (com.sun.star.sheet.XCellRangeAddressable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeAddressable.class, xCellRange);</p>
     <p class="Code">Â  Â  com.sun.star.table.CellRangeAddress[] aRangesSeq = new com.sun.star.table.CellRangeAddress[1];</p>
     <p class="Code">Â  Â  aRangesSeq[0] = xAddr.getRangeAddress();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // create the scenario</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XScenariosSupplier xScenSupp = (com.sun.star.sheet.XScenariosSupplier)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XScenariosSupplier.class, xSheet);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XScenarios xScenarios = xScenSupp.getScenarios();</p>
     <p class="Code">Â  Â  xScenarios.<span class="CODEEmphasis">addNewByName</span>(aScenarioName, aRangesSeq, aScenarioComment);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // insert the values into the range</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeData xData = (com.sun.star.sheet.XCellRangeData)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeData.class, xCellRange);</p>
     <p class="Code">Â  Â  xData.setDataArray(aValueArray);</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/Spreadsheet.html" title="see type com.sun.star.sheet.Spreadsheet">com.sun.star.sheet.Spreadsheet</a></span> implements the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XScenario.html" title="see type com.sun.star.sheet.XScenario">com.sun.star.sheet.XScenario</a></span> to modify an existing scenario:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P85" style="margin-left:2.5cm;"><p class="P85" style="margin-left:0cm;">The method <span class="Codeintext">getIsScenario()</span> tests if this spreadsheet is used to store scenario data.</p></li>
   <li class="P85" style="margin-left:2.5cm;"><p class="P85" style="margin-left:0cm;">The methods <span class="Codeintext">getScenarioComment()</span> and <span class="Codeintext">setScenarioComment()</span> retrieves and sets the user comment for this scenario.</p></li>
   <li class="P85" style="margin-left:2.5cm;"><p class="P85" style="margin-left:0cm;">The method <span class="Codeintext">addRanges()</span> adds new cell ranges to the scenario.</p></li>
   <li class="P85" style="margin-left:2.5cm;"><p class="P85" style="margin-left:0cm;">The method <span class="Codeintext">apply()</span> copies the data of this scenario to the spreadsheet containing the scenario set, that is, it makes the scenario visible.</p></li>
  </ul>
  <p class="P5">The following method shows how to activate a scenario: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table100"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">/** Activates a scenario.Â </p>
     <p class="Code">Â  Â  @param xSheet Â  Â  Â  Â  Â  The XSpreadsheet interface of the spreadsheet.</p>
     <p class="Code">Â  Â  @param aScenarioName Â  Â The name of the scenario.</p>
     <p class="Code">*/Â </p>
     <p class="Code">public void showScenario( com.sun.star.sheet.XSpreadsheet xSheet,Â </p>
     <p class="Code">Â  Â  Â  Â  String aScenarioName) throws RuntimeException, Exception {</p>
     <p class="Code">Â  Â  // get the scenario set</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XScenariosSupplier xScenSupp = (com.sun.star.sheet.XScenariosSupplier)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XScenariosSupplier.class, xSheet);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XScenarios xScenarios = xScenSupp.getScenarios();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // get the scenario and activate it</p>
     <p class="Code">Â  Â  Object aScenarioObj = xScenarios.getByName(aScenarioName);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XScenario xScenario = (com.sun.star.sheet.XScenario)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XScenario.class, aScenarioObj);</p>
     <p class="Code">Â  Â  xScenario.<span class="CODEEmphasis">apply</span>();</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <h2 class="Head2"><a name="1_4_Overall_Document_Features" />9.4Â Â Overall Document Features</h2>
  <h3 class="Head3"><a name="1_4_1_Styles" />9.4.1Â Â Styles</h3>
  <p class="P86">A style contains all formatting properties for a specific object. All styles of the same type are contained in a collection named a <span class="Emphasis">style family</span>. Each style family has a specific name to identify it in the collection. In OpenOffice.org API Calc, there are two style families named <span class="Emphasis">CellStyles</span> and <span class="Emphasis">PageStyles</span>. A cell style can be applied to a cell, a cell range, or all cells of the spreadsheet. A page style can be applied to a spreadsheet itself.</p>
  <div style="text-align:right"><table border="0" cellspacing="0" cellpadding="0" class="Table1"><colgroup><col width="820" /></colgroup><tr><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 11.705cm; " id="Frame44" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetStyleFamiliesUML.png" title="link to the full-sized graphic &quot;./SheetStyleFamiliesUML.png&quot;"><img border="0" width="532" height="573" alt="UML diagram showing the com.sun.star.style.StyleFamilies service" src="./9 Spreadsheet Documents_files/SheetStyleFamiliesUML.png" class="fr8" /></a>Illustration <a name="refIllustration41">9.42</a>: StyleFamilies</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The collection of style families is available from the spreadsheet document with the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/XStyleFamiliesSupplier.html" title="see type com.sun.star.style.XStyleFamiliesSupplier">com.sun.star.style.XStyleFamiliesSupplier</a></span>'s method <span class="Codeintext">getStyleFamilies()</span>. The general handling of styles is described in <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/Spreadsheet.xhtml#1_4_1_Styles" title="see chapter 9.4.1 Spreadsheet Documents - Overall Document Features - Styles">9.4.1 Spreadsheet Documents - Overall Document Features - Styles</a></span>, therefore this chapter focuses on the spreadsheet specific style properties.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table4"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table4A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table4B1">
      <p class="TipInTable">A new style is inserted into the family container,then it is possible to set any properties.Â </p>
     </td></tr></table></div>
  <h4 class="Head4"><a name="1_4_1_1_Cell_Styles" />Cell Styles</h4>
  <p class="Paragraph">Cell styles are predefined packages of format settings that are applied in a single step.Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table5"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 12.383cm; " id="Frame45" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetCellStyleUML.png" title="link to the full-sized graphic &quot;./SheetCellStyleUML.png&quot;"><img border="0" width="563" height="509" alt="UML diagram showing the com.sun.star.sheet.TableCellStyle service" src="./9 Spreadsheet Documents_files/SheetCellStyleUML.png" class="fr8" /></a>Illustration <a name="refIllustration42">9.43</a>: CellStyle</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">A cell style is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TableCellStyle.html" title="see type com.sun.star.sheet.TableCellStyle">com.sun.star.sheet.TableCellStyle</a></span>. If a formatting property is applied directly to a cell, it covers the property of the applied cell style. This service does not support the property <span class="Codeintext">CellStyle</span>. The name of the style is set with the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNamed.html" title="see type com.sun.star.container.XNamed">com.sun.star.container.XNamed</a></span>.</p>
  <p class="Paragraph">The following example creates a new cell style with gray background. The <span class="Codeintext">xDocument</span> is the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheetDocument.html" title="see type com.sun.star.sheet.XSpreadsheetDocument">com.sun.star.sheet.XSpreadsheetDocument</a></span> interface of a spreadsheet document. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table6"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // get the cell style container</p>
     <p class="Code">Â  Â  com.sun.star.style.XStyleFamiliesSupplier xFamiliesSupplier =</p>
     <p class="Code">Â  Â  Â  Â  (com.sun.star.style.XStyleFamiliesSupplier) UnoRuntime.queryInterface(</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  com.sun.star.style.XStyleFamiliesSupplier.class, xDocument);</p>
     <p class="Code">Â  Â  com.sun.star.container.XNameAccess xFamiliesNA = xFamiliesSupplier.getStyleFamilies();</p>
     <p class="Code">Â  Â  Object aCellStylesObj = xFamiliesNA.getByName("CellStyles");</p>
     <p class="Code">Â  Â  com.sun.star.container.XNameContainer xCellStylesNA = (com.sun.star.container.XNameContainer)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XNameContainer.class, aCellStylesObj);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // create a new cell style</p>
     <p class="Code">Â  Â  com.sun.star.lang.XMultiServiceFactory xServiceManager = (com.sun.star.lang.XMultiServiceFactory)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.lang.XMultiServiceFactory.class, xDocument);</p>
     <p class="Code">Â  Â  Object aCellStyle = xServiceManager.createInstance("com.sun.star.style.CellStyle");</p>
     <p class="Code">Â  Â  xCellStylesNA.insertByName("MyNewCellStyle", aCellStyle);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // modify properties of the new style</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, aCellStyle);</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("CellBackColor", new Integer(0x888888));</p>
     <p class="Code">Â  Â  xPropSet.setPropertyValue("IsCellBackgroundTransparent", new Boolean(false));</p>
    </td></tr></table></div>
  <h4 class="Head4"><a name="1_4_1_2_Page_Styles" />Page Styles</h4>
  <p class="P5">A page style is represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/TablePageStyle.html" title="see type com.sun.star.sheet.TablePageStyle">com.sun.star.sheet.TablePageStyle</a></span>. It contains the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/style/PageStyle.html" title="see type com.sun.star.style.PageStyle">com.sun.star.style.PageStyle</a></span> and additional spreadsheet specific page properties.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table7"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table7A1">
     <div class="Paragraph"><div style="width: 12.76cm; " id="Frame46" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SheetPageStyleUML.png" title="link to the full-sized graphic &quot;./SheetPageStyleUML.png&quot;"><img border="0" width="579" height="639" alt="UML diagram showing the com.sun.star.sheet.TablePageStyle service" src="./9 Spreadsheet Documents_files/SheetPageStyleUML.png" class="fr8" /></a>Illustration <a name="refIllustration43">9.44</a>: TablePageStyle</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The properties <span class="Codeintext">LeftPageFooterContent</span>, <span class="Codeintext">LeftPageHeaderContent</span>, <span class="Codeintext">RightPageFooterContent</span> and <span class="Codeintext">RightPageHeaderContent</span> return the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XHeaderFooterContent.html" title="see type com.sun.star.sheet.XHeaderFooterContent">com.sun.star.sheet.XHeaderFooterContent</a></span> for the headers and footers for the left and right pages. Headers and footers are represented by the service <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/HeaderFooterContent.html" title="see type com.sun.star.sheet.HeaderFooterContent">com.sun.star.sheet.HeaderFooterContent</a></span>. Each header or footer object contains three text objects for the left, middle and right portion of a header or footer. The methods <span class="Codeintext">getLeftText()</span>, <span class="Codeintext">getCenterText()</span> and <span class="Codeintext">getRightText()</span> return the interface <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/text/XText.html" title="see type com.sun.star.text.XText">com.sun.star.text.XText</a></span> of these text portions.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table8"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table8A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr4" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table8B1">
      <p class="TipInTable">After the text of a header or footer is changed, it is reinserted into the property set of the page style.Â </p>
     </td></tr></table></div>
  <h3 class="Head3"><a name="1_4_2_Function_Handling" />9.4.2Â Â Function Handling</h3>
  <p class="Paragraph">This section describes the services which handle spreadsheet functions.Â </p>
  <h4 class="Head4"><a name="1_4_2_1_Calculating_Function_Results" />Calculating Function Results</h4>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionAccess.html" title="see type com.sun.star.sheet.FunctionAccess">com.sun.star.sheet.FunctionAccess</a></span> service calls any spreadsheet function and gets its result without having to insert a formula into a spreadsheet document.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table3"><colgroup><col width="821" /></colgroup><tr class="Table31"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 11.523cm; " id="Frame47" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/FunctionHandlingUML1.png" title="link to the full-sized graphic &quot;./FunctionHandlingUML1.png&quot;"><img border="0" width="523" height="232" alt="UML diagram showing the com.sun.star.sheet.FunctionAccess service" src="./9 Spreadsheet Documents_files/FunctionHandlingUML1.png" class="fr8" /></a>Illustration <a name="refIllustration44">9.45</a>: FunctionAccess</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The service can be instantiated through the service manager. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XFunctionAccess.html" title="see type com.sun.star.sheet.XFunctionAccess">com.sun.star.sheet.XFunctionAccess</a></span> interface contains only one method, <span class="Codeintext">callFunction()</span>. The first parameter is the name of the function to call. The name has to be the function's programmatic name.</p>
  <ul style="margin-left:0.5cm;">
   <li class="P87" style="margin-left:2.5cm;"><p class="P87" style="margin-left:0cm;">For a built-in function, the English name is always used, regardless of the application's UI language.Â </p></li>
   <li class="P87" style="margin-left:2.5cm;"><p class="P87" style="margin-left:0cm;">For an add-in function, the complete internal name that is the add-in component's service name, followed by a dot and the function's name as defined in the interface. For the <span class="Codeintext">getIncremented</span> function in the example from the add-in section, this would be: â<span class="Codeintext">com.sun.star.sheet.addin.ExampleAddIn.getIncremented</span>â.</p></li>
  </ul>
  <p class="Paragraph">The second parameter to <span class="Codeintext">callFunction()</span> is a sequence containing the function arguments. The supported types for each argument are described in the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XFunctionAccess.html" title="see type com.sun.star.sheet.XFunctionAccess">com.sun.star.sheet.XFunctionAccess</a></span> interface description, and are similar to the argument types for add-in functions. The following example passes two arguments to the <span class="Codeintext">ZTEST</span> function, an array of values and a single value. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table115"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Calculate a function ---</p>
     <p class="Code">Â  Â  Object aFuncInst = xServiceManager.createInstance("com.sun.star.sheet.FunctionAccess");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XFunctionAccess xFuncAcc = (com.sun.star.sheet.XFunctionAccess)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XFunctionAccess.class, aFuncInst);</p>
     <p class="Code">Â  Â  // put the data into a two-dimensional array</p>
     <p class="Code">Â  Â  double[][] aData = {{1.0, 2.0, 3.0}};</p>
     <p class="Code">Â  Â  // construct the array of function arguments</p>
     <p class="Code">Â  Â  Object[] aArgs = new Object[2];</p>
     <p class="Code">Â  Â  aArgs[0] = aData;</p>
     <p class="Code">Â  Â  aArgs[1] = new Double( 2.0 );</p>
     <p class="Code">Â  Â  Object aResult = xFuncAcc.callFunction("ZTEST", aArgs);</p>
     <p class="Code">Â  Â  System.out.println("ZTEST result for data {1,2,3} and value 2 is "</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  + ((Double)aResult).doubleValue());</p>
    </td></tr></table></div>
  <p class="Standard">Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table116"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table116A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table116B1">
      <p class="TipInTable">The implementation of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionAccess.html" title="see type com.sun.star.sheet.FunctionAccess">com.sun.star.sheet.FunctionAccess</a></span> uses the same internal structures as a spreadsheet document, therefore it is bound by the same limitations, such as the limit of 32000 rows exist for the function arguments.</p>
     </td></tr></table></div>
  <h4 class="Head4"><a name="1_4_2_2_Information_about_Functions" />Information about Functions</h4>
  <p class="Paragraph">The services <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescriptions.html" title="see type com.sun.star.sheet.FunctionDescriptions">com.sun.star.sheet.FunctionDescriptions</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescription.html" title="see type com.sun.star.sheet.FunctionDescription">com.sun.star.sheet.FunctionDescription</a></span> provide help texts about the available spreadsheet cell functions, including add-in functions and their arguments. This is the same information that <span class="T2">OpenOffice.org</span> API Calc displays in the function AutoPilot.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table117"><colgroup><col width="821" /></colgroup><tr class="Table1171"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 12.24cm; " id="Frame48" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/FunctionHandlingUML2.png" title="link to the full-sized graphic &quot;./FunctionHandlingUML2.png&quot;"><img border="0" width="556" height="486" alt="UML diagram showing the com.sun.star.sheet.FunctionDescription service" src="./9 Spreadsheet Documents_files/FunctionHandlingUML2.png" class="fr27" /></a>Illustration <a name="refIllustration45">9.46</a>: FunctionDescriptions</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescriptions.html" title="see type com.sun.star.sheet.FunctionDescriptions">com.sun.star.sheet.FunctionDescriptions</a></span> service is instantiated through the service manager. It provides three different methods to access the information for the different functions:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P88" style="margin-left:2.5cm;"><p class="P88" style="margin-left:0cm;">By name through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XNameAccess.html" title="see type com.sun.star.container.XNameAccess">com.sun.star.container.XNameAccess</a></span> interface.</p></li>
   <li class="P88" style="margin-left:2.5cm;"><p class="P88" style="margin-left:0cm;">By index through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> interface.</p></li>
   <li class="P88" style="margin-left:2.5cm;"><p class="P88" style="margin-left:0cm;">By function identifier through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XFunctionDescriptions.html" title="see type com.sun.star.sheet.XFunctionDescriptions">com.sun.star.sheet.XFunctionDescriptions</a></span> interface's <span class="Codeintext">getById()</span> method. The function identifier is the same used in the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/RecentFunctions.html" title="see type com.sun.star.sheet.RecentFunctions">com.sun.star.sheet.RecentFunctions</a></span> service.</p></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescription.html" title="see type com.sun.star.sheet.FunctionDescription">com.sun.star.sheet.FunctionDescription</a></span> that is returned by any of these calls is a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/PropertyValue.html" title="see type com.sun.star.beans.PropertyValue">com.sun.star.beans.PropertyValue</a></span> structs. To access one of these properties, loop through the sequence, looking for the desired property's name in the <span class="Codeintext">Name</span> member. The <span class="Codeintext">Arguments</span> property contains a sequence of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionArgument.html" title="see type com.sun.star.sheet.FunctionArgument">com.sun.star.sheet.FunctionArgument</a></span> structs, one for each argument that the function accepts. The struct contains the name and description of the argument, as well as a boolean flag showing if the argument is optional.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table118"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table118A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table118B1">
      <p class="TipInTable">All of the strings contained in the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescription.html" title="see type com.sun.star.sheet.FunctionDescription">com.sun.star.sheet.FunctionDescription</a></span> service are to be used in user interaction, and therefore translated to the application's UI language. They cannot be used where programmatic function names are expected, for example, Â the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionAccess.html" title="see type com.sun.star.sheet.FunctionAccess">com.sun.star.sheet.FunctionAccess</a></span> service.</p>
     </td></tr></table></div>
  <p class="Paragraph">The Recently Used Functions section below provides an example on how to use the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescriptions.html" title="see type com.sun.star.sheet.FunctionDescriptions">com.sun.star.sheet.FunctionDescriptions</a></span> service.</p>
  <h4 class="Head4"><a name="1_4_2_3_Recently_Used_Functions" />Recently Used Functions</h4>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/RecentFunctions.html" title="see type com.sun.star.sheet.RecentFunctions">com.sun.star.sheet.RecentFunctions</a></span> service provides access to the list of recently used functions of the spreadsheet application, that is displayed in the <span class="ButtonsMenus">AutoPilot:Functions</span> and the <span class="ButtonsMenus">Function List</span> window for example.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table63"><colgroup><col width="821" /></colgroup><tr class="Table631"><td style="text-align:left;width:17.979cm; " class="Table63A1">
     <div class="Paragraph"><div style="width: 12.234cm; " id="Frame49" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/FunctionHandlingUML3.png" title="link to the full-sized graphic &quot;./FunctionHandlingUML3.png&quot;"><img border="0" width="555" height="243" alt="UML diagram showing the com.sun.star.sheet.RecentFunctions service" src="./9 Spreadsheet Documents_files/FunctionHandlingUML3.png" class="fr8" /></a>Illustration <a name="refIllustration46">9.47</a>: RecentFunctions</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The service can be instantiated through the service manager. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XRecentFunctions.html" title="see type com.sun.star.sheet.XRecentFunctions">com.sun.star.sheet.XRecentFunctions</a></span> interface's <span class="Codeintext">getRecentFunctionIds()</span> method returns a sequence of function identifiers that are used with the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescriptions.html" title="see type com.sun.star.sheet.FunctionDescriptions">com.sun.star.sheet.FunctionDescriptions</a></span> service. The <span class="Codeintext">setRecentFunctionIds()</span> method changes the list. If the parameter to the <span class="Codeintext">setRecentFunctionIds()</span> call contains more entries than the application handles, only the first entries are used. The maximum size of the list of recently used functions, currently 10, can be queried with the <span class="Codeintext">getMaxRecentFunctions()</span> method.</p>
  <p class="Paragraph">The following example demonstrates the use of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/RecentFunctions.html" title="see type com.sun.star.sheet.RecentFunctions">com.sun.star.sheet.RecentFunctions</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/FunctionDescriptions.html" title="see type com.sun.star.sheet.FunctionDescriptions">com.sun.star.sheet.FunctionDescriptions</a></span> services. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table120"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // --- Get the list of recently used functions ---</p>
     <p class="Code">Â  Â  Object aRecInst = xServiceManager.createInstance("com.sun.star.sheet.RecentFunctions");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XRecentFunctions xRecFunc = (com.sun.star.sheet.XRecentFunctions)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XRecentFunctions.class, aRecInst);</p>
     <p class="Code">Â  Â  int[] nRecentIds = xRecFunc.<span class="CODEEmphasis">getRecentFunctionIds</span>();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  // --- Get the names for these functions ---</p>
     <p class="Code">Â  Â  Object aDescInst = xServiceManager.createInstance("com.sun.star.sheet.FunctionDescriptions");</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XFunctionDescriptions xFuncDesc = (com.sun.star.sheet.XFunctionDescriptions)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XFunctionDescriptions.class, aDescInst);</p>
     <p class="Code">Â  Â  System.out.print("Recently used functions: ");</p>
     <p class="Code">Â  Â  for (int nFunction=0; nFunction&lt;nRecentIds.length; nFunction++) {</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.beans.PropertyValue[] aProperties = xFuncDesc.getById(nRecentIds[nFunction]);</p>
     <p class="Code">Â  Â  Â  Â  for (int nProp=0; nProp&lt;aProperties.length; nProp++)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  if (aProperties[nProp].Name.equals("Name"))</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  Â  Â  System.out.print(aProperties[nProp].Value + " ");</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  System.out.println();</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_4_3_Settings" />9.4.3Â Â Settings</h3>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/GlobalSheetSettings.html" title="see type com.sun.star.sheet.GlobalSheetSettings">com.sun.star.sheet.GlobalSheetSettings</a></span> service contains settings that affect the whole spreadsheet application. It can be instantiated through the service manager. The properties are accessed using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table163"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;width:17.979cm; " class="Table163A1">
      <div class="Paragraph"><div style="width: 12.472cm; " id="Frame12" class="fr28">
        <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/ApplicationSettingsUML.png" title="link to the full-sized graphic &quot;./ApplicationSettingsUML.png&quot;"><img border="0" width="567" height="269" alt="UML diagram showing the com.sun.star.sheet.GlobalSheetSettings service" src="./9 Spreadsheet Documents_files/ApplicationSettingsUML.png" class="fr29" /></a>Illustration <a name="refIllustration47">9.48</a>: GlobalSheetSettings</div>
       </div></div>
     </td></tr></table></div>
  <p class="Paragraph">The following example gets the list of user-defined sort lists from the settings and displays them: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/SpreadsheetSample.java" title="goto source Spreadsheet/SpreadsheetSample.java">Spreadsheet/SpreadsheetSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table122"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â // --- Get the user defined sort lists ---</p>
     <p class="Code">Â  Â  Object aSettings = xServiceManager.createInstance("com.sun.star.sheet.GlobalSheetSettings");</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xPropSet = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface( com.sun.star.beans.XPropertySet.class, aSettings );</p>
     <p class="Code">Â  Â  String[] aEntries = (String[]) xPropSet.getPropertyValue("UserLists");</p>
     <p class="Code">Â  Â  System.out.println("User defined sort lists:");</p>
     <p class="Code">Â  Â  for (int i=0; i&lt;aEntries.length; i++)</p>
     <p class="Code">Â  Â  Â  Â  System.out.println( aEntries[i] );</p>
    </td></tr></table></div>
  <h2 class="Head2"><a name="1_5_Spreadsheet_Document_Controller" />9.5Â Â Spreadsheet Document Controller</h2>
  <h3 class="Head3"><a name="1_5_1_Spreadsheet_View" />9.5.1Â Â Spreadsheet View</h3>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetView.html" title="see type com.sun.star.sheet.SpreadsheetView">com.sun.star.sheet.SpreadsheetView</a></span> service is the spreadsheet's extension of the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/frame/Controller.html" title="see type com.sun.star.frame.Controller">com.sun.star.frame.Controller</a></span> service and represents a table editing view for a spreadsheet document.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table71"><colgroup><col width="821" /></colgroup><tr class="Table711"><td style="text-align:left;width:17.979cm; " class="Table71A1">
     <div class="Paragraph"><div style="width: 14.157cm; " id="Frame51" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetViewUML1.png" title="link to the full-sized graphic &quot;./SpreadsheetViewUML1.png&quot;"><img border="0" width="645" height="820" alt="UML diagram showing the com.sun.star.sheet.SpreadsheetView service" src="./9 Spreadsheet Documents_files/SpreadsheetViewUML1.png" class="fr8" /></a>Illustration <a name="refIllustration48">9.49</a>: SpreadsheetView</div>
      </div></div>
    </td></tr></table></div>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table72"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table72A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table72B1">
      <p class="TipInTable">The page preview does not have an API representation.Â </p>
     </td></tr></table></div>
  <p class="Paragraph">The view object is the spreadsheet application's controller object as described in the chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/OfficeDev/OfficeDev.xhtml#1_1_1_2_1_Frame-Controller-Model_Paradigm" title="see chapter 7.1.1 Office Development - OpenOffice.org Application Environment - Overview - Framework API - Frame-Controller-Model Paradigm">7.1.1 Office Development - OpenOffice.org Application Environment - Overview - Framework API - Frame-Controller-Model Paradigm</a></span>. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/frame/XController.html" title="see type com.sun.star.frame.XController">com.sun.star.frame.XController</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/frame/XDispatchProvider.html" title="see type com.sun.star.frame.XDispatchProvider">com.sun.star.frame.XDispatchProvider</a></span> and <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/ui/XContextMenuInterception.html" title="see type com.sun.star.ui.XContextMenuInterception">com.sun.star.ui.XContextMenuInterception</a></span> interfaces work as described in that chapter.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/XSelectionSupplier.html" title="see type com.sun.star.view.XSelectionSupplier">com.sun.star.view.XSelectionSupplier</a></span> interface queries and modifies the view's selection. The selection in a spreadsheet view can be a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCell.html" title="see type com.sun.star.sheet.SheetCell">com.sun.star.sheet.SheetCell</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRange.html" title="see type com.sun.star.sheet.SheetCellRange">com.sun.star.sheet.SheetCellRange</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SheetCellRanges.html" title="see type com.sun.star.sheet.SheetCellRanges">com.sun.star.sheet.SheetCellRanges</a></span>, <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/drawing/Shape.html" title="see type com.sun.star.drawing.Shape">com.sun.star.drawing.Shape</a></span> or <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/drawing/Shapes.html" title="see type com.sun.star.drawing.Shapes">com.sun.star.drawing.Shapes</a></span> object.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XSpreadsheetView.html" title="see type com.sun.star.sheet.XSpreadsheetView">com.sun.star.sheet.XSpreadsheetView</a></span> interface gives access to the spreadsheet that is displayed in the view. The <span class="Codeintext">getActiveSheet()</span> method returns the active sheet's object, the <span class="Codeintext">setActiveSheet()</span> method switches to a different sheet. The parameter to <span class="Codeintext">setActiveSheet()</span> must be a sheet of the view's document.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XViewSplitable.html" title="see type com.sun.star.sheet.XViewSplitable">com.sun.star.sheet.XViewSplitable</a></span> interface splits a view into two parts or panes, horizontally and vertically. The <span class="Codeintext">splitAtPosition()</span> method splits the view at the specified pixel positions. To remove the split, a position of 0 is passed. The <span class="Codeintext">getIsWindowSplit()</span> method returns <span class="Codeintext">true</span> if the view is split, the <span class="Codeintext">getSplitHorizontal()</span> and <span class="Codeintext">getSplitVertical()</span> methods return the pixel positions where the view is split. The <span class="Codeintext">getSplitColumn()</span> and <span class="Codeintext">getSplitRow()</span> methods return the cell column or row that corresponds to the split position, and are used with frozen panes as discussed below.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XViewFreezable.html" title="see type com.sun.star.sheet.XViewFreezable">com.sun.star.sheet.XViewFreezable</a></span> interface is used to freeze a number of columns and rows in the left and upper part of the view. The <span class="Codeintext">freezeAtPosition()</span> method freezes the specified number of columns and rows. This also sets the split positions accordingly. The <span class="Codeintext">hasFrozenPanes()</span> method returns <span class="Codeintext">true</span> if the columns or rows are frozen. A view can only have frozen columns or rows, or normal split panes at a time.</p>
  <p class="Paragraph">If a view is split or frozen, it has up to four view pane objects that represent the individual parts. These are accessed using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/container/XIndexAccess.html" title="see type com.sun.star.container.XIndexAccess">com.sun.star.container.XIndexAccess</a></span> interface. If a view is not split, it contains only one pane object. The active pane of a spreadsheet view is also accessed using the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetViewPane.html" title="see type com.sun.star.sheet.SpreadsheetViewPane">com.sun.star.sheet.SpreadsheetViewPane</a></span> service's interfaces directly with the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetView.html" title="see type com.sun.star.sheet.SpreadsheetView">com.sun.star.sheet.SpreadsheetView</a></span> service that inherits them.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XRangeSelection.html" title="see type com.sun.star.sheet.XRangeSelection">com.sun.star.sheet.XRangeSelection</a></span> interface is explained in the âRange Selectionâ chapter below.</p>
  <p class="Paragraph">The following example uses the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XViewFreezable.html" title="see type com.sun.star.sheet.XViewFreezable">com.sun.star.sheet.XViewFreezable</a></span> interface to freeze the first column and the first two rows: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ViewSample.java" title="goto source Spreadsheet/ViewSample.java">Spreadsheet/ViewSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table73"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // freeze the first column and first two rows</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XViewFreezable xFreeze = (com.sun.star.sheet.XViewFreezable)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XViewFreezable.class, xController);</p>
     <p class="Code">Â  Â  xFreeze.freezeAtPosition(1, 2);</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_5_2_View_Panes" />9.5.2Â Â View Panes</h3>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetViewPane.html" title="see type com.sun.star.sheet.SpreadsheetViewPane">com.sun.star.sheet.SpreadsheetViewPane</a></span> service represents a pane in a view that shows a rectangular area of the document. The exposed area of a view pane always starts at a cell boundary. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XViewPane.html" title="see type com.sun.star.sheet.XViewPane">com.sun.star.sheet.XViewPane</a></span> interface's <span class="Codeintext">getFirstVisibleColumn()</span>, <span class="Codeintext">getFirstVisibleRow()</span>, <span class="Codeintext">setFirstVisibleColumn()</span> and <span class="Codeintext">setFirstVisibleRow()</span> methods query and set the start of the exposed area. The <span class="Codeintext">getVisibleRange()</span> method returns a <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/table/CellRangeAddress.html" title="see type com.sun.star.table.CellRangeAddress">com.sun.star.table.CellRangeAddress</a></span> struct describing which cells are shown in the pane. Columns or rows that are only partly visible at the right or lower edge of the view are not included.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCellRangeReferrer.html" title="see type com.sun.star.sheet.XCellRangeReferrer">com.sun.star.sheet.XCellRangeReferrer</a></span> interface gives direct access to the same cell range of exposed cells that are addressed by the Â <span class="Codeintext">getVisibleRange()</span> return value.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/view/XControlAccess.html" title="see type com.sun.star.view.XControlAccess">com.sun.star.view.XControlAccess</a></span> interface's <span class="Codeintext">getControl()</span> method gives access to a control model's control for the view pane. Refer to the chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Forms/Forms.xhtml#1_2_Models_and_Views" title="see chapter 14.2 Forms - Models and Views">14.2 Forms - Models and Views</a></span> for additional information.</p>
  <p class="Paragraph">The example below retrieves the cell range that is shown in the second pane. It is the lower left one after freezing both columns and rows, and assigns a cell background: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ViewSample.java" title="goto source Spreadsheet/ViewSample.java">Spreadsheet/ViewSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table74"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // get the cell range shown in the second pane and assign a cell background to them</p>
     <p class="Code">Â  Â  com.sun.star.container.XIndexAccess xIndex = (com.sun.star.container.XIndexAccess)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.container.XIndexAccess.class, xController);</p>
     <p class="Code">Â  Â  Object aPane = xIndex.getByIndex(1);</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XCellRangeReferrer xRefer = (com.sun.star.sheet.XCellRangeReferrer)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XCellRangeReferrer.class, aPane);</p>
     <p class="Code">Â  Â  com.sun.star.table.XCellRange xRange = xRefer.getReferredCells();</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xRangeProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xRange);</p>
     <p class="Code">Â  Â  xRangeProp.setPropertyValue("IsCellBackgroundTransparent", new Boolean(false));</p>
     <p class="Code">Â  Â  xRangeProp.setPropertyValue("CellBackColor", new Integer(0xFFFFCC));</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_5_3_View_Settings" />9.5.3Â Â View Settings</h3>
  <p class="Paragraph">The properties from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/SpreadsheetViewSettings.html" title="see type com.sun.star.sheet.SpreadsheetViewSettings">com.sun.star.sheet.SpreadsheetViewSettings</a></span> service are accessed through the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/beans/XPropertySet.html" title="see type com.sun.star.beans.XPropertySet">com.sun.star.beans.XPropertySet</a></span> interface controlling the appearance of the view. Most of the properties correspond to settings in the options dialog. The <span class="Codeintext">ShowObjects</span>, <span class="Codeintext">ShowCharts</span> and <span class="Codeintext">ShowDrawing</span> properties take values of 0 for âshowâ, 1 for âhideâ, and 2 for âplaceholder displayâ.</p>
  <p class="Paragraph">The following example changes the view to display green grid lines: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ViewSample.java" title="goto source Spreadsheet/ViewSample.java">Spreadsheet/ViewSample.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table75"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // change the view to display green grid lines</p>
     <p class="Code">Â  Â  com.sun.star.beans.XPropertySet xProp = (com.sun.star.beans.XPropertySet)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.beans.XPropertySet.class, xController);</p>
     <p class="Code">Â  Â  xProp.setPropertyValue("ShowGrid", new Boolean(true));</p>
     <p class="Code">Â  Â  xProp.setPropertyValue("GridColor", new Integer(0x00CC00));</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_5_4_Range_Selection" />9.5.4Â Â Range Selection</h3>
  <p class="Paragraph">The view's <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XRangeSelection.html" title="see type com.sun.star.sheet.XRangeSelection">com.sun.star.sheet.XRangeSelection</a></span> interface is used to let a user interactively select a cell range in the view, independently of the view's selection. This is used for dialogs that require a cell reference as input. While the range selection is active, a small dialog is shown, similar to the minimized state of <span class="T2">OpenOffice.org</span> API's own dialogs that allow cell reference input.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table76"><colgroup><col width="821" /></colgroup><tr class="Table761"><td style="text-align:left;width:17.979cm; " class="Table76A1">
     <div class="Paragraph"><div style="width: 12.04cm; " id="Frame52" class="fr2">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/SpreadsheetViewUML2.png" title="link to the full-sized graphic &quot;./SpreadsheetViewUML2.png&quot;"><img border="0" width="548" height="275" alt="UML diagram showing the com.sun.star.sheet.RangeSelectionArguments service" src="./9 Spreadsheet Documents_files/SpreadsheetViewUML2.png" class="fr8" /></a>Illustration <a name="refIllustration49">9.50</a>: XRangeSelection interface</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">Before the range selection mode is started, a listener is registered using the <span class="Codeintext">addRangeSelectionListener()</span> method. The listener implements the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XRangeSelectionListener.html" title="see type com.sun.star.sheet.XRangeSelectionListener">com.sun.star.sheet.XRangeSelectionListener</a></span> interface. Its <span class="Codeintext">done()</span> or <span class="Codeintext">aborted()</span> method is called when the selection is finished or aborted. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/RangeSelectionEvent.html" title="see type com.sun.star.sheet.RangeSelectionEvent">com.sun.star.sheet.RangeSelectionEvent</a></span> struct that is passed to the calls contains the selected range in the <span class="Codeintext">RangeDescriptor</span> member. It is a string because the user can Â  type into the minimized dialog during range selection.</p>
  <p class="Paragraph">In the following example, the listener implementation stores the result in a member in the <span class="Codeintext">done()</span> method, and notifies the main thread about the completion of the selection in the <span class="Codeintext">done()</span> and <span class="Codeintext">aborted()</span> methods: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ViewSample.java" title="goto source Spreadsheet/ViewSample.java">Spreadsheet/ViewSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table77"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">private class ExampleRangeListener implements com.sun.star.sheet.XRangeSelectionListener {Â </p>
     <p class="Code">Â  Â  public String aResult;</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public void done(com.sun.star.sheet.RangeSelectionEvent aEvent) {</p>
     <p class="Code">Â  Â  Â  Â  aResult = aEvent.RangeDescriptor;</p>
     <p class="Code">Â  Â  Â  Â  synchronized (this) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  notify();</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public void aborted( com.sun.star.sheet.RangeSelectionEvent aEvent ) {</p>
     <p class="Code">Â  Â  Â  Â  synchronized (this) {</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  notify();</p>
     <p class="Code">Â  Â  Â  Â  }</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public void disposing( com.sun.star.lang.EventObject aObj ) {</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">It is also possible to add another listener using the <span class="Codeintext">addRangeSelectionChangeListener()</span> method. This listener implements the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XRangeSelectionChangeListener.html" title="see type com.sun.star.sheet.XRangeSelectionChangeListener">com.sun.star.sheet.XRangeSelectionChangeListener</a></span> interface, and its <span class="Codeintext">descriptorChanged()</span> method is called during the selection when the selection changes. Using this listener normally is not necessary.</p>
  <p class="Paragraph">After registering the listeners, the range selection mode is started using the <span class="Codeintext">startRangeSelection()</span> method. The parameter to that method is a Â sequence of property values with properties from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/RangeSelectionArguments.html" title="see type com.sun.star.sheet.RangeSelectionArguments">com.sun.star.sheet.RangeSelectionArguments</a></span> service:</p>
  <ul style="margin-left:0.5cm;">
   <li class="P89" style="margin-left:2.5cm;"><p class="P89" style="margin-left:0cm;"><span class="Codeintext">InitialValue</span> specifies an existing selection value that is shown in the dialog and highlighted in the view when the selection mode is started.</p></li>
   <li class="P89" style="margin-left:2.5cm;"><p class="P89" style="margin-left:0cm;"><span class="Codeintext">Title</span> is the title for the range selection dialog.</p></li>
   <li class="P89" style="margin-left:2.5cm;"><p class="P89" style="margin-left:0cm;"><span class="Codeintext">CloseOnMouseRelease</span> specifies when the selection mode is ended. If the value is <span class="Codeintext">true</span>, selection is ended when the mouse button is released after selecting a cell range. If it is <span class="Codeintext">false</span> or not specified, the user presses the <span class="T6">Shrink</span> button in the dialog to end selection mode.</p></li>
  </ul>
  <p class="Paragraph">The <span class="Codeintext">startRangeSelection()</span> method returns immediately after starting the range selection mode. This allows it to be called from a dialog's event handler. The <span class="Codeintext">abortRangeSelection()</span> method is used to cancel the range selection mode programmatically.</p>
  <p class="Paragraph">The following example lets the user pick a range, and then selects that range in the view. Note that the use of <span class="Codeintext">wait</span> to wait for the end of the selection is not how a GUI application normally handles the events. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ViewSample.java" title="goto source Spreadsheet/ViewSample.java">Spreadsheet/ViewSample.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table78"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  // let the user select a range and use it as the view's selection</p>
     <p class="Code">Â  Â  com.sun.star.sheet.XRangeSelection xRngSel = (com.sun.star.sheet.XRangeSelection)</p>
     <p class="Code">Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XRangeSelection.class, xController);</p>
     <p class="Code">Â  Â  ExampleRangeListener aListener = new ExampleRangeListener();</p>
     <p class="Code">Â  Â  xRngSel.addRangeSelectionListener(aListener);</p>
     <p class="Code">Â  Â  com.sun.star.beans.PropertyValue[] aArguments = new com.sun.star.beans.PropertyValue[2];</p>
     <p class="Code">Â  Â  aArguments[0] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aArguments[0].Name Â  = "Title";</p>
     <p class="Code">Â  Â  aArguments[0].Value Â = "Please select a range";</p>
     <p class="Code">Â  Â  aArguments[1] = new com.sun.star.beans.PropertyValue();</p>
     <p class="Code">Â  Â  aArguments[1].Name Â  = "CloseOnMouseRelease";</p>
     <p class="Code">Â  Â  aArguments[1].Value Â = new Boolean(true);</p>
     <p class="Code">Â  Â  xRngSel.startRangeSelection(aArguments);</p>
     <p class="Code">Â  Â  synchronized (aListener) {</p>
     <p class="Code">Â  Â  Â  Â  aListener.wait(); Â  Â  Â  // wait until the selection is done</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  xRngSel.removeRangeSelectionListener(aListener);</p>
     <p class="Code">Â  Â  if (aListener.aResult != null &amp;&amp; aListener.aResult.length() != 0)</p>
     <p class="Code">Â  Â  {</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.view.XSelectionSupplier xSel = (com.sun.star.view.XSelectionSupplier)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.view.XSelectionSupplier.class, xController);</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheetView xView = (com.sun.star.sheet.XSpreadsheetView)</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  UnoRuntime.queryInterface(com.sun.star.sheet.XSpreadsheetView.class, xController);</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.XSpreadsheet xSheet = xView.getActiveSheet();</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.table.XCellRange xResultRange = xSheet.getCellRangeByName(aListener.aResult);</p>
     <p class="Code">Â  Â  Â  Â  xSel.select(xResultRange);</p>
     <p class="Code">Â  Â  }</p>
    </td></tr></table></div>
  <h2 class="Head2"><a name="1_6_Spreadsheet_Add-Ins" />9.6Â Â Spreadsheet Add-Ins</h2>
  <p class="Paragraph">An add-in component is used to add new functions to the spreadsheet application that can be used in cell formulas, such as the built-in functions. A spreadsheet add-in is a UNO component. The chapter <span class="ChapterRef"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Components/Components.xhtml#1_Writing_UNO_Components" title="see chapter 4 Writing UNO Components">4 Writing UNO Components</a></span> describes how to write and deploy a UNO component.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table123"><colgroup><col width="821" /></colgroup><tr class="Table1231"><td style="text-align:left;">
     <div class="Paragraph"><div style="width: 12.391cm; " id="Frame141" class="fr17">
       <div class="Illustration"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Spreadsheet/AddInUML.png" title="link to the full-sized graphic &quot;./AddInUML.png&quot;"><img border="0" width="562" height="312" alt="UML diagram showing the com.sun.star.sheet.Addin service" src="./9 Spreadsheet Documents_files/AddInUML.png" class="fr8" /></a>Illustration <a name="refIllustration50">9.51</a>: AddIn</div>
      </div></div>
    </td></tr></table></div>
  <p class="Paragraph">The functions that the add-in component exports to the spreadsheet application have to be defined in a new interface. The function names in the interface, together with the component's service name, are used internally to identify an add-in function. For a list of the supported types for function arguments and return values, see the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/AddIn.html" title="see type com.sun.star.sheet.AddIn">com.sun.star.sheet.AddIn</a></span> service description. An example interface that defines two functions is similar to the following code: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/XExampleAddIn.idl" title="goto source Spreadsheet/XExampleAddIn.idl">Spreadsheet/XExampleAddIn.idl</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table124"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">#include &lt;com/sun/star/uno/XInterface.idl&gt;Â </p>
     <p class="Code">#include &lt;com/sun/star/sheet/XVolatileResult.idl&gt;Â </p>
     <p class="Code">Â </p>
     <p class="Code">module com { module sun { module star { module sheet { module addin {Â </p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  interface XExampleAddIn : com::sun::star::uno::XInterface</p>
     <p class="Code">Â  Â  {</p>
     <p class="Code">Â  Â  Â  Â  /// Sample function that just increments a value.</p>
     <p class="Code">Â  Â  Â  Â  long getIncremented( [in] long nValue );</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  /// Sample function that returns a volatile result.</p>
     <p class="Code">Â  Â  Â  Â  com::sun::star::sheet::XVolatileResult getCounter( [in] string aName );</p>
     <p class="Code">Â  Â  };</p>
     <p class="Code">Â </p>
     <p class="Code">}; }; }; }; };Â </p>
    </td></tr></table></div>
  <p class="Paragraph">In addition to this interface, the add-in has to implement the interfaces from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/AddIn.html" title="see type com.sun.star.sheet.AddIn">com.sun.star.sheet.AddIn</a></span> service and the usual interfaces every component has to support.</p>
  <h3 class="Head3"><a name="1_6_1_Function_Descriptions" />9.6.1Â Â Function Descriptions</h3>
  <p class="Paragraph">The methods from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XAddIn.html" title="see type com.sun.star.sheet.XAddIn">com.sun.star.sheet.XAddIn</a></span> interface are used to provide descriptions of the user-visible functions.</p>
  <p class="Paragraph">The <span class="Codeintext">getDisplayFunctionName()</span> and <span class="Codeintext">getProgrammaticFuntionName()</span> methods are used to map between the internal function name, as defined in the interface and the function name as shown to the user of the spreadsheet application. The user-visible name, as well as the function and argument descriptions, can be translated strings for the language which is set using <span class="Codeintext">setLocale()</span>.</p>
  <p class="Paragraph">The <span class="Codeintext">getProgrammaticCategoryName()</span> method sorts each add-in functions into one of the spreadsheet application's function categories. It returns the category's internal (non-translated) name. In addition, the <span class="Codeintext">getDisplayCategoryName()</span> method provides a translated name for the category.</p>
  <p class="Paragraph">The <span class="Codeintext">getFunctionDescription()</span>, <span class="Codeintext">getDisplayArgumentName()</span> and <span class="Codeintext">getArgumentDescription()</span> methods provide descriptions of the function and its arguments that are shown to the user, for example in the function AutoPilot.</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table125"><colgroup><col width="112" /><col width="709" /></colgroup><tr><td style="text-align:left;width:2.45cm; " class="Table125A1">
      <div class="TableContents"><img width="39" height="39" alt="Note graphics marks a special text section" src="./9 Spreadsheet Documents_files/interesting.gif" class="fr18" /></div>
     </td><td style="text-align:left;width:15.529cm; " class="Table125B1">
      <p class="TipInTable">The <span class="Codeintext">getProgrammaticFuntionName()</span> method name is misspelled, but the wrong spelling has to be retained for compatibility reasons.</p>
     </td></tr></table></div>
  <h3 class="Head3"><a name="1_6_2_Service_Names" />9.6.2Â Â Service Names</h3>
  <p class="Paragraph">The add-in component has to support two services, the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/AddIn.html" title="see type com.sun.star.sheet.AddIn">com.sun.star.sheet.AddIn</a></span> service, and an additional service that is used to identify the set of functions that the add-in supplies. There may be several implementations of the same set of functions. In that case, they all use the same service name, but different implementation names. Therefore, a spreadsheet document that uses the functions can make use of the implementation that is present.</p>
  <p class="Paragraph">The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/lang/XServiceInfo.html" title="see type com.sun.star.lang.XServiceInfo">com.sun.star.lang.XServiceInfo</a></span> methods <span class="Codeintext">supportsService()</span> and <span class="Codeintext">getSupportedServiceNames()</span> handle both service names, and the component also has to be registered for both services. In addition, the component has to implement the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/lang/XServiceName.html" title="see type com.sun.star.lang.XServiceName">com.sun.star.lang.XServiceName</a></span> interface, and in its <span class="Codeintext">getServiceName()</span> method return the name of the function-specific service.</p>
  <h3 class="Head3"><a name="1_6_3_Compatibility_Names" />9.6.3Â Â Compatibility Names</h3>
  <p class="Paragraph">Optionally, the component can implement the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XCompatibilityNames.html" title="see type com.sun.star.sheet.XCompatibilityNames">com.sun.star.sheet.XCompatibilityNames</a></span> interface, and in the <span class="Codeintext">getCompatibilityNames()</span> method return a sequence of locale-dependent compatibility names for a function. These names are used by the spreadsheet application when loading or saving Excel files. They should only be present for a function if it is known to be an Excel add-in function with equivalent functionality.</p>
  <p class="Paragraph">The sequence of compatibility names for a function may contain several names for a single locale. In that case, all of these names are considered when importing a file. When exporting, the first name is used. If a file is exported in a locale for which no entry is present, the first entry is used. If there is a default locale, the entries for that locale are first in the sequence.Â </p>
  <h3 class="Head3"><a name="1_6_4_Custom_Functions" />9.6.4Â Â Custom Functions</h3>
  <p class="Paragraph">The user-visible functions have to be implemented as defined in the interface. The spreadsheet application does the necessary conversions to pass the arguments. For example, floating point numbers are rounded if a function has integer arguments. To enable the application to find the functions, it is important that the component implements the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/lang/XTypeProvider.html" title="see type com.sun.star.lang.XTypeProvider">com.sun.star.lang.XTypeProvider</a></span> interface.</p>
  <p class="Paragraph">The <span class="Codeintext">getIncremented()</span> function from the example interface above can be implemented like this: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleAddIn.java" title="goto source Spreadsheet/ExampleAddIn.java">Spreadsheet/ExampleAddIn.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table126"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">Â  Â  public int getIncremented( int nValue ) {</p>
     <p class="Code">Â  Â  Â  Â  return nValue + 1;</p>
     <p class="Code">Â  Â  }</p>
    </td></tr></table></div>
  <h3 class="Head3"><a name="1_6_5_Variable_Results" />9.6.5Â Â Variable Results</h3>
  <p class="Paragraph">It is also possible to implement functions with results that change over time. Whenever such a result changes, the formulas that use the result are recalculated and the new values are shown in the spreadsheet. This can be used to display data from a real-time data feed in a spreadsheet.Â </p>
  <p class="Paragraph">In its interface, a function with a variable result must be defined with a return type of <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XVolatileResult.html" title="see type com.sun.star.sheet.XVolatileResult">com.sun.star.sheet.XVolatileResult</a></span>, such as the <span class="Codeintext">getCounter()</span> function from the example interface above. The function's implementation must return an object that implements the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/VolatileResult.html" title="see type com.sun.star.sheet.VolatileResult">com.sun.star.sheet.VolatileResult</a></span> service. Subsequent calls to the same function with the same arguments return the same object. An implementation that returns a different result object for every name looks like this: (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleAddIn.java" title="goto source Spreadsheet/ExampleAddIn.java">Spreadsheet/ExampleAddIn.java</a>)</p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table127"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">private java.util.Hashtable aResults = new java.util.Hashtable();Â </p>
     <p class="Code">Â </p>
     <p class="Code">public com.sun.star.sheet.XVolatileResult getCounter(String aName) {Â </p>
     <p class="Code">Â  Â  ExampleAddInResult aResult = (ExampleAddInResult) aResults.get(aName);</p>
     <p class="Code">Â  Â  if (aResult == null) {</p>
     <p class="Code">Â  Â  Â  Â  aResult = new ExampleAddInResult(aName);</p>
     <p class="Code">Â  Â  Â  Â  aResults.put(aName, aResult);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â  Â  return aResult;</p>
     <p class="Code">}Â </p>
    </td></tr></table></div>
  <p class="Paragraph">The result object has to implement the <span class="Codeintext">addResultListener()</span> and <span class="Codeintext">removeResultListener()</span> methods from the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XVolatileResult.html" title="see type com.sun.star.sheet.XVolatileResult">com.sun.star.sheet.XVolatileResult</a></span> interface to maintain a list of listeners, and notify each of these listeners by calling the <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/XResultListener.html" title="see type com.sun.star.sheet.XResultListener">com.sun.star.sheet.XResultListener</a></span> interface's <span class="Codeintext">modified()</span> method whenever a new result is available. The <span class="Codeintext"><a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/common/ref/com/sun/star/sheet/ResultEvent.html" title="see type com.sun.star.sheet.ResultEvent">com.sun.star.sheet.ResultEvent</a></span> object that is passed to the <span class="Codeintext">modified()</span> call must contain the new result in the <span class="Codeintext">Value</span> member. The possible types for the result are the same as for a function's return value if no volatile results are involved.</p>
  <p class="Paragraph">If a result is already available when <span class="Codeintext">addResultListener()</span> is called, it can be publicized by immediately calling <span class="Codeintext">modified()</span> for the new listener. Otherwise, the spreadsheet application displays a â#N/Aâ error value until a result is available.</p>
  <p class="Paragraph">The following example shows a simple implementation of a result object. Every time the incrementValue method is called, for example, from a background thread, the result value is incremented and the listeners are notified. (<a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/examples/DevelopersGuide/Spreadsheet/ExampleAddIn.java" title="goto source Spreadsheet/ExampleAddIn.java">Spreadsheet/ExampleAddIn.java</a>)Â </p>
  <div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table128"><colgroup><col width="821" /></colgroup><tr><td style="text-align:left;">
     <p class="Code">class ExampleAddInResult implements com.sun.star.sheet.XVolatileResult {Â </p>
     <p class="Code">Â  Â  private String aName;</p>
     <p class="Code">Â  Â  private int nValue;</p>
     <p class="Code">Â  Â  private java.util.Vector aListeners = new java.util.Vector();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public ExampleAddInResult(String aNewName) {</p>
     <p class="Code">Â  Â  Â  Â  aName = aNewName;</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  private com.sun.star.sheet.ResultEvent getResult() {</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.ResultEvent aEvent = new com.sun.star.sheet.ResultEvent();</p>
     <p class="Code">Â  Â  Â  Â  aEvent.Value = aName + " " + String.valueOf(nValue);</p>
     <p class="Code">Â  Â  Â  Â  aEvent.Source = this;</p>
     <p class="Code">Â  Â  Â  Â  return aEvent;</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public void addResultListener(com.sun.star.sheet.XResultListener aListener) {</p>
     <p class="Code">Â  Â  Â  Â  aListeners.addElement(aListener);</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  // immediately notify of initial value</p>
     <p class="Code">Â  Â  Â  Â  aListener.modified(getResult());</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public void removeResultListener(com.sun.star.sheet.XResultListener aListener) {</p>
     <p class="Code">Â  Â  Â  Â  aListeners.removeElement(aListener);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  public void incrementValue() {</p>
     <p class="Code">Â  Â  Â  Â  ++nValue;</p>
     <p class="Code">Â  Â  Â  Â  com.sun.star.sheet.ResultEvent aEvent = getResult();</p>
     <p class="Code">Â </p>
     <p class="Code">Â  Â  Â  Â  java.util.Enumeration aEnum = aListeners.elements();</p>
     <p class="Code">Â  Â  Â  Â  while (aEnum.hasMoreElements())</p>
     <p class="Code">Â  Â  Â  Â  Â  Â  ((com.sun.star.sheet.XResultListener)aEnum.nextElement()).modified(aEvent);</p>
     <p class="Code">Â  Â  }</p>
     <p class="Code">}Â </p>
     <p class="Paragraph">Â </p>
    </td></tr></table></div>
  <p class="P90">Â </p>
 <p style="text-align:center;"><small>[ <a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Text/Text.xhtml" title="Link to previous document">Previous document</a> | <a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/DevelopersGuide.xhtml" title="Link to the Content Table">Content Table</a> | <a href="http://replay.waybackmachine.org/20090426014116/http://api.openoffice.org/docs/DevelopersGuide/Drawing/Drawing.xhtml" title="Link to next document">Next document</a> ]</small></p></body></html>